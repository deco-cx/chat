---
export const prerender = false; // client-only reset
---
<html lang="pt-BR">
  <head>
    <meta charset="utf-8" />
    <title>Redefinir senha</title>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="stylesheet" href="/theme.css" />
    <style>
      body { margin:0; min-height:100dvh; display:flex; align-items:center; justify-content:center; padding:2.4rem 1.2rem; }
      .auth-wrap { width:100%; max-width:500px; }
      h1 { margin:0 0 1.4rem; font-size:clamp(1.9rem,4.2vw,2.5rem); line-height:1.08; background:linear-gradient(90deg,var(--grad-c),var(--grad-a)); -webkit-background-clip:text; color:transparent; }
      .panel { position:relative; border:1px solid var(--color-border); background:var(--color-surface-glass); backdrop-filter:blur(26px) saturate(160%); padding:2rem 2.1rem 2.3rem; border-radius:32px; box-shadow:var(--shadow-card); }
      form { display:flex; flex-direction:column; gap:1rem; }
      label span { font-size:.7rem; letter-spacing:.6px; font-weight:600; text-transform:uppercase; color:var(--color-text-muted); }
      input { width:100%; padding:14px 16px; border:1px solid rgba(255,255,255,.14); border-radius:14px; background:#0f172a; color:var(--color-text); font-size:.9rem; font-family:inherit; }
      input:focus { outline:2px solid var(--grad-c); outline-offset:2px; border-color:var(--grad-c); }
      .btn-submit { all:unset; cursor:pointer; text-align:center; padding:15px 22px; border-radius:16px; font-weight:600; font-size:.9rem; background:linear-gradient(90deg,var(--grad-c),var(--grad-a)); box-shadow:0 10px 34px -14px rgba(37,99,235,.55); }
      .btn-submit:hover { transform:translateY(-2px); }
      .meta { margin-top:1rem; font-size:.75rem; color:var(--color-text-muted); }
      .meta a { color:var(--grad-a); text-decoration:none; }
      .alert { padding:.85rem 1rem; border-radius:16px; font-size:.8rem; line-height:1.35; margin:-.35rem 0 1.1rem; font-weight:500; }
      .alert.err { background:rgba(220,38,38,.12); border:1px solid rgba(220,38,38,.4); color:#fecaca; }
      .alert.info { background:rgba(34,197,94,.12); border:1px solid rgba(34,197,94,.5); color:#bbf7d0; }
      nav { position:absolute; top:1rem; right:1.2rem; font-size:.65rem; letter-spacing:.5px; text-transform:uppercase; display:flex; gap:.9rem; }
      nav a { color:var(--color-text-soft); text-decoration:none; font-weight:600; opacity:.85; }
      nav a:hover { opacity:1; }
    </style>
  </head>
  <body>
  <a href="#main" class="skip-link">Pular para conteúdo</a>
  <div class="auth-wrap" id="main" role="main">
      <div class="panel">
        <nav>
          <a href="/">Home</a>
          <a href="/login">Login</a>
        </nav>
        <h1>Redefinir senha</h1>
  <div id="reset-alert" class="alert err" style="display:none"></div>
  <div id="reset-info" class="alert info" style="display:none"></div>
  <form id="reset-form" aria-describedby="reset-desc" novalidate>
          <p id="reset-desc" class="visually-hidden">Solicitar email com link para redefinir senha da conta existente.</p>
          <label>
            <span>Email</span>
            <input name="email" type="email" required autocomplete="email" />
          </label>
          <button type="submit" class="btn-submit">Enviar link de redefinição</button>
          <div class="meta">Lembrou? <a href="/login">Login</a></div>
        </form>
      </div>
    </div>
    <script type="module">
      (async ()=>{
        const form = document.getElementById('reset-form');
        const alertEl = document.getElementById('reset-alert');
        const infoEl = document.getElementById('reset-info');
        let supa;
        try {
          const { loadSupabase } = await import('../lib/supabaseClient.ts');
          supa = await loadSupabase();
        } catch (e) {
          console.error('[reset] supabase init falhou', e);
          alertEl.textContent='Auth indisponível'; alertEl.style.display='block';
          return;
        }
        form?.addEventListener('submit', async (e)=>{
          e.preventDefault();
          const fd = new FormData(form);
          const email = fd.get('email')?.toString()||'';
          if(!email){ alertEl.textContent='Informe email'; alertEl.style.display='block'; infoEl.style.display='none'; return; }
          alertEl.style.display='none'; infoEl.style.display='none';
          try {
            const { error } = await supa.auth.resetPasswordForEmail(email, { redirectTo: location.origin + '/login' });
            if(error){ alertEl.textContent = error.message; alertEl.style.display='block'; }
            else { infoEl.textContent='Se o email existir, enviamos link de redefinição.'; infoEl.style.display='block'; }
          } catch(err){ alertEl.textContent='Falha inesperada'; alertEl.style.display='block'; }
        });
      })();
    </script>
  </body>
</html>
