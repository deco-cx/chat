---
// Dynamic (no prerender) because it depends on auth/localStorage and dynamic tool calls
import AnalysisDashboard from "../components/AnalysisDashboard.astro";
import SavedAnalysesClient from "../components/SavedAnalysesClient.astro";
const q = new URL(Astro.request.url).searchParams;
const requested = q.get('url');
let initial: any = null; // será carregado no cliente
---
<html lang="pt-BR">
  <head>
    <meta charset="utf-8" />
    <title>Área Detalhada - SEO</title>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="stylesheet" href="/theme.css" />
    <style>
      body { margin:0; font-family:var(--font-sans); max-width:1380px; padding:1.8rem clamp(1rem,2.4vw,2.2rem) 4rem; }
      .top-nav { display:flex; gap:1.2rem; align-items:center; margin-bottom:1.4rem; font-size:.65rem; text-transform:uppercase; letter-spacing:.55px; }
      .top-nav a { text-decoration:none; color:var(--color-text-soft); font-weight:600; opacity:.88; }
      .top-nav a:hover { opacity:1; }
      header h1 { margin:0; font-size:clamp(2.2rem,4.5vw,3.4rem); line-height:1.03; background:linear-gradient(90deg,var(--grad-b),var(--grad-a),var(--grad-c)); -webkit-background-clip:text; color:transparent; }
      header p { margin:.9rem 0 0; max-width:860px; font-size:.95rem; line-height:1.6; color:#9db4c8; }
      .badge { font-size:.55rem; letter-spacing:1px; text-transform:uppercase; background:rgba(255,255,255,.08); border:1px solid rgba(255,255,255,.18); padding:5px 10px 6px; border-radius:999px; font-weight:600; color:#b8cbe0; }
      .grid { display:grid; gap:2.1rem; grid-template-columns: 1fr 340px; align-items:start; }
      @media (max-width:1100px){ .grid { grid-template-columns:1fr; } }
      .panel { position:relative; border:1px solid rgba(255,255,255,.12); background:linear-gradient(125deg,rgba(99,102,241,.18),rgba(126,34,206,.12) 55%,rgba(37,99,235,.15)); backdrop-filter:blur(32px) saturate(160%); padding:1.6rem 1.8rem 2.1rem; border-radius:34px; box-shadow:0 18px 60px -25px rgba(0,0,0,.65); overflow:hidden; }
      .panel.alt { background:linear-gradient(150deg,rgba(17,24,39,.9),rgba(30,41,59,.82)); box-shadow:0 22px 66px -30px rgba(0,0,0,.72); }
      .panel h2 { margin:0 0 1rem; font-size:.7rem; letter-spacing:.9px; text-transform:uppercase; font-weight:600; color:#7ea6d6; }
      form#ad-hoc { display:flex; gap:.9rem; flex-wrap:wrap; align-items:flex-end; }
      form#ad-hoc label { flex:1; min-width:300px; font-weight:600; font-size:.55rem; letter-spacing:.8px; text-transform:uppercase; color:#8ea2b8; display:flex; flex-direction:column; gap:.4rem; }
      .input { width:100%; padding:15px 18px; border:1px solid rgba(255,255,255,.14); border-radius:18px; background:#0f172a; font-size:.85rem; color:var(--color-text); font-family:inherit; }
      .input:focus { outline:2px solid var(--grad-a); outline-offset:2px; border-color:var(--grad-a); }
      .btn { all:unset; cursor:pointer; background:linear-gradient(90deg,var(--grad-a),var(--grad-b),var(--grad-c)); color:#fff; padding:15px 24px; border-radius:18px; font-size:.8rem; font-weight:600; letter-spacing:.6px; box-shadow:0 10px 34px -14px rgba(99,102,241,.6); display:inline-flex; align-items:center; gap:.55rem; }
      .btn:hover { transform:translateY(-2px); }
      #ad-hoc-status { font-size:.65rem; letter-spacing:.5px; text-transform:uppercase; color:#7ea6d6; }
      .divider { height:1px; border:none; background:linear-gradient(90deg,transparent,rgba(255,255,255,.12),transparent); margin:2.4rem 0 1.9rem; }
      aside ul { margin:.35rem 0 0; padding-left:1.05rem; list-style:disc; font-size:.7rem; color:#9fb3c9; line-height:1.5; }
      .muted { font-size:.65rem; color:#7ea6d6; }
      .json-pre { font-size:11px; background:#020e1f; color:#e2e8f0; padding:12px 14px; border-radius:18px; max-height:360px; overflow:auto; border:1px solid rgba(255,255,255,.1); }
      .gate-btn { display:inline-block; margin-top:1.4rem; padding:14px 26px; background:linear-gradient(90deg,var(--grad-a),var(--grad-b)); color:#fff; border-radius:18px; text-decoration:none; font-weight:600; font-size:.85rem; box-shadow:0 10px 30px -14px rgba(99,102,241,.55); }
    </style>
  </head>
  <body>
    <nav class="top-nav">
  <a href="/docs/" target="_blank" rel="noopener">Documentação</a>
      <span style="flex:1"></span>
      <a href="/" style="">Home</a>
      <a href="/login" id="nav-login">Login</a>
      <a href="/signup" id="nav-signup">Cadastro</a>
    </nav>
    <header>
      <div style="display:flex; flex-wrap:wrap; align-items:center; gap:1.1rem;">
        <h1>Painel SEO Detalhado</h1>
        <span class="badge">Beta</span>
      </div>
      <p>Audite páginas com métricas ricas, histórico e em breve comparativos e alertas. Forneça uma URL para começar.</p>
    </header>
    <div class="grid fade">
      <div style="display:flex; flex-direction:column; gap:2.1rem;">
        <section class="panel">
          <h2>Nova Análise</h2>
          <form id="ad-hoc">
            <label>
              <span>URL</span>
              <input name="url" type="url" required placeholder="https://exemplo.com" class="input" />
            </label>
            <button type="submit" class="btn">Analisar Agora</button>
          </form>
          <div id="ad-hoc-status" style="margin-top:.75rem; min-height:1.2rem;"></div>
          <div id="placeholder-hero" style="margin-top:1.1rem; font-size:.75rem; line-height:1.45; color:#9fb3c9; ${requested? 'display:none;':''}">
            <strong style="color:#e2e8f0;">Dica:</strong> teste a página inicial primeiro para contexto geral.
          </div>
        </section>
        <section id="analysis-wrap" class="panel alt fade" style="display:${requested? 'block':'none'};">
          <h2>Resultado</h2>
          <div id="analysis-dynamic" style="min-height:160px; display:flex; align-items:center; justify-content:center; font-size:.75rem; color:#7ea6d6;">
            ${requested? 'Carregando...' : 'Nenhuma análise ainda.'}
          </div>
          {initial && initial.result && <div id="analysis-static"><AnalysisDashboard data={initial.result} /></div>}
        </section>
      </div>
      <aside class="panel alt fade" style="position:relative;">
        <h2>Minhas Análises</h2>
        <p class="muted" style="margin-top:-.25rem;">Histórico vinculado à conta.</p>
        <div style="margin-top:.9rem;">
          <SavedAnalysesClient />
        </div>
        <hr class="divider" />
        <div style="font-size:.65rem; line-height:1.45; color:#9fb3c9;">
          <p style="margin:.25rem 0 .65rem; font-weight:600; letter-spacing:.6px; text-transform:uppercase; font-size:.55rem; color:#7ea6d6;">Roadmap</p>
          <ul>
            <li>Rastreamento multi página</li>
            <li>Exportação CSV avançada</li>
            <li>Insights de IA</li>
            <li>Comparação de execuções</li>
            <li>Alertas de regressão</li>
          </ul>
        </div>
      </aside>
    </div>
    <script>
      (function(){
        const form = document.getElementById('ad-hoc');
        const statusEl = document.getElementById('ad-hoc-status');
        const analysisWrap = document.getElementById('analysis-wrap');
        const analysisDyn = document.getElementById('analysis-dynamic');
        const qUrl = new URL(location.href).searchParams.get('url');
    form.addEventListener('submit', async (e)=>{
          e.preventDefault();
          const fd = new FormData(form);
          const url = fd.get('url');
          statusEl.textContent='Analisando...';
          try {
            analysisWrap.style.display='block';
            analysisDyn.textContent='Carregando...';
      const res = await fetch('/api/analisar',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({url})});
      if(!res.ok){ statusEl.textContent='Falha: '+res.status; analysisDyn.textContent='Falha ('+res.status+')'; return; }
      const data = await res.json();
            localStorage.setItem('la-last-analysis', JSON.stringify(data));
            location.search='?url='+encodeURIComponent(url);
          } catch(err){ statusEl.textContent='Erro de rede'; analysisDyn.textContent='Erro de rede'; }
        });
        // Login gate
        try {
          const auth = localStorage.getItem('la-supa-auth');
          if(!auth){
            document.body.innerHTML='<div style="max-width:560px;margin:5rem auto 3rem;padding:2.4rem 2.6rem 2.8rem;border:1px solid rgba(255,255,255,.12);border-radius:40px;background:linear-gradient(140deg,rgba(255,255,255,.08),rgba(255,255,255,.02));backdrop-filter:blur(26px) saturate(160%);text-align:center;font-family:var(--font-sans);box-shadow:0 22px 70px -28px rgba(0,0,0,.7);">\n<h1 style="margin:0 0 1rem;font-size:clamp(2rem,4vw,2.9rem);line-height:1.05;background:linear-gradient(90deg,var(--grad-b),var(--grad-a),var(--grad-c));-webkit-background-clip:text;color:transparent;">Área restrita</h1><p style="color:#9db4c8;font-size:.95rem;line-height:1.55;max-width:480px;margin:.2rem auto 1.4rem;">Faça login para acessar o painel detalhado e desbloquear histórico e próximas funcionalidades.</p><a href="/login?next=/analise" class="gate-btn">Ir para Login</a></div>';
            return;
          } else {
            const l=document.getElementById('nav-login'); if(l) l.style.display='none';
            const s=document.getElementById('nav-signup'); if(s) s.style.display='none';
          }
        } catch {}
    async function loadAnalysis(url){
          try {
            analysisWrap.style.display='block';
            analysisDyn.textContent='Carregando...';
      const res = await fetch('/api/analisar',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({url})});
      if(!res.ok){ analysisDyn.textContent='Falha ('+res.status+')'; return; }
      const data = await res.json();
            localStorage.setItem('la-last-analysis', JSON.stringify(data));
            // Auto-save to user history if logged
            try {
              const supaAuth = localStorage.getItem('la-supa-auth');
              if(supaAuth){
                const token = JSON.parse(supaAuth).access_token;
                if(token){
                  const payload = { url, data: data.result || data };
                  fetch('/api/analises', { method:'POST', headers:{ 'Content-Type':'application/json', 'Authorization': 'Bearer '+token }, body: JSON.stringify(payload) })
                    .catch(()=>{});
                }
              }
            } catch {}
            // Render JSON quickly; for richer view we'd hydrate component
            analysisDyn.innerHTML='<pre class="json-pre">'+
              JSON.stringify(data.result||data,null,2).replace(/[&<>]/g, c=>({"&":"&amp;","<":"&lt;",">":"&gt;"}[c])) + '</pre>';
          } catch { analysisDyn.textContent='Erro de rede'; }
        }
        if(qUrl){ loadAnalysis(qUrl); }
        else {
          // tenta última
          try {
            const last = localStorage.getItem('la-last-analysis');
            if(last){
              const parsed = JSON.parse(last);
              analysisWrap.style.display='block';
              analysisDyn.innerHTML='<pre class="json-pre">'+
                JSON.stringify(parsed.result||parsed,null,2).replace(/[&<>]/g, c=>({"&":"&amp;","<":"&lt;",">":"&gt;"}[c])) + '</pre>';
              // Attempt pending save if user just signed up
              try {
                if(localStorage.getItem('la-pending-save')==='1'){
                  localStorage.removeItem('la-pending-save');
                  const supaAuth = localStorage.getItem('la-supa-auth');
                  if(supaAuth){
                    const token = JSON.parse(supaAuth).access_token;
                    if(token){
                      const url = localStorage.getItem('la-pending-save-url') || parsed.url || parsed.result?.url;
                      if(url){
                        fetch('/api/analises', { method:'POST', headers:{ 'Content-Type':'application/json', 'Authorization':'Bearer '+token }, body: JSON.stringify({ url, data: parsed.result||parsed }) });
                      }
                    }
                  }
                  localStorage.removeItem('la-pending-save-url');
                }
              } catch {}
            }
          } catch {}
        }
      })();
    </script>
    <nav>
  <a href="/">Home</a>
  <a href="/analise">Painel</a>
  <a href="/docs/" target="_blank" rel="noopener">Docs</a>
  <a href="/perfil" id="perfil-link" style="display:none">Perfil</a>
  <button id="logout-nav" style="display:none;all:unset;cursor:pointer;font-size:.65rem;text-transform:uppercase;letter-spacing:.5px;color:#b8cbe0;font-weight:600;">Sair</button>
</nav>
<script type="module">
  (function(){
  const authRaw = localStorage.getItem('la-supa-auth');
  if(!authRaw) return;
  try {
    const perfilLink = document.getElementById('perfil-link');
    const logoutBtn = document.getElementById('logout-nav');
    perfilLink && (perfilLink.style.display='inline');
    if (logoutBtn){
      logoutBtn.style.display='inline';
      logoutBtn.addEventListener('click',()=>{ localStorage.removeItem('la-supa-auth'); localStorage.removeItem('la-user'); location.href='/'; });
    }
  } catch {}
})();
</script>
  </body>
</html>
