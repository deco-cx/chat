---
import { getSupabase } from "../lib/supabaseClient";
const SUPA_URL = import.meta.env.PUBLIC_SUPABASE_URL || '';
const SUPA_ANON = import.meta.env.PUBLIC_SUPABASE_ANON_KEY || '';
let err:string|undefined; let info:string|undefined;
if (Astro.request.method === 'POST') {
  const form = await Astro.request.formData();
  const email = form.get('email')?.toString()||'';
  const password = form.get('password')?.toString()||'';
  if(email && password){
    try {
      const supa = getSupabase();
      const { error } = await supa.auth.signInWithPassword({ email, password });
      if(error) err = error.message; else info='Login efetuado. Verifique se sessão persistiu.';
    } catch(e:any){ err = e.message || 'Falha inesperada'; }
  } else err = 'Informe email e senha';
}
---
<html lang="pt-BR">
  <head>
    <meta charset="utf-8" />
    <title>Login</title>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="stylesheet" href="/theme.css" />
    <style>
      body { margin:0; min-height:100dvh; display:flex; align-items:center; justify-content:center; padding:2.4rem 1.2rem; }
      .auth-wrap { width:100%; max-width:520px; }
      h1 { margin:0 0 1.4rem; font-size:clamp(2rem,4.6vw,2.8rem); line-height:1.05; background:linear-gradient(90deg,var(--grad-b),var(--grad-a),var(--grad-c)); -webkit-background-clip:text; color:transparent; }
      .panel { position:relative; border:1px solid var(--color-border); background:var(--color-surface-glass); backdrop-filter:blur(28px) saturate(160%); padding:2rem 2.1rem 2.3rem; border-radius:34px; box-shadow:var(--shadow-card); }
      form { display:flex; flex-direction:column; gap:1rem; }
      label span { font-size:.7rem; letter-spacing:.6px; font-weight:600; text-transform:uppercase; color:var(--color-text-muted); }
      input { width:100%; padding:14px 16px; border:1px solid rgba(255,255,255,.14); border-radius:14px; background:#0f172a; color:var(--color-text); font-size:.9rem; font-family:inherit; }
      input:focus { outline:2px solid var(--grad-a); outline-offset:2px; border-color:var(--grad-a); }
      .btn-submit { all:unset; cursor:pointer; text-align:center; padding:15px 22px; border-radius:16px; font-weight:600; font-size:.9rem; background:linear-gradient(90deg,var(--grad-a),var(--grad-b),var(--grad-c)); box-shadow:0 10px 34px -14px rgba(99,102,241,.6); }
      .btn-submit:hover { transform:translateY(-2px); }
      .meta { margin-top:1rem; font-size:.75rem; color:var(--color-text-muted); }
      .meta a { color:var(--grad-a); text-decoration:none; }
      .alert { padding:.85rem 1rem; border-radius:16px; font-size:.8rem; line-height:1.35; margin:-.35rem 0 1.1rem; font-weight:500; }
      .alert.err { background:rgba(220,38,38,.12); border:1px solid rgba(220,38,38,.4); color:#fecaca; }
      .alert.info { background:rgba(34,197,94,.12); border:1px solid rgba(34,197,94,.5); color:#bbf7d0; }
      nav { position:absolute; top:1rem; right:1.2rem; font-size:.65rem; letter-spacing:.5px; text-transform:uppercase; display:flex; gap:.9rem; }
      nav a { color:var(--color-text-soft); text-decoration:none; font-weight:600; opacity:.85; }
      nav a:hover { opacity:1; }
    </style>
  </head>
  <body>
  <a href="#main" class="skip-link">Pular para conteúdo</a>
  <div class="auth-wrap" id="main" role="main">
      <div class="panel">
        <nav>
          <a href="/">Home</a>
          <a href="/signup">Cadastro</a>
        </nav>
        <h1>Login</h1>
        {err && <div class="alert err">{err}</div>}
        {info && <div class="alert info">{info}</div>}
        <form method="POST" aria-describedby="login-desc">
          <p id="login-desc" class="visually-hidden">Autenticação para acessar painel detalhado de análises.</p>
          <label>
            <span>Email</span>
            <input name="email" type="email" required autocomplete="email" />
          </label>
          <label>
            <span>Senha</span>
            <input name="password" type="password" required autocomplete="current-password" />
          </label>
          <button type="submit" class="btn-submit">Entrar</button>
          <div class="meta">Sem conta? <a href="/signup">Criar</a> · <a href="/reset">Esqueci a senha</a></div>
        </form>
      </div>
    </div>
    <script>
      (function(){
        // Redirect if login succeeded (detect success alert rendered by SSR)
        const params = new URLSearchParams(location.search);
        const next = params.get('next');
        const loginDone = !!document.querySelector('.alert.info');
        if(loginDone && next){
          try { location.replace(next); } catch(e){ location.href = next; }
        }
      })();
    </script>
  <script type="module">
      (async ()=>{
        // Client-side auth path (uses PUBLIC_* env vars available in the client bundle)
        const SUPA_URL = import.meta.env.PUBLIC_SUPABASE_URL || '';
        const SUPA_ANON = import.meta.env.PUBLIC_SUPABASE_ANON_KEY || '';
        if(!SUPA_URL || !SUPA_ANON) return; // nothing to do client-side
        try{
          const mod = await import('https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm');
          const { createClient } = mod;
          const supa = createClient(SUPA_URL, SUPA_ANON, { auth: { persistSession: true, storageKey: 'la-supa-auth' } });
          const formEl = document.querySelector('form');
          if(!formEl) return;
          formEl.addEventListener('submit', async (e)=>{
            // Intercept to perform client-side sign in; keep server POST fallback when JS disabled by preventing default here
            e.preventDefault();
            const fd = new FormData(formEl);
            const email = fd.get('email')?.toString() || '';
            const password = fd.get('password')?.toString() || '';
            if(!email || !password){ alert('Informe email e senha'); return; }
            try{
              const { error } = await supa.auth.signInWithPassword({ email, password });
              if(error){ alert(error.message || 'Erro ao autenticar'); return; }
              // Mark local user to enable save button UI elsewhere
              try{ localStorage.setItem('la-user', JSON.stringify({ email })); }catch(e){}
              const params = new URLSearchParams(location.search);
              const next = params.get('next');
              if(next){ location.replace(next); } else { location.reload(); }
            }catch(err){ console.error(err); alert('Erro ao autenticar'); }
          });
        }catch(e){ console.error('Cliente Supabase falhou', e); }
      })();
    </script>
  </body>
</html>
