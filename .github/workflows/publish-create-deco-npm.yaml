name: Publish create-deco to NPM

on:
  push:
    branches: [main]
    paths:
      - "packages/create-deco/**"
  workflow_dispatch:
  workflow_run:
    workflows: ["Publish CLI to NPM"]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    # Only run if CLI workflow completed successfully or if triggered by create-deco changes
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: bun install

      - name: Check if version changed
        id: version-check
        run: |
          # Get the current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          # Try to get the published version from npm (will fail if package doesn't exist)
          PUBLISHED_VERSION=$(npm view create-deco version 2>/dev/null || echo "0.0.0")

          echo "Current version: $CURRENT_VERSION"
          echo "Published version: $PUBLISHED_VERSION"
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "version-changed=true" >> $GITHUB_OUTPUT
            echo "✅ Version changed ($PUBLISHED_VERSION → $CURRENT_VERSION), will publish"
          else
            echo "version-changed=false" >> $GITHUB_OUTPUT
            echo "⏭️ Version unchanged ($CURRENT_VERSION), skipping publish"
          fi
        working-directory: packages/create-deco

      - name: Publish to NPM
        if: steps.version-check.outputs.version-changed == 'true'
        run: npm publish
        working-directory: packages/create-deco
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        if: steps.version-check.outputs.version-changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: create-deco-v${{ steps.version-check.outputs.current-version }}
          release_name: create-deco v${{ steps.version-check.outputs.current-version }}
          body: |
            ## Changes

            Automated release of create-deco package.

            ### Installation
            ```bash
            npm create deco <project-name>
            # or with Bun
            bun create deco <project-name>
            ```

            ### Usage
            Create a new deco project with integrated authentication and workspace selection.
          draft: false
          prerelease: false
