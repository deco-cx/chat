name: Deploy SEO E-commerce

on:
  workflow_dispatch:
  push:
    tags:
      - "seo-v*"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Lint & Type Check
        run: |
          npm run fmt:check
          npm run lint
          npm run check

      - name: Test
        run: npm test

      - name: Build view
        run: npm --workspace=seo-ecommerce/view run build

      - name: Prepare view-build directory
        run: |
          mkdir -p seo-ecommerce/server/view-build
          rsync -a seo-ecommerce/view/dist/ seo-ecommerce/server/view-build/

      - name: Generate server code
        run: npm --workspace=seo-ecommerce/server run gen

      - name: Install Wrangler
        run: npm --workspace=seo-ecommerce/server install --no-audit --no-fund

      - name: Set Wrangler Auth
        run: |
          npx wrangler whoami || true
        env:
          CLOUDFLARE_API_TOKEN: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
          CLOUDFLARE_ACCOUNT_ID: "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"

      - name: Deploy Worker
        run: npm --workspace=seo-ecommerce/server run deploy
        env:
          CLOUDFLARE_API_TOKEN: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
          CLOUDFLARE_ACCOUNT_ID: "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          SUPABASE_URL: "${{ secrets.SUPABASE_URL }}"
          SUPABASE_ANON_KEY: "${{ secrets.SUPABASE_ANON_KEY }}"
          SUPABASE_SERVER_TOKEN: "${{ secrets.SUPABASE_SERVER_TOKEN }}"
          OPENROUTER_API_KEY: "${{ secrets.OPENROUTER_API_KEY }}"
          PUBLIC_API_URL: "${{ secrets.PUBLIC_API_URL }}"
          PUBLIC_APP_ORIGIN: "https://seo-ecommercex.deco.page"

      - name: Smoke test endpoint
        run: |
          APP_ORIGIN="https://seo-ecommercex.deco.page"
          curl -s -o resp.json -w '%{http_code}' "$APP_ORIGIN/mcp/tools" \
            -H 'Content-Type: application/json' \
            --data '{"tool":"LINK_ANALYZER","input":{"url":"https://example.com/"}}' > status.txt || true
          echo "Status: $(cat status.txt)" >> $GITHUB_STEP_SUMMARY
          head -n 20 resp.json >> $GITHUB_STEP_SUMMARY || true
          if [ "$(cat status.txt)" != "200" ]; then
            echo "Erro: status diferente de 200" >&2; exit 1; fi

      - name: Summary
        run: echo "✅ Deploy concluído" >> $GITHUB_STEP_SUMMARY
