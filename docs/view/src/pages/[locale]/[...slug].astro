---
import { useTranslations } from "../../i18n/utils";
import { ui, languages } from "../../i18n/ui";
import DocsLayout from "../../layouts/DocsLayout.astro";
import { getCollection } from "astro:content";
import RenderDocument from "../../components/ui/RenderDocument.astro";

const lang = Astro.params.locale;
const t = useTranslations(lang as keyof typeof ui);

export async function getStaticPaths() {
  const allDocs = await getCollection("docs");

  return [
    ...Object.keys(languages).map((locale) => ({
      params: { locale },
      props: { doc: null },
    })),
    ...allDocs.map((doc) => {
      const locale = doc.id.split("/")[0];
      const slug = doc.id.split("/").slice(1).join("/");

      return {
        params: { locale, slug },
        props: { doc },
      };
    }),
  ];
}

const { doc } = Astro.props;

// Redirect to introduction if no document is found (i.e., when visiting /en)
if (!doc) {
  return Astro.redirect(`/${lang}/introduction`);
}
---

<DocsLayout title={doc.data.title}>
  <RenderDocument doc={doc} />
</DocsLayout>
