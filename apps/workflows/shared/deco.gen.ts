// Generated types - do not edit manually

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String = string;
export type String_1 = "user" | "assistant" | "system";
export type String_2 = string;
export type String_3 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_4 = string;
/**
 * Media type of the attachment
 */
export type String_5 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_6 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_1 = Object_1[];
/**
 * Array of messages for the conversation
 */
export type Array = Object[];
/**
 * Skip transaction creation
 */
export type Boolean = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_7 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number = number;
/**
 * Temperature for the generation
 */
export type Number_1 = number;
export type String_8 = string;
export type Array_2 = String_8[];

export interface AI_GENERATEInput {
  messages: Array;
  skipTransaction?: Boolean;
  model?: String_7;
  maxTokens?: Number;
  temperature?: Number_1;
  tools?: Object_2;
}
export interface Object {
  id?: String;
  role: String_1;
  content: String_2;
  createdAt?: String_3;
  experimental_attachments?: Array_1;
}
export interface Object_1 {
  name?: String_4;
  contentType?: String_5;
  url: String_6;
}
/**
 * Tools available for the generation
 */
export interface Object_2 {
  [k: string]: Array_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_9 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_2 = number;
/**
 * Number of tokens in the completion
 */
export type Number_3 = number;
/**
 * Total number of tokens used
 */
export type Number_4 = number;
/**
 * Transaction ID
 */
export type String_10 = string;
/**
 * Reason why generation finished
 */
export type String_11 = string;

export interface AI_GENERATEOutput {
  text: String_9;
  usage: Object_3;
  finishReason?: String_11;
}
/**
 * Token usage information
 */
export interface Object_3 {
  promptTokens: Number_2;
  completionTokens: Number_3;
  totalTokens: Number_4;
  transactionId?: String_10;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_12 = string;
export type String_13 = "user" | "assistant" | "system";
export type String_14 = string;
export type String_15 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_16 = string;
/**
 * Media type of the attachment
 */
export type String_17 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_18 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_4 = Object_5[];
/**
 * Array of messages for the conversation
 */
export type Array_3 = Object_4[];
/**
 * Skip transaction creation
 */
export type Boolean_1 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_19 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_5 = number;
/**
 * Temperature for the generation
 */
export type Number_6 = number;
export type String_20 = string;
export type Array_5 = String_20[];

export interface AI_GENERATE_OBJECTInput {
  messages: Array_3;
  schema: Object_6;
  skipTransaction?: Boolean_1;
  model?: String_19;
  maxTokens?: Number_5;
  temperature?: Number_6;
  tools?: Object_7;
}
export interface Object_4 {
  id?: String_12;
  role: String_13;
  content: String_14;
  createdAt?: String_15;
  experimental_attachments?: Array_4;
}
export interface Object_5 {
  name?: String_16;
  contentType?: String_17;
  url: String_18;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_6 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_7 {
  [k: string]: Array_5;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_7 = number;
/**
 * Number of tokens in the completion
 */
export type Number_8 = number;
/**
 * Total number of tokens used
 */
export type Number_9 = number;
/**
 * Transaction ID
 */
export type String_21 = string;
/**
 * Reason why generation finished
 */
export type String_22 = string;

export interface AI_GENERATE_OBJECTOutput {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_8;
  finishReason?: String_22;
}
/**
 * Token usage information
 */
export interface Object_8 {
  promptTokens: Number_7;
  completionTokens: Number_8;
  totalTokens: Number_9;
  transactionId?: String_21;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_23 = string;
/**
 * The description of the tool
 */
export type String_24 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_25 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_26 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_6 = Object_12[];

export interface DECO_RESOURCE_TOOL_CREATEInput {
  data: Object_9;
}
/**
 * Resource data to create
 */
export interface Object_9 {
  name: String_23;
  description: String_24;
  inputSchema: Object_10;
  outputSchema: Object_11;
  execute: String_25;
  dependencies?: Array_6;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_10 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_11 {
  [k: string]: unknown;
}
export interface Object_12 {
  integrationId: String_26;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_27 = string;
/**
 * The name of the tool
 */
export type String_28 = string;
/**
 * The description of the tool
 */
export type String_29 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_30 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_31 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_7 = Object_16[];
/**
 * Creation timestamp
 */
export type String_32 = string;
/**
 * Last update timestamp
 */
export type String_33 = string;
/**
 * User who created the resource
 */
export type String_34 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput {
  uri: String_27;
  data: Object_13;
  created_at?: String_32;
  updated_at?: String_33;
  created_by?: String_34;
}
/**
 * Created resource data
 */
export interface Object_13 {
  name: String_28;
  description: String_29;
  inputSchema: Object_14;
  outputSchema: Object_15;
  execute: String_30;
  dependencies?: Array_7;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_14 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_15 {
  [k: string]: unknown;
}
export interface Object_16 {
  integrationId: String_31;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_35 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput {
  uri: String_35;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_2 = boolean;
/**
 * URI of the deleted resource
 */
export type String_36 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput {
  success: Boolean_2;
  uri: String_36;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_37 = string;

export interface DECO_RESOURCE_TOOL_READInput {
  uri: String_37;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_38 = string;
/**
 * The name of the tool
 */
export type String_39 = string;
/**
 * The description of the tool
 */
export type String_40 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_41 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_42 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_8 = Object_20[];
/**
 * Creation timestamp
 */
export type String_43 = string;
/**
 * Last update timestamp
 */
export type String_44 = string;
/**
 * User who created the resource
 */
export type String_45 = string;
/**
 * User who last updated the resource
 */
export type String_46 = string;

export interface DECO_RESOURCE_TOOL_READOutput {
  uri: String_38;
  data: Object_17;
  created_at?: String_43;
  updated_at?: String_44;
  created_by?: String_45;
  updated_by?: String_46;
}
/**
 * Resource data
 */
export interface Object_17 {
  name: String_39;
  description: String_40;
  inputSchema: Object_18;
  outputSchema: Object_19;
  execute: String_41;
  dependencies?: Array_8;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_18 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_19 {
  [k: string]: unknown;
}
export interface Object_20 {
  integrationId: String_42;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_47 = string;
/**
 * Page number (1-based)
 */
export type Integer = number;
/**
 * Number of items per page
 */
export type Integer_1 = number;
/**
 * Field to sort by
 */
export type String_48 = string;
/**
 * Sort order
 */
export type String_49 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput {
  term?: String_47;
  page?: Integer;
  pageSize?: Integer_1;
  filters?: Object_21;
  sortBy?: String_48;
  sortOrder?: String_49;
}
/**
 * Additional filters to apply
 */
export interface Object_21 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_50 = string;
export type String_51 = string;
/**
 * Description of the resource
 */
export type String_52 = string;
/**
 * URL to the resource icon
 */
export type String_53 = string;
/**
 * The name of the tool
 */
export type String_54 = string;
/**
 * The description of the tool
 */
export type String_55 = string;
/**
 * Creation timestamp
 */
export type String_56 = string;
/**
 * Last update timestamp
 */
export type String_57 = string;
/**
 * User who created the resource
 */
export type String_58 = string;
/**
 * User who last updated the resource
 */
export type String_59 = string;
/**
 * Array of matching resources
 */
export type Array_9 = Object_22[];
/**
 * Total number of matching resources
 */
export type Integer_2 = number;
/**
 * Current page number
 */
export type Integer_3 = number;
/**
 * Number of items per page
 */
export type Integer_4 = number;
/**
 * Total number of pages
 */
export type Integer_5 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_3 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_4 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput {
  items: Array_9;
  totalCount: Integer_2;
  page: Integer_3;
  pageSize: Integer_4;
  totalPages: Integer_5;
  hasNextPage: Boolean_3;
  hasPreviousPage: Boolean_4;
}
export interface Object_22 {
  uri: String_50;
  /**
   * Resource data with required name
   */
  data: Object_23 & Object_24;
  created_at?: String_56;
  updated_at?: String_57;
  created_by?: String_58;
  updated_by?: String_59;
}
export interface Object_23 {
  name: String_51;
  description?: String_52;
  icon?: String_53;
}
export interface Object_24 {
  name: String_54;
  description: String_55;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_60 = string;
/**
 * The name of the tool
 */
export type String_61 = string;
/**
 * The description of the tool
 */
export type String_62 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_63 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_64 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_10 = Object_28[];

export interface DECO_RESOURCE_TOOL_UPDATEInput {
  uri: String_60;
  data: Object_25;
}
/**
 * Updated resource data
 */
export interface Object_25 {
  name: String_61;
  description: String_62;
  inputSchema: Object_26;
  outputSchema: Object_27;
  execute: String_63;
  dependencies?: Array_10;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_26 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_27 {
  [k: string]: unknown;
}
export interface Object_28 {
  integrationId: String_64;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_65 = string;
/**
 * The name of the tool
 */
export type String_66 = string;
/**
 * The description of the tool
 */
export type String_67 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_68 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_69 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_11 = Object_32[];
/**
 * Original creation timestamp
 */
export type String_70 = string;
/**
 * Last update timestamp
 */
export type String_71 = string;
/**
 * User who originally created the resource
 */
export type String_72 = string;
/**
 * User who last updated the resource
 */
export type String_73 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput {
  uri: String_65;
  data: Object_29;
  created_at?: String_70;
  updated_at?: String_71;
  created_by?: String_72;
  updated_by?: String_73;
}
/**
 * Updated resource data
 */
export interface Object_29 {
  name: String_66;
  description: String_67;
  inputSchema: Object_30;
  outputSchema: Object_31;
  execute: String_68;
  dependencies?: Array_11;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_30 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_31 {
  [k: string]: unknown;
}
export interface Object_32 {
  integrationId: String_69;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_74 = string;
/**
 * The token to use for the tool execution
 */
export type String_75 = string;

export interface DECO_TOOL_CALL_TOOLInput {
  uri: String_74;
  input: Object_33;
  authorization?: String_75;
}
/**
 * The input of the code
 */
export interface Object_33 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_76 = "log" | "warn" | "error";
export type String_77 = string;
/**
 * Console logs from the execution
 */
export type Array_12 = Object_34[];

export interface DECO_TOOL_CALL_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_12;
}
export interface Object_34 {
  type: String_76;
  content: String_77;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_78 = string;
/**
 * The description of the tool
 */
export type String_79 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_80 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_81 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_13 = Object_38[];
/**
 * The token to use for the tool execution
 */
export type String_82 = string;

export interface DECO_TOOL_RUN_TOOLInput {
  tool: Object_35;
  input: Object_39;
  authorization?: String_82;
}
export interface Object_35 {
  name: String_78;
  description: String_79;
  inputSchema: Object_36;
  outputSchema: Object_37;
  execute: String_80;
  dependencies?: Array_13;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_36 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_37 {
  [k: string]: unknown;
}
export interface Object_38 {
  integrationId: String_81;
}
/**
 * The input of the code
 */
export interface Object_39 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_83 = "log" | "warn" | "error";
export type String_84 = string;
/**
 * Console logs from the execution
 */
export type Array_14 = Object_40[];

export interface DECO_TOOL_RUN_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_14;
}
export interface Object_40 {
  type: String_83;
  content: String_84;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_85 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput {
  resource: String_85;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_86 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_87 = string;
export type String_88 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_15 = String_88[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput {
  url: String_86;
  prompt?: String_87;
  tools?: Array_15;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_89 = string;
export type String_90 = string;
export type String_91 = string;
export type String_92 = string;
export type String_93 = string;
export type String_94 = string;
export type String_95 = string;
export type String_96 = string;
export type String_97 = string;
export type Array_17 = String_97[];
export type String_98 = string;
export type String_99 = "none" | "open" | "autoPin";
export type Array_16 = Object_41[];

export interface DECO_CHAT_VIEWS_LISTOutput {
  views: Array_16;
}
export interface Object_41 {
  id?: String_89;
  name?: String_90;
  title: String_91;
  description?: String_92;
  icon: String_93;
  url?: String_94;
  mimeTypePattern?: String_95;
  resourceName?: String_96;
  tools?: Array_17;
  prompt?: String_98;
  installBehavior?: String_99;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_100 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_101 = string;
/**
 * The type of step
 */
export type String_102 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_103 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_104 = string;
/**
 * A clear description of what this step does
 */
export type String_105 = string;
/**
 * The prompt used to generate the step
 */
export type String_106 = string;
/**
 * Status of the step execution
 */
export type String_107 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_108 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_109 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_19 = Object_51[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_6 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_7 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_110 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_10 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_111 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_112 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_8 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_9 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_113 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_11 = number;
export type Null = null;
/**
 * The name of the tool to call
 */
export type String_114 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_115 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_18 = Object_45[];
/**
 * The authorization token for the workflow
 */
export type String_116 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput {
  data: Object_42;
}
/**
 * Resource data to create
 */
export interface Object_42 {
  name: String_100;
  description: String_101;
  inputSchema: Object_43;
  outputSchema: Object_44;
  steps: Array_18;
  authorization?: Object_57;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_43 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_44 {
  [k: string]: unknown;
}
export interface Object_45 {
  type?: String_102;
  /**
   * The step definition based on the type
   */
  def?: Object_46 | Object_54;
  [k: string]: unknown;
}
export interface Object_46 {
  id?: String_103;
  name?: String_104;
  description?: String_105;
  prompt?: String_106;
  inputSchema?: Object_47;
  outputSchema?: Object_48;
  input?: Object_49;
  output?: Object_50;
  status?: String_107;
  execute?: String_108;
  dependencies?: Array_19;
  options?: Object_52;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_47 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_48 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_49 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_50 {
  [k: string]: unknown;
}
export interface Object_51 {
  integrationId: String_109;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_52 {
  retries?: Object_53;
  timeout?: Number_10;
}
export interface Object_53 {
  limit?: Integer_6;
  delay?: Integer_7;
  backoff?: String_110;
}
export interface Object_54 {
  name?: String_111;
  description?: String_112;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_55 | Null;
  tool_name?: String_114;
  integration?: String_115;
  [k: string]: unknown;
}
export interface Object_55 {
  retries?: Object_56;
  timeout?: Number_11;
}
export interface Object_56 {
  limit?: Integer_8;
  delay?: Integer_9;
  backoff?: String_113;
}
export interface Object_57 {
  token: String_116;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_117 = string;
/**
 * The unique name of the workflow
 */
export type String_118 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_119 = string;
/**
 * The type of step
 */
export type String_120 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_121 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_122 = string;
/**
 * A clear description of what this step does
 */
export type String_123 = string;
/**
 * The prompt used to generate the step
 */
export type String_124 = string;
/**
 * Status of the step execution
 */
export type String_125 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_126 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_127 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_21 = Object_67[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_10 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_11 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_128 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_12 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_129 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_130 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_12 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_13 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_131 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_13 = number;
export type Null_1 = null;
/**
 * The name of the tool to call
 */
export type String_132 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_133 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_20 = Object_61[];
/**
 * The authorization token for the workflow
 */
export type String_134 = string;
/**
 * Creation timestamp
 */
export type String_135 = string;
/**
 * Last update timestamp
 */
export type String_136 = string;
/**
 * User who created the resource
 */
export type String_137 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput {
  uri: String_117;
  data: Object_58;
  created_at?: String_135;
  updated_at?: String_136;
  created_by?: String_137;
}
/**
 * Created resource data
 */
export interface Object_58 {
  name: String_118;
  description: String_119;
  inputSchema: Object_59;
  outputSchema: Object_60;
  steps: Array_20;
  authorization?: Object_73;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_59 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_60 {
  [k: string]: unknown;
}
export interface Object_61 {
  type?: String_120;
  /**
   * The step definition based on the type
   */
  def?: Object_62 | Object_70;
  [k: string]: unknown;
}
export interface Object_62 {
  id?: String_121;
  name?: String_122;
  description?: String_123;
  prompt?: String_124;
  inputSchema?: Object_63;
  outputSchema?: Object_64;
  input?: Object_65;
  output?: Object_66;
  status?: String_125;
  execute?: String_126;
  dependencies?: Array_21;
  options?: Object_68;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_63 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_64 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_65 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_66 {
  [k: string]: unknown;
}
export interface Object_67 {
  integrationId: String_127;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_68 {
  retries?: Object_69;
  timeout?: Number_12;
}
export interface Object_69 {
  limit?: Integer_10;
  delay?: Integer_11;
  backoff?: String_128;
}
export interface Object_70 {
  name?: String_129;
  description?: String_130;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_71 | Null_1;
  tool_name?: String_132;
  integration?: String_133;
  [k: string]: unknown;
}
export interface Object_71 {
  retries?: Object_72;
  timeout?: Number_13;
}
export interface Object_72 {
  limit?: Integer_12;
  delay?: Integer_13;
  backoff?: String_131;
}
export interface Object_73 {
  token: String_134;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_138 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput {
  uri: String_138;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_5 = boolean;
/**
 * URI of the deleted resource
 */
export type String_139 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput {
  success: Boolean_5;
  uri: String_139;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_140 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput {
  uri: String_140;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_141 = string;
/**
 * The unique name of the workflow
 */
export type String_142 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_143 = string;
/**
 * The type of step
 */
export type String_144 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_145 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_146 = string;
/**
 * A clear description of what this step does
 */
export type String_147 = string;
/**
 * The prompt used to generate the step
 */
export type String_148 = string;
/**
 * Status of the step execution
 */
export type String_149 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_150 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_151 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_23 = Object_83[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_14 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_15 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_152 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_14 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_153 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_154 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_16 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_17 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_155 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_15 = number;
export type Null_2 = null;
/**
 * The name of the tool to call
 */
export type String_156 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_157 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_22 = Object_77[];
/**
 * The authorization token for the workflow
 */
export type String_158 = string;
/**
 * Creation timestamp
 */
export type String_159 = string;
/**
 * Last update timestamp
 */
export type String_160 = string;
/**
 * User who created the resource
 */
export type String_161 = string;
/**
 * User who last updated the resource
 */
export type String_162 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput {
  uri: String_141;
  data: Object_74;
  created_at?: String_159;
  updated_at?: String_160;
  created_by?: String_161;
  updated_by?: String_162;
}
/**
 * Resource data
 */
export interface Object_74 {
  name: String_142;
  description: String_143;
  inputSchema: Object_75;
  outputSchema: Object_76;
  steps: Array_22;
  authorization?: Object_89;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_75 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_76 {
  [k: string]: unknown;
}
export interface Object_77 {
  type?: String_144;
  /**
   * The step definition based on the type
   */
  def?: Object_78 | Object_86;
  [k: string]: unknown;
}
export interface Object_78 {
  id?: String_145;
  name?: String_146;
  description?: String_147;
  prompt?: String_148;
  inputSchema?: Object_79;
  outputSchema?: Object_80;
  input?: Object_81;
  output?: Object_82;
  status?: String_149;
  execute?: String_150;
  dependencies?: Array_23;
  options?: Object_84;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_79 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_80 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_81 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_82 {
  [k: string]: unknown;
}
export interface Object_83 {
  integrationId: String_151;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_84 {
  retries?: Object_85;
  timeout?: Number_14;
}
export interface Object_85 {
  limit?: Integer_14;
  delay?: Integer_15;
  backoff?: String_152;
}
export interface Object_86 {
  name?: String_153;
  description?: String_154;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_87 | Null_2;
  tool_name?: String_156;
  integration?: String_157;
  [k: string]: unknown;
}
export interface Object_87 {
  retries?: Object_88;
  timeout?: Number_15;
}
export interface Object_88 {
  limit?: Integer_16;
  delay?: Integer_17;
  backoff?: String_155;
}
export interface Object_89 {
  token: String_158;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_163 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READInput {
  uri: String_163;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_164 = string;
export type String_165 = string;
export type String_166 = string;
export type String_167 = string;
export type String_168 = string;
export type String_169 = string;
export type String_170 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_171 = string;
/**
 * Error message if the workflow failed
 */
export type String_172 = string;
export type String_173 = "log" | "warn" | "error";
export type String_174 = string;
/**
 * Console logs from the execution
 */
export type Array_24 = Object_92[];
/**
 * When the workflow started (timestamp)
 */
export type Number_16 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_17 = number;
export type Array_25 = unknown[];
export type String_175 = string;
export type String_176 = string;
export type String_177 = string;
export type String_178 = string;
export type String_179 = string;
export type String_180 = string;
export type Null_3 = null;
export type String_181 = string;
export type String_182 = string;
export type String_183 = string;
export type StringNull = String_184 | Null_4;
export type String_184 = string;
export type Null_4 = null;
export type StringNull_1 = String_185 | Null_5;
export type String_185 = string;
export type Null_5 = null;
export type BooleanNull = Boolean_6 | Null_6;
export type Boolean_6 = boolean;
export type Null_6 = null;
export type String_186 = string;
export type String_187 = string;
export type StringNull_2 = String_188 | Null_7;
export type String_188 = string;
export type Null_7 = null;
export type StringNull_3 = String_189 | Null_8;
export type String_189 = string;
export type Null_8 = null;
export type BooleanNull_1 = Boolean_7 | Null_9;
export type Boolean_7 = boolean;
export type Null_9 = null;
export type String_190 = string;
export type String_191 = string;
export type Null_10 = null;
export type StringNull_4 = String_192 | Null_11;
export type String_192 = string;
export type Null_11 = null;
export type StringNull_5 = String_193 | Null_12;
export type String_193 = string;
export type Null_12 = null;
export type BooleanNull_2 = Boolean_8 | Null_13;
export type Boolean_8 = boolean;
export type Null_13 = null;
export type String_194 = string;
export type String_195 = string;
export type Null_14 = null;
export type Array_27 = Object_100[];
export type Array_26 = Object_98[];
export type String_196 = string;
export type String_197 = string;
export type Null_15 = null;
export type String_198 = string;
/**
 * Creation timestamp
 */
export type String_199 = string;
/**
 * Last update timestamp
 */
export type String_200 = string;
/**
 * User who created the resource
 */
export type String_201 = string;
/**
 * User who last updated the resource
 */
export type String_202 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READOutput {
  uri: String_164;
  data: Object_90;
  created_at?: String_199;
  updated_at?: String_200;
  created_by?: String_201;
  updated_by?: String_202;
}
/**
 * Resource data
 */
export interface Object_90 {
  name: String_165;
  description?: String_166;
  icon?: String_167;
  status: String_168;
  runId: String_169;
  workflowURI?: String_170;
  currentStep?: String_171;
  stepResults?: Object_91;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_172;
  logs?: Array_24;
  startTime?: Number_16;
  endTime?: Number_17;
  workflowStatus?: Object_93;
}
/**
 * Results from completed steps
 */
export interface Object_91 {
  [k: string]: unknown;
}
export interface Object_92 {
  type: String_173;
  content: String_174;
}
export interface Object_93 {
  params?: Object_94 | Null_3;
  trigger?: Object_97;
  versionId?: String_182;
  queued?: String_183;
  start?: StringNull;
  end?: StringNull_1;
  success?: BooleanNull;
  steps?: Array_26;
  error?: Object_102 | Null_15;
  output?: unknown;
  status?: String_198;
  [k: string]: unknown;
}
export interface Object_94 {
  input?: unknown;
  steps?: Array_25;
  name?: String_175;
  context?: Object_95;
  [k: string]: unknown;
}
export interface Object_95 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_176;
  startedBy?: Object_96;
  startedAt?: String_180;
  [k: string]: unknown;
}
export interface Object_96 {
  id: String_177;
  email?: String_178;
  name?: String_179;
}
export interface Object_97 {
  source: String_181;
  [k: string]: unknown;
}
export interface Object_98 {
  name?: String_186;
  type?: String_187;
  start?: StringNull_2;
  end?: StringNull_3;
  success?: BooleanNull_1;
  output?: unknown;
  error?: Object_99 | Null_10;
  attempts?: Array_27;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_99 {
  name?: String_190;
  message?: String_191;
}
export interface Object_100 {
  start?: StringNull_4;
  end?: StringNull_5;
  success?: BooleanNull_2;
  error?: Object_101 | Null_14;
}
export interface Object_101 {
  name?: String_194;
  message?: String_195;
}
export interface Object_102 {
  name?: String_196;
  message?: String_197;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_203 = string;
/**
 * Page number (1-based)
 */
export type Integer_18 = number;
/**
 * Number of items per page
 */
export type Integer_19 = number;
/**
 * Field to sort by
 */
export type String_204 = string;
/**
 * Sort order
 */
export type String_205 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput {
  term?: String_203;
  page?: Integer_18;
  pageSize?: Integer_19;
  filters?: Object_103;
  sortBy?: String_204;
  sortOrder?: String_205;
}
/**
 * Additional filters to apply
 */
export interface Object_103 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_206 = string;
export type String_207 = string;
/**
 * Description of the resource
 */
export type String_208 = string;
/**
 * URL to the resource icon
 */
export type String_209 = string;
export type String_210 = string;
export type String_211 = string;
export type String_212 = string;
export type String_213 = string;
export type String_214 = string;
export type String_215 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_216 = string;
/**
 * Error message if the workflow failed
 */
export type String_217 = string;
export type String_218 = "log" | "warn" | "error";
export type String_219 = string;
/**
 * Console logs from the execution
 */
export type Array_29 = Object_108[];
/**
 * When the workflow started (timestamp)
 */
export type Number_18 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_19 = number;
export type Array_30 = unknown[];
export type String_220 = string;
export type String_221 = string;
export type String_222 = string;
export type String_223 = string;
export type String_224 = string;
export type String_225 = string;
export type Null_16 = null;
export type String_226 = string;
export type String_227 = string;
export type String_228 = string;
export type StringNull_6 = String_229 | Null_17;
export type String_229 = string;
export type Null_17 = null;
export type StringNull_7 = String_230 | Null_18;
export type String_230 = string;
export type Null_18 = null;
export type BooleanNull_3 = Boolean_9 | Null_19;
export type Boolean_9 = boolean;
export type Null_19 = null;
export type String_231 = string;
export type String_232 = string;
export type StringNull_8 = String_233 | Null_20;
export type String_233 = string;
export type Null_20 = null;
export type StringNull_9 = String_234 | Null_21;
export type String_234 = string;
export type Null_21 = null;
export type BooleanNull_4 = Boolean_10 | Null_22;
export type Boolean_10 = boolean;
export type Null_22 = null;
export type String_235 = string;
export type String_236 = string;
export type Null_23 = null;
export type StringNull_10 = String_237 | Null_24;
export type String_237 = string;
export type Null_24 = null;
export type StringNull_11 = String_238 | Null_25;
export type String_238 = string;
export type Null_25 = null;
export type BooleanNull_5 = Boolean_11 | Null_26;
export type Boolean_11 = boolean;
export type Null_26 = null;
export type String_239 = string;
export type String_240 = string;
export type Null_27 = null;
export type Array_32 = Object_116[];
export type Array_31 = Object_114[];
export type String_241 = string;
export type String_242 = string;
export type Null_28 = null;
export type String_243 = string;
/**
 * Creation timestamp
 */
export type String_244 = string;
/**
 * Last update timestamp
 */
export type String_245 = string;
/**
 * User who created the resource
 */
export type String_246 = string;
/**
 * User who last updated the resource
 */
export type String_247 = string;
/**
 * Array of matching resources
 */
export type Array_28 = Object_104[];
/**
 * Total number of matching resources
 */
export type Integer_20 = number;
/**
 * Current page number
 */
export type Integer_21 = number;
/**
 * Number of items per page
 */
export type Integer_22 = number;
/**
 * Total number of pages
 */
export type Integer_23 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_12 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_13 = boolean;

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput {
  items: Array_28;
  totalCount: Integer_20;
  page: Integer_21;
  pageSize: Integer_22;
  totalPages: Integer_23;
  hasNextPage: Boolean_12;
  hasPreviousPage: Boolean_13;
}
export interface Object_104 {
  uri: String_206;
  /**
   * Resource data with required name
   */
  data: Object_105 & Object_106;
  created_at?: String_244;
  updated_at?: String_245;
  created_by?: String_246;
  updated_by?: String_247;
}
export interface Object_105 {
  name: String_207;
  description?: String_208;
  icon?: String_209;
}
export interface Object_106 {
  name: String_210;
  description?: String_211;
  icon?: String_212;
  status: String_213;
  runId: String_214;
  workflowURI?: String_215;
  currentStep?: String_216;
  stepResults?: Object_107;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_217;
  logs?: Array_29;
  startTime?: Number_18;
  endTime?: Number_19;
  workflowStatus?: Object_109;
}
/**
 * Results from completed steps
 */
export interface Object_107 {
  [k: string]: unknown;
}
export interface Object_108 {
  type: String_218;
  content: String_219;
}
export interface Object_109 {
  params?: Object_110 | Null_16;
  trigger?: Object_113;
  versionId?: String_227;
  queued?: String_228;
  start?: StringNull_6;
  end?: StringNull_7;
  success?: BooleanNull_3;
  steps?: Array_31;
  error?: Object_118 | Null_28;
  output?: unknown;
  status?: String_243;
  [k: string]: unknown;
}
export interface Object_110 {
  input?: unknown;
  steps?: Array_30;
  name?: String_220;
  context?: Object_111;
  [k: string]: unknown;
}
export interface Object_111 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_221;
  startedBy?: Object_112;
  startedAt?: String_225;
  [k: string]: unknown;
}
export interface Object_112 {
  id: String_222;
  email?: String_223;
  name?: String_224;
}
export interface Object_113 {
  source: String_226;
  [k: string]: unknown;
}
export interface Object_114 {
  name?: String_231;
  type?: String_232;
  start?: StringNull_8;
  end?: StringNull_9;
  success?: BooleanNull_4;
  output?: unknown;
  error?: Object_115 | Null_23;
  attempts?: Array_32;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_115 {
  name?: String_235;
  message?: String_236;
}
export interface Object_116 {
  start?: StringNull_10;
  end?: StringNull_11;
  success?: BooleanNull_5;
  error?: Object_117 | Null_27;
}
export interface Object_117 {
  name?: String_239;
  message?: String_240;
}
export interface Object_118 {
  name?: String_241;
  message?: String_242;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_248 = string;
/**
 * Page number (1-based)
 */
export type Integer_24 = number;
/**
 * Number of items per page
 */
export type Integer_25 = number;
/**
 * Field to sort by
 */
export type String_249 = string;
/**
 * Sort order
 */
export type String_250 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput {
  term?: String_248;
  page?: Integer_24;
  pageSize?: Integer_25;
  filters?: Object_119;
  sortBy?: String_249;
  sortOrder?: String_250;
}
/**
 * Additional filters to apply
 */
export interface Object_119 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_251 = string;
export type String_252 = string;
/**
 * Description of the resource
 */
export type String_253 = string;
/**
 * URL to the resource icon
 */
export type String_254 = string;
/**
 * The unique name of the workflow
 */
export type String_255 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_256 = string;
/**
 * Creation timestamp
 */
export type String_257 = string;
/**
 * Last update timestamp
 */
export type String_258 = string;
/**
 * User who created the resource
 */
export type String_259 = string;
/**
 * User who last updated the resource
 */
export type String_260 = string;
/**
 * Array of matching resources
 */
export type Array_33 = Object_120[];
/**
 * Total number of matching resources
 */
export type Integer_26 = number;
/**
 * Current page number
 */
export type Integer_27 = number;
/**
 * Number of items per page
 */
export type Integer_28 = number;
/**
 * Total number of pages
 */
export type Integer_29 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_14 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_15 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput {
  items: Array_33;
  totalCount: Integer_26;
  page: Integer_27;
  pageSize: Integer_28;
  totalPages: Integer_29;
  hasNextPage: Boolean_14;
  hasPreviousPage: Boolean_15;
}
export interface Object_120 {
  uri: String_251;
  /**
   * Resource data with required name
   */
  data: Object_121 & Object_122;
  created_at?: String_257;
  updated_at?: String_258;
  created_by?: String_259;
  updated_by?: String_260;
}
export interface Object_121 {
  name: String_252;
  description?: String_253;
  icon?: String_254;
}
export interface Object_122 {
  name: String_255;
  description: String_256;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_261 = string;
/**
 * The unique name of the workflow
 */
export type String_262 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_263 = string;
/**
 * The type of step
 */
export type String_264 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_265 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_266 = string;
/**
 * A clear description of what this step does
 */
export type String_267 = string;
/**
 * The prompt used to generate the step
 */
export type String_268 = string;
/**
 * Status of the step execution
 */
export type String_269 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_270 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_271 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_35 = Object_132[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_30 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_31 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_272 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_20 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_273 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_274 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_32 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_33 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_275 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_21 = number;
export type Null_29 = null;
/**
 * The name of the tool to call
 */
export type String_276 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_277 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_34 = Object_126[];
/**
 * The authorization token for the workflow
 */
export type String_278 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput {
  uri: String_261;
  data: Object_123;
}
/**
 * Updated resource data
 */
export interface Object_123 {
  name: String_262;
  description: String_263;
  inputSchema: Object_124;
  outputSchema: Object_125;
  steps: Array_34;
  authorization?: Object_138;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_124 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_125 {
  [k: string]: unknown;
}
export interface Object_126 {
  type?: String_264;
  /**
   * The step definition based on the type
   */
  def?: Object_127 | Object_135;
  [k: string]: unknown;
}
export interface Object_127 {
  id?: String_265;
  name?: String_266;
  description?: String_267;
  prompt?: String_268;
  inputSchema?: Object_128;
  outputSchema?: Object_129;
  input?: Object_130;
  output?: Object_131;
  status?: String_269;
  execute?: String_270;
  dependencies?: Array_35;
  options?: Object_133;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_128 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_129 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_130 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_131 {
  [k: string]: unknown;
}
export interface Object_132 {
  integrationId: String_271;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_133 {
  retries?: Object_134;
  timeout?: Number_20;
}
export interface Object_134 {
  limit?: Integer_30;
  delay?: Integer_31;
  backoff?: String_272;
}
export interface Object_135 {
  name?: String_273;
  description?: String_274;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_136 | Null_29;
  tool_name?: String_276;
  integration?: String_277;
  [k: string]: unknown;
}
export interface Object_136 {
  retries?: Object_137;
  timeout?: Number_21;
}
export interface Object_137 {
  limit?: Integer_32;
  delay?: Integer_33;
  backoff?: String_275;
}
export interface Object_138 {
  token: String_278;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_279 = string;
/**
 * The unique name of the workflow
 */
export type String_280 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_281 = string;
/**
 * The type of step
 */
export type String_282 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_283 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_284 = string;
/**
 * A clear description of what this step does
 */
export type String_285 = string;
/**
 * The prompt used to generate the step
 */
export type String_286 = string;
/**
 * Status of the step execution
 */
export type String_287 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_288 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_289 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_37 = Object_148[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_34 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_35 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_290 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_22 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_291 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_292 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_36 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_37 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_293 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_23 = number;
export type Null_30 = null;
/**
 * The name of the tool to call
 */
export type String_294 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_295 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_36 = Object_142[];
/**
 * The authorization token for the workflow
 */
export type String_296 = string;
/**
 * Original creation timestamp
 */
export type String_297 = string;
/**
 * Last update timestamp
 */
export type String_298 = string;
/**
 * User who originally created the resource
 */
export type String_299 = string;
/**
 * User who last updated the resource
 */
export type String_300 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput {
  uri: String_279;
  data: Object_139;
  created_at?: String_297;
  updated_at?: String_298;
  created_by?: String_299;
  updated_by?: String_300;
}
/**
 * Updated resource data
 */
export interface Object_139 {
  name: String_280;
  description: String_281;
  inputSchema: Object_140;
  outputSchema: Object_141;
  steps: Array_36;
  authorization?: Object_154;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_140 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_141 {
  [k: string]: unknown;
}
export interface Object_142 {
  type?: String_282;
  /**
   * The step definition based on the type
   */
  def?: Object_143 | Object_151;
  [k: string]: unknown;
}
export interface Object_143 {
  id?: String_283;
  name?: String_284;
  description?: String_285;
  prompt?: String_286;
  inputSchema?: Object_144;
  outputSchema?: Object_145;
  input?: Object_146;
  output?: Object_147;
  status?: String_287;
  execute?: String_288;
  dependencies?: Array_37;
  options?: Object_149;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_144 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_145 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_146 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_147 {
  [k: string]: unknown;
}
export interface Object_148 {
  integrationId: String_289;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_149 {
  retries?: Object_150;
  timeout?: Number_22;
}
export interface Object_150 {
  limit?: Integer_34;
  delay?: Integer_35;
  backoff?: String_290;
}
export interface Object_151 {
  name?: String_291;
  description?: String_292;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_152 | Null_30;
  tool_name?: String_294;
  integration?: String_295;
  [k: string]: unknown;
}
export interface Object_152 {
  retries?: Object_153;
  timeout?: Number_23;
}
export interface Object_153 {
  limit?: Integer_36;
  delay?: Integer_37;
  backoff?: String_293;
}
export interface Object_154 {
  token: String_296;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_301 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput {
  resource: String_301;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_302 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_303 = string;
export type String_304 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_38 = String_304[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput {
  url: String_302;
  prompt?: String_303;
  tools?: Array_38;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_305 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_RUNInput {
  resource: String_305;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_306 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_307 = string;
export type String_308 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_39 = String_308[];

export interface DECO_VIEW_RENDER_WORKFLOW_RUNOutput {
  url: String_306;
  prompt?: String_307;
  tools?: Array_39;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_309 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_310 = string;

export interface DECO_WORKFLOW_STARTInput {
  uri: String_309;
  input: Object_155;
  stopAfter?: String_310;
  state?: Object_156;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_155 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_156 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_311 = string;
/**
 * The Resources 2.0 URI of the workflow run (rsc://i:workflows-management/workflow_run/{runId}). Use DECO_RESOURCE_WORKFLOW_RUN_READ to get status and results.
 */
export type String_312 = string;
/**
 * Error message if workflow start failed
 */
export type String_313 = string;

export interface DECO_WORKFLOW_STARTOutput {
  runId?: String_311;
  uri?: String_312;
  error?: String_313;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_314 = string;

export interface DECO_GET_APP_SCHEMAInput {
  appName: String_314;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_315 = string;
export type Array_40 = String_315[];

export interface DECO_GET_APP_SCHEMAOutput {
  schema?: unknown;
  scopes?: Array_40;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_316 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_317 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_318 = string;

export interface DECO_INTEGRATION_INSTALLInput {
  id: String_316;
  provider?: String_317;
  appId?: String_318;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_319 = string;

export interface DECO_INTEGRATION_INSTALLOutput {
  installationId: String_319;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_320 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_321 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_322 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_323 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput {
  appName: String_320;
  returnUrl: String_321;
  installId: String_322;
  provider?: String_323;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_324 = string;
/**
 * Whether to show contracts
 */
export type Boolean_16 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput {
  query?: String_324;
  showContracts?: Boolean_16;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_325 = string;
export type String_326 = string;
export type String_327 = string;
export type String_328 = string;
export type String_329 = string;
export type Null_31 = null;
export type String_330 = string;
export type Null_32 = null;
export type String_331 = string;
export type Null_33 = null;
export type String_332 = "HTTP";
export type String_333 = string;
export type String_334 = string;
export type String_335 = "SSE";
export type String_336 = string;
export type String_337 = string;
export type String_338 = string;
export type String_339 = "Websocket";
export type String_340 = string;
export type String_341 = string;
export type String_342 = "Deco";
export type String_343 = string;
export type String_344 = string;
export type String_345 = "INNATE";
export type String_346 = string;
export type String_347 = string;
export type Null_34 = null;
/**
 * The name of the tool
 */
export type String_348 = string;
/**
 * The description of the tool
 */
export type String_349 = string;
export type Array_42 = (Object_165 & Object_167)[];
export type Null_35 = null;
export type String_350 = string;
export type String_351 = string;
/**
 * The Integrations that match the query
 */
export type Array_41 = (Object_157 & Object_169)[];

export interface DECO_INTEGRATIONS_SEARCHOutput {
  integrations: Array_41;
}
export interface Object_157 {
  id: String_325;
  name: String_326;
  description?: String_327;
  icon?: String_328;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_329
      )
    | Null_31;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_330
      )
    | Null_32;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_331
      )
    | Null_33;
  connection: Object_158 | Object_159 | Object_161 | Object_162 | Object_163;
  metadata?: Object_164 | Null_34;
  tools?: Array_42 | Null_35;
}
export interface Object_158 {
  type: String_332;
  url: String_333;
  token?: String_334;
}
export interface Object_159 {
  type: String_335;
  url: String_336;
  token?: String_337;
  headers?: Object_160;
}
export interface Object_160 {
  [k: string]: String_338;
}
export interface Object_161 {
  type: String_339;
  url: String_340;
  token?: String_341;
}
export interface Object_162 {
  type: String_342;
  tenant: String_343;
  token?: String_344;
}
export interface Object_163 {
  type: String_345;
  name: String_346;
  workspace?: String_347;
}
export interface Object_164 {
  [k: string]: unknown;
}
export interface Object_165 {
  name: String_348;
  inputSchema: Object_166;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_166 {
  [k: string]: unknown;
}
export interface Object_167 {
  description?: String_349;
  outputSchema?: Object_168;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_168 {
  [k: string]: unknown;
}
export interface Object_169 {
  provider: String_350;
  friendlyName?: String_351;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_352 = string;
export type String_353 = "HTTP";
export type String_354 = string;
export type String_355 = string;
export type String_356 = "SSE";
export type String_357 = string;
export type String_358 = string;
export type String_359 = string;
export type String_360 = "Websocket";
export type String_361 = string;
export type String_362 = string;
export type String_363 = "Deco";
export type String_364 = string;
export type String_365 = string;
export type String_366 = "INNATE";
export type String_367 = string;
export type String_368 = string;
export type String_369 = string;
export type Integer_38 = number;
export type String_370 = string;

export interface INTEGRATIONS_CALL_TOOLInput {
  id?: String_352;
  connection?: Object_170 | Object_171 | Object_173 | Object_174 | Object_175;
  params: Object_176;
}
export interface Object_170 {
  type: String_353;
  url: String_354;
  token?: String_355;
}
export interface Object_171 {
  type: String_356;
  url: String_357;
  token?: String_358;
  headers?: Object_172;
}
export interface Object_172 {
  [k: string]: String_359;
}
export interface Object_173 {
  type: String_360;
  url: String_361;
  token?: String_362;
}
export interface Object_174 {
  type: String_363;
  tenant: String_364;
  token?: String_365;
}
export interface Object_175 {
  type: String_366;
  name: String_367;
  workspace?: String_368;
}
export interface Object_176 {
  _meta?: Object_177;
  name: String_370;
  arguments?: Object_178;
  [k: string]: unknown;
}
export interface Object_177 {
  progressToken?: String_369 | Integer_38;
  [k: string]: unknown;
}
export interface Object_178 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_371 = string;
export type String_372 = string;
export type String_373 = string;
export type String_374 = string;
export type String_375 = string;
export type Null_36 = null;
export type String_376 = string;
export type Null_37 = null;
export type String_377 = "HTTP";
export type String_378 = string;
export type String_379 = string;
export type String_380 = "SSE";
export type String_381 = string;
export type String_382 = string;
export type String_383 = string;
export type String_384 = "Websocket";
export type String_385 = string;
export type String_386 = string;
export type String_387 = "Deco";
export type String_388 = string;
export type String_389 = string;
export type String_390 = "INNATE";
export type String_391 = string;
export type String_392 = string;
export type Null_38 = null;
/**
 * The name of the tool
 */
export type String_393 = string;
/**
 * The description of the tool
 */
export type String_394 = string;
export type Array_43 = (Object_186 & Object_188)[];
export type Null_39 = null;
export type String_395 = string;

export interface INTEGRATIONS_CREATEInput {
  id?: String_371;
  name?: String_372;
  description?: String_373;
  icon?: String_374;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_375
      )
    | Null_36;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_376
      )
    | Null_37;
  connection?: Object_179 | Object_180 | Object_182 | Object_183 | Object_184;
  metadata?: Object_185 | Null_38;
  tools?: Array_43 | Null_39;
  clientIdFromApp?: String_395;
}
export interface Object_179 {
  type: String_377;
  url: String_378;
  token?: String_379;
}
export interface Object_180 {
  type: String_380;
  url: String_381;
  token?: String_382;
  headers?: Object_181;
}
export interface Object_181 {
  [k: string]: String_383;
}
export interface Object_182 {
  type: String_384;
  url: String_385;
  token?: String_386;
}
export interface Object_183 {
  type: String_387;
  tenant: String_388;
  token?: String_389;
}
export interface Object_184 {
  type: String_390;
  name: String_391;
  workspace?: String_392;
}
export interface Object_185 {
  [k: string]: unknown;
}
export interface Object_186 {
  name: String_393;
  inputSchema: Object_187;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_187 {
  [k: string]: unknown;
}
export interface Object_188 {
  description?: String_394;
  outputSchema?: Object_189;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_189 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_396 = string;

export interface INTEGRATIONS_DELETEInput {
  id: String_396;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_397 = string;

export interface INTEGRATIONS_GETInput {
  id: String_397;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_398 = string;

export interface INTEGRATIONS_GET_API_KEYInput {
  integrationId: String_398;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GET_API_KEYOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_399 = "Channel" | "View";
export type Boolean_17 = boolean;

export interface INTEGRATIONS_LISTInput {
  binder?: String_399;
  hideVirtual?: Boolean_17;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_400 = string;
export type String_401 = string;
export type String_402 = string;
export type String_403 = string;
export type String_404 = string;
export type Null_40 = null;
export type String_405 = string;
export type Null_41 = null;
export type String_406 = string;
export type Null_42 = null;
export type String_407 = "HTTP";
export type String_408 = string;
export type String_409 = string;
export type String_410 = "SSE";
export type String_411 = string;
export type String_412 = string;
export type String_413 = string;
export type String_414 = "Websocket";
export type String_415 = string;
export type String_416 = string;
export type String_417 = "Deco";
export type String_418 = string;
export type String_419 = string;
export type String_420 = "INNATE";
export type String_421 = string;
export type String_422 = string;
export type Null_43 = null;
/**
 * The name of the tool
 */
export type String_423 = string;
/**
 * The description of the tool
 */
export type String_424 = string;
export type Array_45 = (Object_198 & Object_200)[];
export type Null_44 = null;
export type Array_44 = Object_190[];

export interface INTEGRATIONS_LISTOutput {
  items: Array_44;
}
export interface Object_190 {
  id: String_400;
  name: String_401;
  description?: String_402;
  icon?: String_403;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_404
      )
    | Null_40;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_405
      )
    | Null_41;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_406
      )
    | Null_42;
  connection: Object_191 | Object_192 | Object_194 | Object_195 | Object_196;
  metadata?: Object_197 | Null_43;
  tools?: Array_45 | Null_44;
}
export interface Object_191 {
  type: String_407;
  url: String_408;
  token?: String_409;
}
export interface Object_192 {
  type: String_410;
  url: String_411;
  token?: String_412;
  headers?: Object_193;
}
export interface Object_193 {
  [k: string]: String_413;
}
export interface Object_194 {
  type: String_414;
  url: String_415;
  token?: String_416;
}
export interface Object_195 {
  type: String_417;
  tenant: String_418;
  token?: String_419;
}
export interface Object_196 {
  type: String_420;
  name: String_421;
  workspace?: String_422;
}
export interface Object_197 {
  [k: string]: unknown;
}
export interface Object_198 {
  name: String_423;
  inputSchema: Object_199;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_199 {
  [k: string]: unknown;
}
export interface Object_200 {
  description?: String_424;
  outputSchema?: Object_201;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_201 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_425 = string;
export type String_426 = string;
export type String_427 = string;
export type String_428 = string;
export type String_429 = string;
export type String_430 = string;
export type Null_45 = null;
export type String_431 = string;
export type Null_46 = null;
export type String_432 = string;
export type Null_47 = null;
export type String_433 = "HTTP";
export type String_434 = string;
export type String_435 = string;
export type String_436 = "SSE";
export type String_437 = string;
export type String_438 = string;
export type String_439 = string;
export type String_440 = "Websocket";
export type String_441 = string;
export type String_442 = string;
export type String_443 = "Deco";
export type String_444 = string;
export type String_445 = string;
export type String_446 = "INNATE";
export type String_447 = string;
export type String_448 = string;
export type Null_48 = null;
/**
 * The name of the tool
 */
export type String_449 = string;
/**
 * The description of the tool
 */
export type String_450 = string;
export type Array_46 = (Object_210 & Object_212)[];
export type Null_49 = null;

export interface INTEGRATIONS_UPDATEInput {
  id: String_425;
  integration: Object_202;
}
export interface Object_202 {
  id: String_426;
  name: String_427;
  description?: String_428;
  icon?: String_429;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_430
      )
    | Null_45;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_431
      )
    | Null_46;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_432
      )
    | Null_47;
  connection: Object_203 | Object_204 | Object_206 | Object_207 | Object_208;
  metadata?: Object_209 | Null_48;
  tools?: Array_46 | Null_49;
}
export interface Object_203 {
  type: String_433;
  url: String_434;
  token?: String_435;
}
export interface Object_204 {
  type: String_436;
  url: String_437;
  token?: String_438;
  headers?: Object_205;
}
export interface Object_205 {
  [k: string]: String_439;
}
export interface Object_206 {
  type: String_440;
  url: String_441;
  token?: String_442;
}
export interface Object_207 {
  type: String_443;
  tenant: String_444;
  token?: String_445;
}
export interface Object_208 {
  type: String_446;
  name: String_447;
  workspace?: String_448;
}
export interface Object_209 {
  [k: string]: unknown;
}
export interface Object_210 {
  name: String_449;
  inputSchema: Object_211;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_211 {
  [k: string]: unknown;
}
export interface Object_212 {
  description?: String_450;
  outputSchema?: Object_213;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_213 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_451 = string;

export interface DECO_CHAT_OAUTH_STARTInput {
  returnUrl: String_451;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_452 = string;
export type Array_47 = String_452[];

export interface DECO_CHAT_OAUTH_STARTOutput {
  stateSchema?: unknown;
  scopes?: Array_47;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_STATE_VALIDATIONInput {
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_18 = boolean;

export interface DECO_CHAT_STATE_VALIDATIONOutput {
  valid: Boolean_18;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_453 = string;
export type String_454 = string;
export type String_455 = string;
export type String_456 = string;
export type String_457 = string;
export type String_458 = string;
export type String_459 = string;
export type String_460 = string;
export type String_461 = string;
export type Array_49 = String_461[];
export type String_462 = string;
export type String_463 = "none" | "open" | "autoPin";
export type Array_48 = Object_214[];

export interface DECO_CHAT_VIEWS_LISTOutput_1 {
  views: Array_48;
}
export interface Object_214 {
  id?: String_453;
  name?: String_454;
  title: String_455;
  description?: String_456;
  icon: String_457;
  url?: String_458;
  mimeTypePattern?: String_459;
  resourceName?: String_460;
  tools?: Array_49;
  prompt?: String_462;
  installBehavior?: String_463;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * What this step should accomplish
 */
export type String_464 = string;
export type String_465 = string;
export type String_466 = string;
/**
 * Previous steps for context and @ref resolution
 */
export type Array_50 = Object_215[];
export type String_467 = string;
export type String_468 = string;
export type String_469 = string;
export type String_470 = string;
export type Array_52 = Object_218[];
/**
 * Available integrations (if not provided, uses static catalog)
 */
export type Array_51 = Object_217[];
export type String_471 = string;
export type String_472 = string;
export type String_473 = string;
export type String_474 = string;
/**
 * Tools explicitly mentioned in prompt with @tool-name syntax
 */
export type Array_53 = Object_219[];

export interface GENERATE_STEPInput {
  objective: String_464;
  previousSteps?: Array_50;
  availableIntegrations?: Array_51;
  selectedTools?: Array_53;
}
export interface Object_215 {
  id?: String_465;
  name: String_466;
  outputSchema: Object_216;
}
export interface Object_216 {
  [k: string]: unknown;
}
export interface Object_217 {
  id: String_467;
  name: String_468;
  tools: Array_52;
}
export interface Object_218 {
  name: String_469;
  description: String_470;
}
export interface Object_219 {
  name: String_471;
  integrationId: String_472;
  integrationName: String_473;
  description?: String_474;
  inputSchema?: Object_220;
  outputSchema?: Object_221;
}
export interface Object_220 {
  [k: string]: unknown;
}
export interface Object_221 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_475 = string;
export type String_476 = string;
export type String_477 = string;
export type String_478 = string;
export type String_479 = string;
export type String_480 = string;
export type String_481 = string;
export type String_482 = string;

export interface GENERATE_STEPOutput {
  step: Object_222;
  reasoning?: String_482;
}
export interface Object_222 {
  id: String_475;
  name: String_476;
  description: String_477;
  execute: String_478;
  inputSchema: Object_223;
  outputSchema: Object_224;
  input: Object_225;
  inputDescription?: Object_226;
  primaryIntegration?: String_480;
  primaryTool?: String_481;
  inputView?: Object_227;
  outputView?: Object_228;
}
export interface Object_223 {
  [k: string]: unknown;
}
export interface Object_224 {
  [k: string]: unknown;
}
export interface Object_225 {
  [k: string]: unknown;
}
export interface Object_226 {
  [k: string]: String_479;
}
export interface Object_227 {
  [k: string]: unknown;
}
export interface Object_228 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Step ID
 */
export type String_483 = string;
/**
 * Field name from input schema
 */
export type String_484 = string;
/**
 * Optional previous step ID to use its output data
 */
export type String_485 = string;
/**
 * First 200 chars of previous step output (for context)
 */
export type String_486 = string;
/**
 * View name (view1, view2, etc)
 */
export type String_487 = string;
/**
 * What this input view should do (e.g., 'dropdown with search', 'multi-select')
 */
export type String_488 = string;

export interface GENERATE_STEP_INPUT_VIEWInput {
  stepId: String_483;
  fieldName: String_484;
  fieldSchema: Object_229;
  previousStepId?: String_485;
  previousStepOutput?: String_486;
  viewName: String_487;
  purpose: String_488;
}
/**
 * Field JSON Schema
 */
export interface Object_229 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Complete HTML with inline CSS and JS
 */
export type String_489 = string;
/**
 * Explanation of design choices
 */
export type String_490 = string;

export interface GENERATE_STEP_INPUT_VIEWOutput {
  viewCode: String_489;
  reasoning: String_490;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Step ID
 */
export type String_491 = string;
/**
 * Step name for context
 */
export type String_492 = string;
/**
 * First 100 chars of actual output data
 */
export type String_493 = string;
/**
 * View name (view1, view2, etc)
 */
export type String_494 = string;
/**
 * What this view should emphasize or how it should display data
 */
export type String_495 = string;

export interface GENERATE_STEP_OUTPUT_VIEWInput {
  stepId: String_491;
  stepName: String_492;
  outputSchema: Object_230;
  outputSample: String_493;
  viewName: String_494;
  purpose: String_495;
}
/**
 * Output JSON Schema
 */
export interface Object_230 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Complete HTML with inline CSS and JS
 */
export type String_496 = string;
/**
 * Explanation of design choices
 */
export type String_497 = string;

export interface GENERATE_STEP_OUTPUT_VIEWOutput {
  viewCode: String_496;
  reasoning: String_497;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * What is this view for? (e.g., 'Display payment information', 'Input form for user data')
 */
export type String_498 = string;
/**
 * Type of view to generate
 */
export type String_499 = "input" | "output";
/**
 * Any specific design preferences or requirements
 */
export type String_500 = string;

export interface GENERATE_VIEWInput {
  purpose: String_498;
  viewType: String_499;
  dataSchema: Object_231;
  designPreference?: String_500;
}
/**
 * JSON Schema of the data this view will handle
 */
export interface Object_231 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_501 =
  | "container"
  | "text"
  | "heading"
  | "card"
  | "table"
  | "list"
  | "badge"
  | "button"
  | "input"
  | "select"
  | "file-upload"
  | "code"
  | "divider";
export type String_502 = string;
export type Array_54 = (Object_232 | String_502)[];
export type String_503 = string;
export type String_504 =
  | "primary"
  | "secondary"
  | "success"
  | "warning"
  | "error"
  | "info";
export type String_505 = "sm" | "md" | "lg";
export type String_506 = "vertical" | "horizontal" | "grid";
export type Number_24 = number;
export type Number_25 = number;
export type Boolean_19 = boolean;
export type Boolean_20 = boolean;
export type String_507 = string;

export interface GENERATE_VIEWOutput {
  view: Object_232;
  reasoning: String_507;
  exampleData?: Object_235;
}
export interface Object_232 {
  type: String_501;
  props?: Object_233;
  children?: Array_54;
  data?: String_503;
  style?: Object_234;
}
export interface Object_233 {
  [k: string]: unknown;
}
export interface Object_234 {
  variant?: String_504;
  size?: String_505;
  layout?: String_506;
  gap?: Number_24;
  padding?: Number_25;
  border?: Boolean_19;
  rounded?: Boolean_20;
}
export interface Object_235 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_508 = "input" | "output" | "both";

export interface GET_VIEW_EXAMPLESInput {
  viewType?: String_508;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_509 = string;
export type String_510 = string;
export type String_511 = "input" | "output";
export type String_512 =
  | "container"
  | "text"
  | "heading"
  | "card"
  | "table"
  | "list"
  | "badge"
  | "button"
  | "input"
  | "select"
  | "file-upload"
  | "code"
  | "divider";
export type String_513 = string;
export type Array_56 = (Object_237 | String_513)[];
export type String_514 = string;
export type String_515 =
  | "primary"
  | "secondary"
  | "success"
  | "warning"
  | "error"
  | "info";
export type String_516 = "sm" | "md" | "lg";
export type String_517 = "vertical" | "horizontal" | "grid";
export type Number_26 = number;
export type Number_27 = number;
export type Boolean_21 = boolean;
export type Boolean_22 = boolean;
export type Array_55 = Object_236[];

export interface GET_VIEW_EXAMPLESOutput {
  examples: Array_55;
}
export interface Object_236 {
  name: String_509;
  description: String_510;
  viewType: String_511;
  view: Object_237;
  exampleData?: Object_240;
}
export interface Object_237 {
  type: String_512;
  props?: Object_238;
  children?: Array_56;
  data?: String_514;
  style?: Object_239;
}
export interface Object_238 {
  [k: string]: unknown;
}
export interface Object_239 {
  variant?: String_515;
  size?: String_516;
  layout?: String_517;
  gap?: Number_26;
  padding?: Number_27;
  border?: Boolean_21;
  rounded?: Boolean_22;
}
export interface Object_240 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_518 = string;
export type String_519 = string;
export type String_520 = string;
export type String_521 = string;

export interface IMPORT_TOOL_AS_STEPInput {
  toolName: String_518;
  integrationId: String_519;
  integrationName: String_520;
  toolDescription?: String_521;
  inputSchema?: Object_241;
  outputSchema?: Object_242;
}
export interface Object_241 {
  [k: string]: unknown;
}
export interface Object_242 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The type of step
 */
export type String_522 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_523 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_524 = string;
/**
 * A clear description of what this step does
 */
export type String_525 = string;
/**
 * The prompt used to generate the step
 */
export type String_526 = string;
/**
 * Status of the step execution
 */
export type String_527 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_528 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_529 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_57 = Object_249[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_39 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_40 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_530 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_28 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_531 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_532 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_41 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_42 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_533 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_29 = number;
export type Null_50 = null;
/**
 * The name of the tool to call
 */
export type String_534 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_535 = string;

export interface IMPORT_TOOL_AS_STEPOutput {
  step: Object_243;
}
export interface Object_243 {
  type?: String_522;
  /**
   * The step definition based on the type
   */
  def?: Object_244 | Object_252;
  [k: string]: unknown;
}
export interface Object_244 {
  id?: String_523;
  name?: String_524;
  description?: String_525;
  prompt?: String_526;
  inputSchema?: Object_245;
  outputSchema?: Object_246;
  input?: Object_247;
  output?: Object_248;
  status?: String_527;
  execute?: String_528;
  dependencies?: Array_57;
  options?: Object_250;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_245 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_246 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_247 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_248 {
  [k: string]: unknown;
}
export interface Object_249 {
  integrationId: String_529;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_250 {
  retries?: Object_251;
  timeout?: Number_28;
}
export interface Object_251 {
  limit?: Integer_39;
  delay?: Integer_40;
  backoff?: String_530;
}
export interface Object_252 {
  name?: String_531;
  description?: String_532;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_253 | Null_50;
  tool_name?: String_534;
  integration?: String_535;
  [k: string]: unknown;
}
export interface Object_253 {
  retries?: Object_254;
  timeout?: Number_29;
}
export interface Object_254 {
  limit?: Integer_41;
  delay?: Integer_42;
  backoff?: String_533;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LIST_INSTALLED_INTEGRATIONSInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_536 = string;
export type String_537 = string;
export type String_538 = string;
export type String_539 = string;
export type Array_58 = Object_255[];
export type Boolean_23 = boolean;

export interface LIST_INSTALLED_INTEGRATIONSOutput {
  integrations: Array_58;
  success: Boolean_23;
}
export interface Object_255 {
  id: String_536;
  name: String_537;
  description?: String_538;
  icon?: String_539;
  access?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_540 = string;

export interface READ_WORKFLOWInput {
  uri: String_540;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_541 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_542 = string;
/**
 * The type of step
 */
export type String_543 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_544 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_545 = string;
/**
 * A clear description of what this step does
 */
export type String_546 = string;
/**
 * The prompt used to generate the step
 */
export type String_547 = string;
/**
 * Status of the step execution
 */
export type String_548 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_549 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_550 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_60 = Object_265[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_43 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_44 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_551 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_30 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_552 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_553 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_45 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_46 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_554 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_31 = number;
export type Null_51 = null;
/**
 * The name of the tool to call
 */
export type String_555 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_556 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_59 = Object_259[];
/**
 * The authorization token for the workflow
 */
export type String_557 = string;

export interface READ_WORKFLOWOutput {
  workflow: Object_256;
}
export interface Object_256 {
  name: String_541;
  description: String_542;
  inputSchema: Object_257;
  outputSchema: Object_258;
  steps: Array_59;
  authorization?: Object_271;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_257 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_258 {
  [k: string]: unknown;
}
export interface Object_259 {
  type?: String_543;
  /**
   * The step definition based on the type
   */
  def?: Object_260 | Object_268;
  [k: string]: unknown;
}
export interface Object_260 {
  id?: String_544;
  name?: String_545;
  description?: String_546;
  prompt?: String_547;
  inputSchema?: Object_261;
  outputSchema?: Object_262;
  input?: Object_263;
  output?: Object_264;
  status?: String_548;
  execute?: String_549;
  dependencies?: Array_60;
  options?: Object_266;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_261 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_262 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_263 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_264 {
  [k: string]: unknown;
}
export interface Object_265 {
  integrationId: String_550;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_266 {
  retries?: Object_267;
  timeout?: Number_30;
}
export interface Object_267 {
  limit?: Integer_43;
  delay?: Integer_44;
  backoff?: String_551;
}
export interface Object_268 {
  name?: String_552;
  description?: String_553;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_269 | Null_51;
  tool_name?: String_555;
  integration?: String_556;
  [k: string]: unknown;
}
export interface Object_269 {
  retries?: Object_270;
  timeout?: Number_31;
}
export interface Object_270 {
  limit?: Integer_45;
  delay?: Integer_46;
  backoff?: String_554;
}
export interface Object_271 {
  token: String_557;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_558 = string;
export type String_559 = string;
export type String_560 = string;
export type String_561 = string;
export type String_562 = string;
export type Array_61 = Object_278[];
export type String_563 = string;

export interface RUN_WORKFLOW_STEPInput {
  step: Object_272;
  previousStepResults?: Object_276;
  globalInput?: Object_277;
  workflowSteps?: Array_61;
  authToken?: String_563;
}
export interface Object_272 {
  id: String_558;
  name: String_559;
  execute: String_560;
  inputSchema: Object_273;
  outputSchema: Object_274;
  input: Object_275;
}
export interface Object_273 {
  [k: string]: unknown;
}
export interface Object_274 {
  [k: string]: unknown;
}
export interface Object_275 {
  [k: string]: unknown;
}
export interface Object_276 {
  [k: string]: unknown;
}
export interface Object_277 {
  [k: string]: unknown;
}
export interface Object_278 {
  id: String_561;
  name: String_562;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_24 = boolean;
export type String_564 = string;
export type String_565 = string;
export type Array_62 = Object_279[];
export type String_566 = string;
export type String_567 = string;
export type Array_63 = Object_281[];
export type Number_32 = number;

export interface RUN_WORKFLOW_STEPOutput {
  success: Boolean_24;
  output?: unknown;
  error?: unknown;
  logs?: Array_62;
  resolvedInput?: Object_280;
  resolutionErrors?: Array_63;
  duration?: Number_32;
}
export interface Object_279 {
  type: String_564;
  content: String_565;
}
export interface Object_280 {
  [k: string]: unknown;
}
export interface Object_281 {
  ref: String_566;
  error: String_567;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_568 = string;
/**
 * The unique name of the workflow
 */
export type String_569 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_570 = string;
/**
 * The type of step
 */
export type String_571 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_572 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_573 = string;
/**
 * A clear description of what this step does
 */
export type String_574 = string;
/**
 * The prompt used to generate the step
 */
export type String_575 = string;
/**
 * Status of the step execution
 */
export type String_576 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_577 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_578 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_65 = Object_291[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_47 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_48 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_579 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_33 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_580 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_581 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_49 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_50 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_582 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_34 = number;
export type Null_52 = null;
/**
 * The name of the tool to call
 */
export type String_583 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_584 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_64 = Object_285[];
/**
 * The authorization token for the workflow
 */
export type String_585 = string;

export interface UPDATE_WORKFLOWInput {
  uri: String_568;
  workflow: Object_282;
}
export interface Object_282 {
  name: String_569;
  description: String_570;
  inputSchema: Object_283;
  outputSchema: Object_284;
  steps: Array_64;
  authorization?: Object_297;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_283 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_284 {
  [k: string]: unknown;
}
export interface Object_285 {
  type?: String_571;
  /**
   * The step definition based on the type
   */
  def?: Object_286 | Object_294;
  [k: string]: unknown;
}
export interface Object_286 {
  id?: String_572;
  name?: String_573;
  description?: String_574;
  prompt?: String_575;
  inputSchema?: Object_287;
  outputSchema?: Object_288;
  input?: Object_289;
  output?: Object_290;
  status?: String_576;
  execute?: String_577;
  dependencies?: Array_65;
  options?: Object_292;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_287 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_288 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_289 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_290 {
  [k: string]: unknown;
}
export interface Object_291 {
  integrationId: String_578;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_292 {
  retries?: Object_293;
  timeout?: Number_33;
}
export interface Object_293 {
  limit?: Integer_47;
  delay?: Integer_48;
  backoff?: String_579;
}
export interface Object_294 {
  name?: String_580;
  description?: String_581;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_295 | Null_52;
  tool_name?: String_583;
  integration?: String_584;
  [k: string]: unknown;
}
export interface Object_295 {
  retries?: Object_296;
  timeout?: Number_34;
}
export interface Object_296 {
  limit?: Integer_49;
  delay?: Integer_50;
  backoff?: String_582;
}
export interface Object_297 {
  token: String_585;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_586 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_587 = string;
/**
 * The type of step
 */
export type String_588 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_589 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_590 = string;
/**
 * A clear description of what this step does
 */
export type String_591 = string;
/**
 * The prompt used to generate the step
 */
export type String_592 = string;
/**
 * Status of the step execution
 */
export type String_593 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_594 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_595 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_67 = Object_307[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_51 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_52 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_596 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_35 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_597 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_598 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_53 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_54 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_599 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_36 = number;
export type Null_53 = null;
/**
 * The name of the tool to call
 */
export type String_600 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_601 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_66 = Object_301[];
/**
 * The authorization token for the workflow
 */
export type String_602 = string;

export interface UPDATE_WORKFLOWOutput {
  workflow: Object_298;
}
export interface Object_298 {
  name: String_586;
  description: String_587;
  inputSchema: Object_299;
  outputSchema: Object_300;
  steps: Array_66;
  authorization?: Object_313;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_299 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_300 {
  [k: string]: unknown;
}
export interface Object_301 {
  type?: String_588;
  /**
   * The step definition based on the type
   */
  def?: Object_302 | Object_310;
  [k: string]: unknown;
}
export interface Object_302 {
  id?: String_589;
  name?: String_590;
  description?: String_591;
  prompt?: String_592;
  inputSchema?: Object_303;
  outputSchema?: Object_304;
  input?: Object_305;
  output?: Object_306;
  status?: String_593;
  execute?: String_594;
  dependencies?: Array_67;
  options?: Object_308;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_303 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_304 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_305 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_306 {
  [k: string]: unknown;
}
export interface Object_307 {
  integrationId: String_595;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_308 {
  retries?: Object_309;
  timeout?: Number_35;
}
export interface Object_309 {
  limit?: Integer_51;
  delay?: Integer_52;
  backoff?: String_596;
}
export interface Object_310 {
  name?: String_597;
  description?: String_598;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_311 | Null_53;
  tool_name?: String_600;
  integration?: String_601;
  [k: string]: unknown;
}
export interface Object_311 {
  retries?: Object_312;
  timeout?: Number_36;
}
export interface Object_312 {
  limit?: Integer_53;
  delay?: Integer_54;
  backoff?: String_599;
}
export interface Object_313 {
  token: String_602;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VALIDATE_VIEWInput {
  view: Object_314;
}
/**
 * View definition to validate
 */
export interface Object_314 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_25 = boolean;
export type String_603 = string;
export type Array_68 = String_603[];
export type String_604 = string;
export type Array_69 = String_604[];

export interface VALIDATE_VIEWOutput {
  valid: Boolean_25;
  errors?: Array_68;
  warnings?: Array_69;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_605 = string;
/**
 * Human-readable name of the agent
 */
export type String_606 = string;
/**
 * URL to the agent's avatar image
 */
export type String_607 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_608 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_609 = string;
export type String_610 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_70 = String_610[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_37 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull = Number_38 | Null_54;
export type Number_38 = number;
export type Null_54 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_611 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_612 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_39 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_26 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_27 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_613 = string;
/**
 * URL for the view
 */
export type String_614 = string;
/**
 * Name of the view
 */
export type String_615 = string;
/**
 * Views where the agent can be used
 */
export type Array_71 = Object_318[];
/**
 * Visibility of the agent
 */
export type String_616 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_617 = string;
export type Null_55 = null;
export type Number_40 = number;
export type Null_56 = null;

export interface AGENTS_CREATEInput {
  id?: String_605;
  name?: String_606;
  avatar?: String_607;
  instructions?: String_608;
  description?: String_609;
  tools_set?: Object_315;
  max_steps?: Number_37;
  max_tokens?: NumberNull;
  model?: String_611;
  memory?: Object_316;
  views?: Array_71;
  visibility?: String_616;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_617
      )
    | Null_55;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_40
      )
    | Null_56;
}
/**
 * Tools available to the agent
 */
export interface Object_315 {
  [k: string]: Array_70;
}
/**
 * Memory to use for the agent
 */
export interface Object_316 {
  discriminator?: String_612;
  last_messages?: Number_39;
  semantic_recall?: Boolean_26;
  working_memory?: Object_317;
}
/**
 * Working memory to use for the agent
 */
export interface Object_317 {
  enabled?: Boolean_27;
  template?: String_613;
}
export interface Object_318 {
  url: String_614;
  name: String_615;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_618 = string;
/**
 * Human-readable name of the agent
 */
export type String_619 = string;
/**
 * URL to the agent's avatar image
 */
export type String_620 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_621 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_622 = string;
export type String_623 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_72 = String_623[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_41 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_1 = Number_42 | Null_57;
export type Number_42 = number;
export type Null_57 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_624 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_625 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_43 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_28 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_29 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_626 = string;
/**
 * URL for the view
 */
export type String_627 = string;
/**
 * Name of the view
 */
export type String_628 = string;
/**
 * Views where the agent can be used
 */
export type Array_73 = Object_322[];
/**
 * Visibility of the agent
 */
export type String_629 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_630 = string;
export type Null_58 = null;
export type Number_44 = number;
export type Null_59 = null;

export interface AGENTS_CREATEOutput {
  id: String_618;
  name: String_619;
  avatar: String_620;
  instructions: String_621;
  description?: String_622;
  tools_set: Object_319;
  max_steps?: Number_41;
  max_tokens?: NumberNull_1;
  model?: String_624;
  memory?: Object_320;
  views: Array_73;
  visibility: String_629;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_630
      )
    | Null_58;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_44
      )
    | Null_59;
}
/**
 * Tools available to the agent
 */
export interface Object_319 {
  [k: string]: Array_72;
}
/**
 * Memory to use for the agent
 */
export interface Object_320 {
  discriminator?: String_625;
  last_messages?: Number_43;
  semantic_recall?: Boolean_28;
  working_memory?: Object_321;
}
/**
 * Working memory to use for the agent
 */
export interface Object_321 {
  enabled?: Boolean_29;
  template?: String_626;
}
export interface Object_322 {
  url: String_627;
  name: String_628;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_631 = string;

export interface AGENTS_DELETEInput {
  id: String_631;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_30 = boolean;

export interface AGENTS_DELETEOutput {
  deleted: Boolean_30;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_632 = string;

export interface AGENTS_GETInput {
  id: String_632;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_633 = string;
/**
 * Human-readable name of the agent
 */
export type String_634 = string;
/**
 * URL to the agent's avatar image
 */
export type String_635 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_636 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_637 = string;
export type String_638 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_74 = String_638[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_45 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_2 = Number_46 | Null_60;
export type Number_46 = number;
export type Null_60 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_639 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_640 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_47 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_31 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_32 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_641 = string;
/**
 * URL for the view
 */
export type String_642 = string;
/**
 * Name of the view
 */
export type String_643 = string;
/**
 * Views where the agent can be used
 */
export type Array_75 = Object_326[];
/**
 * Visibility of the agent
 */
export type String_644 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_645 = string;
export type Null_61 = null;
export type Number_48 = number;
export type Null_62 = null;

export interface AGENTS_GETOutput {
  id: String_633;
  name: String_634;
  avatar: String_635;
  instructions: String_636;
  description?: String_637;
  tools_set: Object_323;
  max_steps?: Number_45;
  max_tokens?: NumberNull_2;
  model?: String_639;
  memory?: Object_324;
  views: Array_75;
  visibility: String_644;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_645
      )
    | Null_61;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_48
      )
    | Null_62;
}
/**
 * Tools available to the agent
 */
export interface Object_323 {
  [k: string]: Array_74;
}
/**
 * Memory to use for the agent
 */
export interface Object_324 {
  discriminator?: String_640;
  last_messages?: Number_47;
  semantic_recall?: Boolean_31;
  working_memory?: Object_325;
}
/**
 * Working memory to use for the agent
 */
export interface Object_325 {
  enabled?: Boolean_32;
  template?: String_641;
}
export interface Object_326 {
  url: String_642;
  name: String_643;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AGENTS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_646 = string;
/**
 * Human-readable name of the agent
 */
export type String_647 = string;
/**
 * URL to the agent's avatar image
 */
export type String_648 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_649 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_650 = string;
export type String_651 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_77 = String_651[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_49 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_3 = Number_50 | Null_63;
export type Number_50 = number;
export type Null_63 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_652 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_653 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_51 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_33 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_34 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_654 = string;
/**
 * URL for the view
 */
export type String_655 = string;
/**
 * Name of the view
 */
export type String_656 = string;
/**
 * Views where the agent can be used
 */
export type Array_78 = Object_331[];
/**
 * Visibility of the agent
 */
export type String_657 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_658 = string;
export type Null_64 = null;
export type Number_52 = number;
export type Null_65 = null;
export type StringNull_12 = String_659 | Null_66;
export type String_659 = string;
export type Null_66 = null;
export type StringNull_13 = String_660 | Null_67;
export type String_660 = string;
export type Null_67 = null;
export type Array_76 = Object_327[];

export interface AGENTS_LISTOutput {
  items: Array_76;
}
export interface Object_327 {
  id: String_646;
  name: String_647;
  avatar: String_648;
  instructions: String_649;
  description?: String_650;
  tools_set: Object_328;
  max_steps?: Number_49;
  max_tokens?: NumberNull_3;
  model?: String_652;
  memory?: Object_329;
  views: Array_78;
  visibility: String_657;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_658
      )
    | Null_64;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_52
      )
    | Null_65;
  lastAccess?: StringNull_12;
  lastAccessor?: StringNull_13;
}
/**
 * Tools available to the agent
 */
export interface Object_328 {
  [k: string]: Array_77;
}
/**
 * Memory to use for the agent
 */
export interface Object_329 {
  discriminator?: String_653;
  last_messages?: Number_51;
  semantic_recall?: Boolean_33;
  working_memory?: Object_330;
}
/**
 * Working memory to use for the agent
 */
export interface Object_330 {
  enabled?: Boolean_34;
  template?: String_654;
}
export interface Object_331 {
  url: String_655;
  name: String_656;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_661 = string;
/**
 * Unique identifier for the agent
 */
export type String_662 = string;
/**
 * Human-readable name of the agent
 */
export type String_663 = string;
/**
 * URL to the agent's avatar image
 */
export type String_664 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_665 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_666 = string;
export type String_667 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_79 = String_667[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_53 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_4 = Number_54 | Null_68;
export type Number_54 = number;
export type Null_68 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_668 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_669 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_55 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_35 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_36 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_670 = string;
/**
 * URL for the view
 */
export type String_671 = string;
/**
 * Name of the view
 */
export type String_672 = string;
/**
 * Views where the agent can be used
 */
export type Array_80 = Object_336[];
/**
 * Visibility of the agent
 */
export type String_673 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_674 = string;
export type Null_69 = null;
export type Number_56 = number;
export type Null_70 = null;

export interface AGENTS_UPDATEInput {
  id: String_661;
  agent: Object_332;
}
export interface Object_332 {
  id?: String_662;
  name?: String_663;
  avatar?: String_664;
  instructions?: String_665;
  description?: String_666;
  tools_set?: Object_333;
  max_steps?: Number_53;
  max_tokens?: NumberNull_4;
  model?: String_668;
  memory?: Object_334;
  views?: Array_80;
  visibility?: String_673;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_674
      )
    | Null_69;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_56
      )
    | Null_70;
}
/**
 * Tools available to the agent
 */
export interface Object_333 {
  [k: string]: Array_79;
}
/**
 * Memory to use for the agent
 */
export interface Object_334 {
  discriminator?: String_669;
  last_messages?: Number_55;
  semantic_recall?: Boolean_35;
  working_memory?: Object_335;
}
/**
 * Working memory to use for the agent
 */
export interface Object_335 {
  enabled?: Boolean_36;
  template?: String_670;
}
export interface Object_336 {
  url: String_671;
  name: String_672;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_675 = string;
/**
 * Human-readable name of the agent
 */
export type String_676 = string;
/**
 * URL to the agent's avatar image
 */
export type String_677 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_678 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_679 = string;
export type String_680 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_81 = String_680[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_57 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_5 = Number_58 | Null_71;
export type Number_58 = number;
export type Null_71 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_681 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_682 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_59 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_37 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_38 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_683 = string;
/**
 * URL for the view
 */
export type String_684 = string;
/**
 * Name of the view
 */
export type String_685 = string;
/**
 * Views where the agent can be used
 */
export type Array_82 = Object_340[];
/**
 * Visibility of the agent
 */
export type String_686 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_687 = string;
export type Null_72 = null;
export type Number_60 = number;
export type Null_73 = null;

export interface AGENTS_UPDATEOutput {
  id: String_675;
  name: String_676;
  avatar: String_677;
  instructions: String_678;
  description?: String_679;
  tools_set: Object_337;
  max_steps?: Number_57;
  max_tokens?: NumberNull_5;
  model?: String_681;
  memory?: Object_338;
  views: Array_82;
  visibility: String_686;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_687
      )
    | Null_72;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_60
      )
    | Null_73;
}
/**
 * Tools available to the agent
 */
export interface Object_337 {
  [k: string]: Array_81;
}
/**
 * Memory to use for the agent
 */
export interface Object_338 {
  discriminator?: String_682;
  last_messages?: Number_59;
  semantic_recall?: Boolean_37;
  working_memory?: Object_339;
}
/**
 * Working memory to use for the agent
 */
export interface Object_339 {
  enabled?: Boolean_38;
  template?: String_683;
}
export interface Object_340 {
  url: String_684;
  name: String_685;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_688 = string;
export type String_689 = "user" | "assistant" | "system";
export type String_690 = string;
export type String_691 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_692 = string;
/**
 * Media type of the attachment
 */
export type String_693 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_694 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_84 = Object_342[];
/**
 * Array of messages for the conversation
 */
export type Array_83 = Object_341[];
/**
 * Skip transaction creation
 */
export type Boolean_39 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_695 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_61 = number;
/**
 * Temperature for the generation
 */
export type Number_62 = number;
export type String_696 = string;
export type Array_85 = String_696[];

export interface AI_GENERATEInput_1 {
  messages: Array_83;
  skipTransaction?: Boolean_39;
  model?: String_695;
  maxTokens?: Number_61;
  temperature?: Number_62;
  tools?: Object_343;
}
export interface Object_341 {
  id?: String_688;
  role: String_689;
  content: String_690;
  createdAt?: String_691;
  experimental_attachments?: Array_84;
}
export interface Object_342 {
  name?: String_692;
  contentType?: String_693;
  url: String_694;
}
/**
 * Tools available for the generation
 */
export interface Object_343 {
  [k: string]: Array_85;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_697 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_63 = number;
/**
 * Number of tokens in the completion
 */
export type Number_64 = number;
/**
 * Total number of tokens used
 */
export type Number_65 = number;
/**
 * Transaction ID
 */
export type String_698 = string;
/**
 * Reason why generation finished
 */
export type String_699 = string;

export interface AI_GENERATEOutput_1 {
  text: String_697;
  usage: Object_344;
  finishReason?: String_699;
}
/**
 * Token usage information
 */
export interface Object_344 {
  promptTokens: Number_63;
  completionTokens: Number_64;
  totalTokens: Number_65;
  transactionId?: String_698;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_700 = string;
export type String_701 = "user" | "assistant" | "system";
export type String_702 = string;
export type String_703 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_704 = string;
/**
 * Media type of the attachment
 */
export type String_705 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_706 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_87 = Object_346[];
/**
 * Array of messages for the conversation
 */
export type Array_86 = Object_345[];
/**
 * Skip transaction creation
 */
export type Boolean_40 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_707 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_66 = number;
/**
 * Temperature for the generation
 */
export type Number_67 = number;
export type String_708 = string;
export type Array_88 = String_708[];

export interface AI_GENERATE_OBJECTInput_1 {
  messages: Array_86;
  schema: Object_347;
  skipTransaction?: Boolean_40;
  model?: String_707;
  maxTokens?: Number_66;
  temperature?: Number_67;
  tools?: Object_348;
}
export interface Object_345 {
  id?: String_700;
  role: String_701;
  content: String_702;
  createdAt?: String_703;
  experimental_attachments?: Array_87;
}
export interface Object_346 {
  name?: String_704;
  contentType?: String_705;
  url: String_706;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_347 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_348 {
  [k: string]: Array_88;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_68 = number;
/**
 * Number of tokens in the completion
 */
export type Number_69 = number;
/**
 * Total number of tokens used
 */
export type Number_70 = number;
/**
 * Transaction ID
 */
export type String_709 = string;
/**
 * Reason why generation finished
 */
export type String_710 = string;

export interface AI_GENERATE_OBJECTOutput_1 {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_349;
  finishReason?: String_710;
}
/**
 * Token usage information
 */
export interface Object_349 {
  promptTokens: Number_68;
  completionTokens: Number_69;
  totalTokens: Number_70;
  transactionId?: String_709;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The API key to check access for, if not provided, the current key from context will be used
 */
export type String_711 = string;
export type String_712 = string;
/**
 * All tools that wants to check access
 */
export type Array_89 = String_712[];

export interface API_KEYS_CHECK_ACCESSInput {
  key?: String_711;
  tools: Array_89;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_41 = boolean;

export interface API_KEYS_CHECK_ACCESSOutput {
  access: Object_350;
}
export interface Object_350 {
  [k: string]: Boolean_41;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the API key
 */
export type String_713 = string;
export type String_714 = "allow" | "deny";
export type String_715 = string;
export type String_716 = "is_integration";
export type String_717 = string;
/**
 * Policies for the API key
 */
export type Array_90 = Object_351[];
export type String_718 = string;
export type String_719 = string;

export interface API_KEYS_CREATEInput {
  name: String_713;
  policies?: Array_90;
  claims?: Object_353;
}
export interface Object_351 {
  effect: String_714;
  resource: String_715;
  matchCondition?: Object_352;
}
export interface Object_352 {
  resource: String_716;
  integrationId: String_717;
}
/**
 * App Claims to be added to the API key
 */
export interface Object_353 {
  appName: String_718;
  integrationId: String_719;
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_720 = string;
/**
 * The name of the API key
 */
export type String_721 = string;
/**
 * The workspace ID
 */
export type StringNull_14 = String_722 | Null_74;
export type String_722 = string;
export type Null_74 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_42 = boolean;
export type String_723 = "allow" | "deny";
export type String_724 = string;
export type String_725 = "is_integration";
export type String_726 = string;
/**
 * Access policies for the API key
 */
export type Array_91 = Object_354[];
/**
 * Creation timestamp
 */
export type String_727 = string;
/**
 * Last update timestamp
 */
export type String_728 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_15 = String_729 | Null_75;
export type String_729 = string;
export type Null_75 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_730 = string;

export interface API_KEYS_CREATEOutput {
  id: String_720;
  name: String_721;
  workspace: StringNull_14;
  enabled: Boolean_42;
  policies: Array_91;
  createdAt: String_727;
  updatedAt: String_728;
  deletedAt: StringNull_15;
  value: String_730;
}
export interface Object_354 {
  effect: String_723;
  resource: String_724;
  matchCondition?: Object_355;
}
export interface Object_355 {
  resource: String_725;
  integrationId: String_726;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to delete
 */
export type String_731 = string;

export interface API_KEYS_DELETEInput {
  id: String_731;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the deleted API key
 */
export type String_732 = string;
/**
 * Confirmation that the key was deleted
 */
export type Boolean_43 = boolean;

export interface API_KEYS_DELETEOutput {
  id: String_732;
  deleted: Boolean_43;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to disable
 */
export type String_733 = string;

export interface API_KEYS_DISABLEInput {
  id: String_733;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_734 = string;
/**
 * The name of the API key
 */
export type String_735 = string;
/**
 * The workspace ID
 */
export type StringNull_16 = String_736 | Null_76;
export type String_736 = string;
export type Null_76 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_44 = boolean;
export type String_737 = "allow" | "deny";
export type String_738 = string;
export type String_739 = "is_integration";
export type String_740 = string;
/**
 * Access policies for the API key
 */
export type Array_92 = Object_356[];
/**
 * Creation timestamp
 */
export type String_741 = string;
/**
 * Last update timestamp
 */
export type String_742 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_17 = String_743 | Null_77;
export type String_743 = string;
export type Null_77 = null;

export interface API_KEYS_DISABLEOutput {
  id: String_734;
  name: String_735;
  workspace: StringNull_16;
  enabled: Boolean_44;
  policies: Array_92;
  createdAt: String_741;
  updatedAt: String_742;
  deletedAt: StringNull_17;
}
export interface Object_356 {
  effect: String_737;
  resource: String_738;
  matchCondition?: Object_357;
}
export interface Object_357 {
  resource: String_739;
  integrationId: String_740;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to enable
 */
export type String_744 = string;

export interface API_KEYS_ENABLEInput {
  id: String_744;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_745 = string;
/**
 * The name of the API key
 */
export type String_746 = string;
/**
 * The workspace ID
 */
export type StringNull_18 = String_747 | Null_78;
export type String_747 = string;
export type Null_78 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_45 = boolean;
export type String_748 = "allow" | "deny";
export type String_749 = string;
export type String_750 = "is_integration";
export type String_751 = string;
/**
 * Access policies for the API key
 */
export type Array_93 = Object_358[];
/**
 * Creation timestamp
 */
export type String_752 = string;
/**
 * Last update timestamp
 */
export type String_753 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_19 = String_754 | Null_79;
export type String_754 = string;
export type Null_79 = null;

export interface API_KEYS_ENABLEOutput {
  id: String_745;
  name: String_746;
  workspace: StringNull_18;
  enabled: Boolean_45;
  policies: Array_93;
  createdAt: String_752;
  updatedAt: String_753;
  deletedAt: StringNull_19;
}
export interface Object_358 {
  effect: String_748;
  resource: String_749;
  matchCondition?: Object_359;
}
export interface Object_359 {
  resource: String_750;
  integrationId: String_751;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_755 = string;

export interface API_KEYS_GETInput {
  id: String_755;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_756 = string;
/**
 * The name of the API key
 */
export type String_757 = string;
/**
 * The workspace ID
 */
export type StringNull_20 = String_758 | Null_80;
export type String_758 = string;
export type Null_80 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_46 = boolean;
export type String_759 = "allow" | "deny";
export type String_760 = string;
export type String_761 = "is_integration";
export type String_762 = string;
/**
 * Access policies for the API key
 */
export type Array_94 = Object_360[];
/**
 * Creation timestamp
 */
export type String_763 = string;
/**
 * Last update timestamp
 */
export type String_764 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_21 = String_765 | Null_81;
export type String_765 = string;
export type Null_81 = null;

export interface API_KEYS_GETOutput {
  id: String_756;
  name: String_757;
  workspace: StringNull_20;
  enabled: Boolean_46;
  policies: Array_94;
  createdAt: String_763;
  updatedAt: String_764;
  deletedAt: StringNull_21;
}
export interface Object_360 {
  effect: String_759;
  resource: String_760;
  matchCondition?: Object_361;
}
export interface Object_361 {
  resource: String_761;
  integrationId: String_762;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_766 = string;
/**
 * The name of the API key
 */
export type String_767 = string;
/**
 * The workspace ID
 */
export type StringNull_22 = String_768 | Null_82;
export type String_768 = string;
export type Null_82 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_47 = boolean;
export type String_769 = "allow" | "deny";
export type String_770 = string;
export type String_771 = "is_integration";
export type String_772 = string;
/**
 * Access policies for the API key
 */
export type Array_96 = Object_363[];
/**
 * Creation timestamp
 */
export type String_773 = string;
/**
 * Last update timestamp
 */
export type String_774 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_23 = String_775 | Null_83;
export type String_775 = string;
export type Null_83 = null;
/**
 * List of API keys
 */
export type Array_95 = Object_362[];

export interface API_KEYS_LISTOutput {
  apiKeys: Array_95;
}
export interface Object_362 {
  id: String_766;
  name: String_767;
  workspace: StringNull_22;
  enabled: Boolean_47;
  policies: Array_96;
  createdAt: String_773;
  updatedAt: String_774;
  deletedAt: StringNull_23;
}
export interface Object_363 {
  effect: String_769;
  resource: String_770;
  matchCondition?: Object_364;
}
export interface Object_364 {
  resource: String_771;
  integrationId: String_772;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to reissue
 */
export type String_776 = string;
export type String_777 = "allow" | "deny";
export type String_778 = string;
export type String_779 = "is_integration";
export type String_780 = string;
/**
 * Policies of the API key
 */
export type Array_97 = Object_365[];

export interface API_KEYS_REISSUEInput {
  id: String_776;
  /**
   * New claims to be added to the API key
   */
  claims?: {
    [k: string]: unknown;
  };
  policies?: Array_97;
}
export interface Object_365 {
  effect: String_777;
  resource: String_778;
  matchCondition?: Object_366;
}
export interface Object_366 {
  resource: String_779;
  integrationId: String_780;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_781 = string;
/**
 * The name of the API key
 */
export type String_782 = string;
/**
 * The workspace ID
 */
export type StringNull_24 = String_783 | Null_84;
export type String_783 = string;
export type Null_84 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_48 = boolean;
export type String_784 = "allow" | "deny";
export type String_785 = string;
export type String_786 = "is_integration";
export type String_787 = string;
/**
 * Access policies for the API key
 */
export type Array_98 = Object_367[];
/**
 * Creation timestamp
 */
export type String_788 = string;
/**
 * Last update timestamp
 */
export type String_789 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_25 = String_790 | Null_85;
export type String_790 = string;
export type Null_85 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_791 = string;

export interface API_KEYS_REISSUEOutput {
  id: String_781;
  name: String_782;
  workspace: StringNull_24;
  enabled: Boolean_48;
  policies: Array_98;
  createdAt: String_788;
  updatedAt: String_789;
  deletedAt: StringNull_25;
  value: String_791;
}
export interface Object_367 {
  effect: String_784;
  resource: String_785;
  matchCondition?: Object_368;
}
export interface Object_368 {
  resource: String_786;
  integrationId: String_787;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_792 = string;
/**
 * New name for the API key
 */
export type String_793 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_49 = boolean;
export type String_794 = "allow" | "deny";
export type String_795 = string;
export type String_796 = "is_integration";
export type String_797 = string;
/**
 * Policies for the API key
 */
export type Array_99 = Object_369[];

export interface API_KEYS_UPDATEInput {
  id: String_792;
  name?: String_793;
  enabled?: Boolean_49;
  policies?: Array_99;
}
export interface Object_369 {
  effect: String_794;
  resource: String_795;
  matchCondition?: Object_370;
}
export interface Object_370 {
  resource: String_796;
  integrationId: String_797;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_798 = string;
/**
 * The name of the API key
 */
export type String_799 = string;
/**
 * The workspace ID
 */
export type StringNull_26 = String_800 | Null_86;
export type String_800 = string;
export type Null_86 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_50 = boolean;
export type String_801 = "allow" | "deny";
export type String_802 = string;
export type String_803 = "is_integration";
export type String_804 = string;
/**
 * Access policies for the API key
 */
export type Array_100 = Object_371[];
/**
 * Creation timestamp
 */
export type String_805 = string;
/**
 * Last update timestamp
 */
export type String_806 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_27 = String_807 | Null_87;
export type String_807 = string;
export type Null_87 = null;

export interface API_KEYS_UPDATEOutput {
  id: String_798;
  name: String_799;
  workspace: StringNull_26;
  enabled: Boolean_50;
  policies: Array_100;
  createdAt: String_805;
  updatedAt: String_806;
  deletedAt: StringNull_27;
}
export interface Object_371 {
  effect: String_801;
  resource: String_802;
  matchCondition?: Object_372;
}
export interface Object_372 {
  resource: String_803;
  integrationId: String_804;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to validate
 */
export type String_808 = string;

export interface API_KEYS_VALIDATEInput {
  id: String_808;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_809 = string;
/**
 * The name of the API key
 */
export type String_810 = string;
/**
 * The workspace ID
 */
export type StringNull_28 = String_811 | Null_88;
export type String_811 = string;
export type Null_88 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_51 = boolean;
export type String_812 = "allow" | "deny";
export type String_813 = string;
export type String_814 = "is_integration";
export type String_815 = string;
/**
 * Access policies for the API key
 */
export type Array_101 = Object_373[];
/**
 * Creation timestamp
 */
export type String_816 = string;
/**
 * Last update timestamp
 */
export type String_817 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_29 = String_818 | Null_89;
export type String_818 = string;
export type Null_89 = null;
/**
 * Whether the API key is valid
 */
export type Boolean_52 = boolean;

export interface API_KEYS_VALIDATEOutput {
  id: String_809;
  name: String_810;
  workspace: StringNull_28;
  enabled: Boolean_51;
  policies: Array_101;
  createdAt: String_816;
  updatedAt: String_817;
  deletedAt: StringNull_29;
  valid: Boolean_52;
}
export interface Object_373 {
  effect: String_812;
  resource: String_813;
  matchCondition?: Object_374;
}
export interface Object_374 {
  resource: String_814;
  integrationId: String_815;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The channel discriminator
 */
export type String_819 = string;
/**
 * The ID of the integration to use
 */
export type String_820 = string;
/**
 * The ID of the agent to join the channel.
 */
export type String_821 = string;
/**
 * The name of the channel
 */
export type String_822 = string;

export interface CHANNELS_CREATEInput {
  discriminator: String_819;
  integrationId: String_820;
  agentId?: String_821;
  name?: String_822;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_823 = string;

export interface CHANNELS_DELETEInput {
  id: String_823;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_824 = string;

export interface CHANNELS_GETInput {
  id: String_824;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to join, use only UUIDs.
 */
export type String_825 = string;
/**
 * The ID of the agent to join the channel to, use only UUIDs.
 */
export type String_826 = string;

export interface CHANNELS_JOINInput {
  id: String_825;
  agentId: String_826;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_JOINOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to unlink, use only UUIDs.
 */
export type String_827 = string;
/**
 * The ID of the agent to unlink, use only UUIDs.
 */
export type String_828 = string;

export interface CHANNELS_LEAVEInput {
  id: String_827;
  agentId: String_828;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LEAVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_829 = string;
export type String_830 = string;
export type String_831 = string;
/**
 * The amount (in microdollars) of money to commit. Specified in USD dollars.
 */
export type StringNumber = String_832 | Number_71;
export type String_832 = string;
export type Number_71 = number;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTInput {
  identifier?: String_829;
  contractId: String_830;
  vendorId: String_831;
  amount: StringNumber;
  metadata?: Object_375;
}
export interface Object_375 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_833 = string;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTOutput {
  id: String_833;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_834 = string;
export type String_835 = string;
export type StringNumber_1 = String_836 | Number_72;
export type String_836 = string;
export type Number_72 = number;
export type String_837 = string;
export type String_838 = string;
export type Array_103 = String_838[];
export type Array_102 = Object_377[];
export type String_839 = string;
export type String_840 = string;

export interface CONTRACT_REGISTERInput {
  contract: Object_376;
  author: Object_378;
}
export interface Object_376 {
  body?: String_834;
  clauses?: Array_102;
}
export interface Object_377 {
  id: String_835;
  price: StringNumber_1;
  description?: String_837;
  usedByTools?: Array_103;
}
export interface Object_378 {
  scope: String_839;
  name: String_840;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_841 = string;

export interface CONTRACT_REGISTEROutput {
  appName: String_841;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to create
 */
export type String_842 = string;
/**
 * The source branch to branch from (optional - creates empty branch if not provided)
 */
export type String_843 = string;

export interface CREATE_BRANCHInput {
  branchName: String_842;
  sourceBranch?: String_843;
  metadata?: Object_379;
}
/**
 * Optional metadata for the branch
 */
export interface Object_379 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_844 = string;
export type String_845 = string;
export type Number_73 = number;

export interface CREATE_BRANCHOutput {
  branchName: String_844;
  sourceBranch?: String_845;
  createdAt: Number_73;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_74 = number;
export type String_846 = string;
export type String_847 = string;

export interface CREATE_CHECKOUT_SESSIONInput {
  amountUSDCents: Number_74;
  successUrl: String_846;
  cancelUrl: String_847;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_848 = string;

export interface CREATE_CHECKOUT_SESSIONOutput {
  url: String_848;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount of money to add to the voucher. Specified in USD dollars.
 */
export type Number_75 = number;

export interface CREATE_VOUCHERInput {
  amount: Number_75;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_849 = string;

export interface CREATE_VOUCHEROutput {
  id: String_849;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_53 = boolean;

export interface DATABASES_GET_METAInput {
  _legacy?: Boolean_53;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_76 = number;

export interface DATABASES_GET_METAOutput {
  bytes?: Number_76;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, only shows what would be migrated without executing
 */
export type Boolean_54 = boolean;
export type String_850 = string;
/**
 * Specific tables to migrate. If not provided, all tables will be migrated
 */
export type Array_104 = String_850[];
/**
 * Number of rows to migrate per batch
 */
export type Number_77 = number;

export interface DATABASES_MIGRATEInput {
  dryRun?: Boolean_54;
  tables?: Array_104;
  batchSize?: Number_77;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_55 = boolean;
export type String_851 = string;
export type Number_78 = number;
export type String_852 = "success" | "error" | "skipped";
export type String_853 = string;
export type Array_105 = Object_380[];
export type Number_79 = number;
export type Number_80 = number;

export interface DATABASES_MIGRATEOutput {
  success: Boolean_55;
  migratedTables: Array_105;
  totalRowsMigrated: Number_79;
  executionTimeMs: Number_80;
}
export interface Object_380 {
  tableName: String_851;
  rowCount: Number_78;
  status: String_852;
  error?: String_853;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The date to recover to
 */
export type String_854 = string;
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_56 = boolean;

export interface DATABASES_RECOVERYInput {
  date: String_854;
  _legacy?: Boolean_56;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_57 = boolean;

export interface DATABASES_RECOVERYOutput {
  success: Boolean_57;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The SQL query to run
 */
export type String_855 = string;
/**
 * The parameters to pass to the SQL query
 */
export type Array_106 = unknown[];
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_58 = boolean;

export interface DATABASES_RUN_SQLInput {
  sql: String_855;
  params?: Array_106;
  _legacy?: Boolean_58;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_59 = boolean;
export type Number_81 = number;
export type Number_82 = number;
export type Number_83 = number;
export type Number_84 = number;
export type Number_85 = number;
export type Boolean_60 = boolean;
export type String_856 = "WNAM" | "ENAM" | "WEUR" | "EEUR" | "APAC" | "OC";
export type Number_86 = number;
export type Number_87 = number;
export type Array_108 = unknown[];
export type Boolean_61 = boolean;
export type Array_107 = Object_381[];

export interface DATABASES_RUN_SQLOutput {
  result: Array_107;
}
export interface Object_381 {
  meta?: Object_382;
  results?: Array_108;
  success?: Boolean_61;
}
export interface Object_382 {
  changed_db?: Boolean_59;
  changes?: Number_81;
  duration?: Number_82;
  last_row_id?: Number_83;
  rows_read?: Number_84;
  rows_written?: Number_85;
  served_by_primary?: Boolean_60;
  served_by_region?: String_856;
  size_after?: Number_86;
  timings?: Object_383;
}
export interface Object_383 {
  sql_duration_ms?: Number_87;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_2 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_857 = string;
export type String_858 = string;
export type String_859 = string;
export type String_860 = string;
export type String_861 = string;
export type String_862 = string;
export type String_863 = string;
export type String_864 = string;
export type String_865 = string;
export type Array_110 = String_865[];
export type String_866 = string;
export type String_867 = "none" | "open" | "autoPin";
export type Array_109 = Object_384[];

export interface DECO_CHAT_VIEWS_LISTOutput_2 {
  views: Array_109;
}
export interface Object_384 {
  id?: String_857;
  name?: String_858;
  title: String_859;
  description?: String_860;
  icon: String_861;
  url?: String_862;
  mimeTypePattern?: String_863;
  resourceName?: String_864;
  tools?: Array_110;
  prompt?: String_866;
  installBehavior?: String_867;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_868 = string;

export interface DECO_GET_APP_SCHEMAInput_1 {
  appName: String_868;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_869 = string;
export type Array_111 = String_869[];

export interface DECO_GET_APP_SCHEMAOutput_1 {
  schema?: unknown;
  scopes?: Array_111;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_870 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_871 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_872 = string;

export interface DECO_INTEGRATION_INSTALLInput_1 {
  id: String_870;
  provider?: String_871;
  appId?: String_872;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_873 = string;

export interface DECO_INTEGRATION_INSTALLOutput_1 {
  installationId: String_873;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_874 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_875 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_876 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_877 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput_1 {
  appName: String_874;
  returnUrl: String_875;
  installId: String_876;
  provider?: String_877;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_878 = string;
/**
 * Whether to show contracts
 */
export type Boolean_62 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput_1 {
  query?: String_878;
  showContracts?: Boolean_62;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_879 = string;
export type String_880 = string;
export type String_881 = string;
export type String_882 = string;
export type String_883 = string;
export type Null_90 = null;
export type String_884 = string;
export type Null_91 = null;
export type String_885 = string;
export type Null_92 = null;
export type String_886 = "HTTP";
export type String_887 = string;
export type String_888 = string;
export type String_889 = "SSE";
export type String_890 = string;
export type String_891 = string;
export type String_892 = string;
export type String_893 = "Websocket";
export type String_894 = string;
export type String_895 = string;
export type String_896 = "Deco";
export type String_897 = string;
export type String_898 = string;
export type String_899 = "INNATE";
export type String_900 = string;
export type String_901 = string;
export type Null_93 = null;
/**
 * The name of the tool
 */
export type String_902 = string;
/**
 * The description of the tool
 */
export type String_903 = string;
export type Array_113 = (Object_393 & Object_395)[];
export type Null_94 = null;
export type String_904 = string;
export type String_905 = string;
/**
 * The Integrations that match the query
 */
export type Array_112 = (Object_385 & Object_397)[];

export interface DECO_INTEGRATIONS_SEARCHOutput_1 {
  integrations: Array_112;
}
export interface Object_385 {
  id: String_879;
  name: String_880;
  description?: String_881;
  icon?: String_882;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_883
      )
    | Null_90;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_884
      )
    | Null_91;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_885
      )
    | Null_92;
  connection: Object_386 | Object_387 | Object_389 | Object_390 | Object_391;
  metadata?: Object_392 | Null_93;
  tools?: Array_113 | Null_94;
}
export interface Object_386 {
  type: String_886;
  url: String_887;
  token?: String_888;
}
export interface Object_387 {
  type: String_889;
  url: String_890;
  token?: String_891;
  headers?: Object_388;
}
export interface Object_388 {
  [k: string]: String_892;
}
export interface Object_389 {
  type: String_893;
  url: String_894;
  token?: String_895;
}
export interface Object_390 {
  type: String_896;
  tenant: String_897;
  token?: String_898;
}
export interface Object_391 {
  type: String_899;
  name: String_900;
  workspace?: String_901;
}
export interface Object_392 {
  [k: string]: unknown;
}
export interface Object_393 {
  name: String_902;
  inputSchema: Object_394;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_394 {
  [k: string]: unknown;
}
export interface Object_395 {
  description?: String_903;
  outputSchema?: Object_396;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_396 {
  [k: string]: unknown;
}
export interface Object_397 {
  provider: String_904;
  friendlyName?: String_905;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name/title of the document
 */
export type String_906 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_907 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_908 = string;
export type String_909 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_114 = String_909[];

export interface DECO_RESOURCE_DOCUMENT_CREATEInput {
  data: Object_398;
}
/**
 * Resource data to create
 */
export interface Object_398 {
  name: String_906;
  description: String_907;
  content: String_908;
  tags?: Array_114;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_910 = string;
/**
 * The name/title of the document
 */
export type String_911 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_912 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_913 = string;
export type String_914 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_115 = String_914[];
/**
 * Creation timestamp
 */
export type String_915 = string;
/**
 * Last update timestamp
 */
export type String_916 = string;
/**
 * User who created the resource
 */
export type String_917 = string;

export interface DECO_RESOURCE_DOCUMENT_CREATEOutput {
  uri: String_910;
  data: Object_399;
  created_at?: String_915;
  updated_at?: String_916;
  created_by?: String_917;
}
/**
 * Created resource data
 */
export interface Object_399 {
  name: String_911;
  description: String_912;
  content: String_913;
  tags?: Array_115;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_918 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEInput {
  uri: String_918;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_63 = boolean;
/**
 * URI of the deleted resource
 */
export type String_919 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEOutput {
  success: Boolean_63;
  uri: String_919;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_920 = string;

export interface DECO_RESOURCE_DOCUMENT_READInput {
  uri: String_920;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_921 = string;
/**
 * The name/title of the document
 */
export type String_922 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_923 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_924 = string;
export type String_925 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_116 = String_925[];
/**
 * Creation timestamp
 */
export type String_926 = string;
/**
 * Last update timestamp
 */
export type String_927 = string;
/**
 * User who created the resource
 */
export type String_928 = string;
/**
 * User who last updated the resource
 */
export type String_929 = string;

export interface DECO_RESOURCE_DOCUMENT_READOutput {
  uri: String_921;
  data: Object_400;
  created_at?: String_926;
  updated_at?: String_927;
  created_by?: String_928;
  updated_by?: String_929;
}
/**
 * Resource data
 */
export interface Object_400 {
  name: String_922;
  description: String_923;
  content: String_924;
  tags?: Array_116;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_930 = string;
/**
 * Page number (1-based)
 */
export type Integer_55 = number;
/**
 * Number of items per page
 */
export type Integer_56 = number;
/**
 * Field to sort by
 */
export type String_931 = string;
/**
 * Sort order
 */
export type String_932 = "asc" | "desc";

export interface DECO_RESOURCE_DOCUMENT_SEARCHInput {
  term?: String_930;
  page?: Integer_55;
  pageSize?: Integer_56;
  filters?: Object_401;
  sortBy?: String_931;
  sortOrder?: String_932;
}
/**
 * Additional filters to apply
 */
export interface Object_401 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_933 = string;
export type String_934 = string;
/**
 * Description of the resource
 */
export type String_935 = string;
/**
 * URL to the resource icon
 */
export type String_936 = string;
/**
 * The name/title of the document
 */
export type String_937 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_938 = string;
/**
 * Creation timestamp
 */
export type String_939 = string;
/**
 * Last update timestamp
 */
export type String_940 = string;
/**
 * User who created the resource
 */
export type String_941 = string;
/**
 * User who last updated the resource
 */
export type String_942 = string;
/**
 * Array of matching resources
 */
export type Array_117 = Object_402[];
/**
 * Total number of matching resources
 */
export type Integer_57 = number;
/**
 * Current page number
 */
export type Integer_58 = number;
/**
 * Number of items per page
 */
export type Integer_59 = number;
/**
 * Total number of pages
 */
export type Integer_60 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_64 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_65 = boolean;

export interface DECO_RESOURCE_DOCUMENT_SEARCHOutput {
  items: Array_117;
  totalCount: Integer_57;
  page: Integer_58;
  pageSize: Integer_59;
  totalPages: Integer_60;
  hasNextPage: Boolean_64;
  hasPreviousPage: Boolean_65;
}
export interface Object_402 {
  uri: String_933;
  /**
   * Resource data with required name
   */
  data: Object_403 & Object_404;
  created_at?: String_939;
  updated_at?: String_940;
  created_by?: String_941;
  updated_by?: String_942;
}
export interface Object_403 {
  name: String_934;
  description?: String_935;
  icon?: String_936;
}
export interface Object_404 {
  name: String_937;
  description: String_938;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_943 = string;
/**
 * The name/title of the document
 */
export type String_944 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_945 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_946 = string;
export type String_947 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_118 = String_947[];

export interface DECO_RESOURCE_DOCUMENT_UPDATEInput {
  uri: String_943;
  data: Object_405;
}
/**
 * Updated resource data
 */
export interface Object_405 {
  name: String_944;
  description: String_945;
  content: String_946;
  tags?: Array_118;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_948 = string;
/**
 * The name/title of the document
 */
export type String_949 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_950 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_951 = string;
export type String_952 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_119 = String_952[];
/**
 * Original creation timestamp
 */
export type String_953 = string;
/**
 * Last update timestamp
 */
export type String_954 = string;
/**
 * User who originally created the resource
 */
export type String_955 = string;
/**
 * User who last updated the resource
 */
export type String_956 = string;

export interface DECO_RESOURCE_DOCUMENT_UPDATEOutput {
  uri: String_948;
  data: Object_406;
  created_at?: String_953;
  updated_at?: String_954;
  created_by?: String_955;
  updated_by?: String_956;
}
/**
 * Updated resource data
 */
export interface Object_406 {
  name: String_949;
  description: String_950;
  content: String_951;
  tags?: Array_119;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_957 = string;
/**
 * The description of the tool
 */
export type String_958 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_959 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_960 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_120 = Object_410[];

export interface DECO_RESOURCE_TOOL_CREATEInput_1 {
  data: Object_407;
}
/**
 * Resource data to create
 */
export interface Object_407 {
  name: String_957;
  description: String_958;
  inputSchema: Object_408;
  outputSchema: Object_409;
  execute: String_959;
  dependencies?: Array_120;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_408 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_409 {
  [k: string]: unknown;
}
export interface Object_410 {
  integrationId: String_960;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_961 = string;
/**
 * The name of the tool
 */
export type String_962 = string;
/**
 * The description of the tool
 */
export type String_963 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_964 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_965 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_121 = Object_414[];
/**
 * Creation timestamp
 */
export type String_966 = string;
/**
 * Last update timestamp
 */
export type String_967 = string;
/**
 * User who created the resource
 */
export type String_968 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput_1 {
  uri: String_961;
  data: Object_411;
  created_at?: String_966;
  updated_at?: String_967;
  created_by?: String_968;
}
/**
 * Created resource data
 */
export interface Object_411 {
  name: String_962;
  description: String_963;
  inputSchema: Object_412;
  outputSchema: Object_413;
  execute: String_964;
  dependencies?: Array_121;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_412 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_413 {
  [k: string]: unknown;
}
export interface Object_414 {
  integrationId: String_965;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_969 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput_1 {
  uri: String_969;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_66 = boolean;
/**
 * URI of the deleted resource
 */
export type String_970 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput_1 {
  success: Boolean_66;
  uri: String_970;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_971 = string;

export interface DECO_RESOURCE_TOOL_READInput_1 {
  uri: String_971;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_972 = string;
/**
 * The name of the tool
 */
export type String_973 = string;
/**
 * The description of the tool
 */
export type String_974 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_975 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_976 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_122 = Object_418[];
/**
 * Creation timestamp
 */
export type String_977 = string;
/**
 * Last update timestamp
 */
export type String_978 = string;
/**
 * User who created the resource
 */
export type String_979 = string;
/**
 * User who last updated the resource
 */
export type String_980 = string;

export interface DECO_RESOURCE_TOOL_READOutput_1 {
  uri: String_972;
  data: Object_415;
  created_at?: String_977;
  updated_at?: String_978;
  created_by?: String_979;
  updated_by?: String_980;
}
/**
 * Resource data
 */
export interface Object_415 {
  name: String_973;
  description: String_974;
  inputSchema: Object_416;
  outputSchema: Object_417;
  execute: String_975;
  dependencies?: Array_122;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_416 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_417 {
  [k: string]: unknown;
}
export interface Object_418 {
  integrationId: String_976;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_981 = string;
/**
 * Page number (1-based)
 */
export type Integer_61 = number;
/**
 * Number of items per page
 */
export type Integer_62 = number;
/**
 * Field to sort by
 */
export type String_982 = string;
/**
 * Sort order
 */
export type String_983 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput_1 {
  term?: String_981;
  page?: Integer_61;
  pageSize?: Integer_62;
  filters?: Object_419;
  sortBy?: String_982;
  sortOrder?: String_983;
}
/**
 * Additional filters to apply
 */
export interface Object_419 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_984 = string;
export type String_985 = string;
/**
 * Description of the resource
 */
export type String_986 = string;
/**
 * URL to the resource icon
 */
export type String_987 = string;
/**
 * The name of the tool
 */
export type String_988 = string;
/**
 * The description of the tool
 */
export type String_989 = string;
/**
 * Creation timestamp
 */
export type String_990 = string;
/**
 * Last update timestamp
 */
export type String_991 = string;
/**
 * User who created the resource
 */
export type String_992 = string;
/**
 * User who last updated the resource
 */
export type String_993 = string;
/**
 * Array of matching resources
 */
export type Array_123 = Object_420[];
/**
 * Total number of matching resources
 */
export type Integer_63 = number;
/**
 * Current page number
 */
export type Integer_64 = number;
/**
 * Number of items per page
 */
export type Integer_65 = number;
/**
 * Total number of pages
 */
export type Integer_66 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_67 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_68 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput_1 {
  items: Array_123;
  totalCount: Integer_63;
  page: Integer_64;
  pageSize: Integer_65;
  totalPages: Integer_66;
  hasNextPage: Boolean_67;
  hasPreviousPage: Boolean_68;
}
export interface Object_420 {
  uri: String_984;
  /**
   * Resource data with required name
   */
  data: Object_421 & Object_422;
  created_at?: String_990;
  updated_at?: String_991;
  created_by?: String_992;
  updated_by?: String_993;
}
export interface Object_421 {
  name: String_985;
  description?: String_986;
  icon?: String_987;
}
export interface Object_422 {
  name: String_988;
  description: String_989;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_994 = string;
/**
 * The name of the tool
 */
export type String_995 = string;
/**
 * The description of the tool
 */
export type String_996 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_997 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_998 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_124 = Object_426[];

export interface DECO_RESOURCE_TOOL_UPDATEInput_1 {
  uri: String_994;
  data: Object_423;
}
/**
 * Updated resource data
 */
export interface Object_423 {
  name: String_995;
  description: String_996;
  inputSchema: Object_424;
  outputSchema: Object_425;
  execute: String_997;
  dependencies?: Array_124;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_424 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_425 {
  [k: string]: unknown;
}
export interface Object_426 {
  integrationId: String_998;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_999 = string;
/**
 * The name of the tool
 */
export type String_1000 = string;
/**
 * The description of the tool
 */
export type String_1001 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1002 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1003 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_125 = Object_430[];
/**
 * Original creation timestamp
 */
export type String_1004 = string;
/**
 * Last update timestamp
 */
export type String_1005 = string;
/**
 * User who originally created the resource
 */
export type String_1006 = string;
/**
 * User who last updated the resource
 */
export type String_1007 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput_1 {
  uri: String_999;
  data: Object_427;
  created_at?: String_1004;
  updated_at?: String_1005;
  created_by?: String_1006;
  updated_by?: String_1007;
}
/**
 * Updated resource data
 */
export interface Object_427 {
  name: String_1000;
  description: String_1001;
  inputSchema: Object_428;
  outputSchema: Object_429;
  execute: String_1002;
  dependencies?: Array_125;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_428 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_429 {
  [k: string]: unknown;
}
export interface Object_430 {
  integrationId: String_1003;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name/title of the view
 */
export type String_1008 = string;
/**
 * A brief description of the view's purpose
 */
export type String_1009 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_1010 = string;
export type String_1011 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_1012 = string;
export type String_1013 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_126 = String_1013[];

export interface DECO_RESOURCE_VIEW_CREATEInput {
  data: Object_431;
}
/**
 * Resource data to create
 */
export interface Object_431 {
  name: String_1008;
  description: String_1009;
  code?: String_1010;
  importmap?: Object_432;
  icon?: String_1012;
  tags?: Array_126;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_432 {
  [k: string]: String_1011;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_1014 = string;
/**
 * The name/title of the view
 */
export type String_1015 = string;
/**
 * A brief description of the view's purpose
 */
export type String_1016 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_1017 = string;
export type String_1018 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_1019 = string;
export type String_1020 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_127 = String_1020[];
/**
 * Creation timestamp
 */
export type String_1021 = string;
/**
 * Last update timestamp
 */
export type String_1022 = string;
/**
 * User who created the resource
 */
export type String_1023 = string;

export interface DECO_RESOURCE_VIEW_CREATEOutput {
  uri: String_1014;
  data: Object_433;
  created_at?: String_1021;
  updated_at?: String_1022;
  created_by?: String_1023;
}
/**
 * Created resource data
 */
export interface Object_433 {
  name: String_1015;
  description: String_1016;
  code?: String_1017;
  importmap?: Object_434;
  icon?: String_1019;
  tags?: Array_127;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_434 {
  [k: string]: String_1018;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_1024 = string;

export interface DECO_RESOURCE_VIEW_DELETEInput {
  uri: String_1024;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_69 = boolean;
/**
 * URI of the deleted resource
 */
export type String_1025 = string;

export interface DECO_RESOURCE_VIEW_DELETEOutput {
  success: Boolean_69;
  uri: String_1025;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1026 = string;

export interface DECO_RESOURCE_VIEW_READInput {
  uri: String_1026;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1027 = string;
/**
 * The name/title of the view
 */
export type String_1028 = string;
/**
 * A brief description of the view's purpose
 */
export type String_1029 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_1030 = string;
export type String_1031 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_1032 = string;
export type String_1033 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_128 = String_1033[];
/**
 * Creation timestamp
 */
export type String_1034 = string;
/**
 * Last update timestamp
 */
export type String_1035 = string;
/**
 * User who created the resource
 */
export type String_1036 = string;
/**
 * User who last updated the resource
 */
export type String_1037 = string;

export interface DECO_RESOURCE_VIEW_READOutput {
  uri: String_1027;
  data: Object_435;
  created_at?: String_1034;
  updated_at?: String_1035;
  created_by?: String_1036;
  updated_by?: String_1037;
}
/**
 * Resource data
 */
export interface Object_435 {
  name: String_1028;
  description: String_1029;
  code?: String_1030;
  importmap?: Object_436;
  icon?: String_1032;
  tags?: Array_128;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_436 {
  [k: string]: String_1031;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1038 = string;
/**
 * Page number (1-based)
 */
export type Integer_67 = number;
/**
 * Number of items per page
 */
export type Integer_68 = number;
/**
 * Field to sort by
 */
export type String_1039 = string;
/**
 * Sort order
 */
export type String_1040 = "asc" | "desc";

export interface DECO_RESOURCE_VIEW_SEARCHInput {
  term?: String_1038;
  page?: Integer_67;
  pageSize?: Integer_68;
  filters?: Object_437;
  sortBy?: String_1039;
  sortOrder?: String_1040;
}
/**
 * Additional filters to apply
 */
export interface Object_437 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1041 = string;
export type String_1042 = string;
/**
 * Description of the resource
 */
export type String_1043 = string;
/**
 * URL to the resource icon
 */
export type String_1044 = string;
/**
 * The name/title of the view
 */
export type String_1045 = string;
/**
 * A brief description of the view's purpose
 */
export type String_1046 = string;
/**
 * Creation timestamp
 */
export type String_1047 = string;
/**
 * Last update timestamp
 */
export type String_1048 = string;
/**
 * User who created the resource
 */
export type String_1049 = string;
/**
 * User who last updated the resource
 */
export type String_1050 = string;
/**
 * Array of matching resources
 */
export type Array_129 = Object_438[];
/**
 * Total number of matching resources
 */
export type Integer_69 = number;
/**
 * Current page number
 */
export type Integer_70 = number;
/**
 * Number of items per page
 */
export type Integer_71 = number;
/**
 * Total number of pages
 */
export type Integer_72 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_70 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_71 = boolean;

export interface DECO_RESOURCE_VIEW_SEARCHOutput {
  items: Array_129;
  totalCount: Integer_69;
  page: Integer_70;
  pageSize: Integer_71;
  totalPages: Integer_72;
  hasNextPage: Boolean_70;
  hasPreviousPage: Boolean_71;
}
export interface Object_438 {
  uri: String_1041;
  /**
   * Resource data with required name
   */
  data: Object_439 & Object_440;
  created_at?: String_1047;
  updated_at?: String_1048;
  created_by?: String_1049;
  updated_by?: String_1050;
}
export interface Object_439 {
  name: String_1042;
  description?: String_1043;
  icon?: String_1044;
}
export interface Object_440 {
  name: String_1045;
  description: String_1046;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_1051 = string;
/**
 * The name/title of the view
 */
export type String_1052 = string;
/**
 * A brief description of the view's purpose
 */
export type String_1053 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_1054 = string;
export type String_1055 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_1056 = string;
export type String_1057 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_130 = String_1057[];

export interface DECO_RESOURCE_VIEW_UPDATEInput {
  uri: String_1051;
  data: Object_441;
}
/**
 * Updated resource data
 */
export interface Object_441 {
  name: String_1052;
  description: String_1053;
  code?: String_1054;
  importmap?: Object_442;
  icon?: String_1056;
  tags?: Array_130;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_442 {
  [k: string]: String_1055;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_1058 = string;
/**
 * The name/title of the view
 */
export type String_1059 = string;
/**
 * A brief description of the view's purpose
 */
export type String_1060 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_1061 = string;
export type String_1062 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_1063 = string;
export type String_1064 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_131 = String_1064[];
/**
 * Original creation timestamp
 */
export type String_1065 = string;
/**
 * Last update timestamp
 */
export type String_1066 = string;
/**
 * User who originally created the resource
 */
export type String_1067 = string;
/**
 * User who last updated the resource
 */
export type String_1068 = string;

export interface DECO_RESOURCE_VIEW_UPDATEOutput {
  uri: String_1058;
  data: Object_443;
  created_at?: String_1065;
  updated_at?: String_1066;
  created_by?: String_1067;
  updated_by?: String_1068;
}
/**
 * Updated resource data
 */
export interface Object_443 {
  name: String_1059;
  description: String_1060;
  code?: String_1061;
  importmap?: Object_444;
  icon?: String_1063;
  tags?: Array_131;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_444 {
  [k: string]: String_1062;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_1069 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1070 = string;
/**
 * The type of step
 */
export type String_1071 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_1072 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1073 = string;
/**
 * A clear description of what this step does
 */
export type String_1074 = string;
/**
 * The prompt used to generate the step
 */
export type String_1075 = string;
/**
 * Status of the step execution
 */
export type String_1076 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1077 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1078 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_133 = Object_454[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_73 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_74 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1079 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_88 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1080 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1081 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_75 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_76 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1082 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_89 = number;
export type Null_95 = null;
/**
 * The name of the tool to call
 */
export type String_1083 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1084 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_132 = Object_448[];
/**
 * The authorization token for the workflow
 */
export type String_1085 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput_1 {
  data: Object_445;
}
/**
 * Resource data to create
 */
export interface Object_445 {
  name: String_1069;
  description: String_1070;
  inputSchema: Object_446;
  outputSchema: Object_447;
  steps: Array_132;
  authorization?: Object_460;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_446 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_447 {
  [k: string]: unknown;
}
export interface Object_448 {
  type?: String_1071;
  /**
   * The step definition based on the type
   */
  def?: Object_449 | Object_457;
  [k: string]: unknown;
}
export interface Object_449 {
  id?: String_1072;
  name?: String_1073;
  description?: String_1074;
  prompt?: String_1075;
  inputSchema?: Object_450;
  outputSchema?: Object_451;
  input?: Object_452;
  output?: Object_453;
  status?: String_1076;
  execute?: String_1077;
  dependencies?: Array_133;
  options?: Object_455;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_450 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_451 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_452 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_453 {
  [k: string]: unknown;
}
export interface Object_454 {
  integrationId: String_1078;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_455 {
  retries?: Object_456;
  timeout?: Number_88;
}
export interface Object_456 {
  limit?: Integer_73;
  delay?: Integer_74;
  backoff?: String_1079;
}
export interface Object_457 {
  name?: String_1080;
  description?: String_1081;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_458 | Null_95;
  tool_name?: String_1083;
  integration?: String_1084;
  [k: string]: unknown;
}
export interface Object_458 {
  retries?: Object_459;
  timeout?: Number_89;
}
export interface Object_459 {
  limit?: Integer_75;
  delay?: Integer_76;
  backoff?: String_1082;
}
export interface Object_460 {
  token: String_1085;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_1086 = string;
/**
 * The unique name of the workflow
 */
export type String_1087 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1088 = string;
/**
 * The type of step
 */
export type String_1089 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_1090 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1091 = string;
/**
 * A clear description of what this step does
 */
export type String_1092 = string;
/**
 * The prompt used to generate the step
 */
export type String_1093 = string;
/**
 * Status of the step execution
 */
export type String_1094 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1095 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1096 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_135 = Object_470[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_77 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_78 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1097 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_90 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1098 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1099 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_79 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_80 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1100 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_91 = number;
export type Null_96 = null;
/**
 * The name of the tool to call
 */
export type String_1101 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1102 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_134 = Object_464[];
/**
 * The authorization token for the workflow
 */
export type String_1103 = string;
/**
 * Creation timestamp
 */
export type String_1104 = string;
/**
 * Last update timestamp
 */
export type String_1105 = string;
/**
 * User who created the resource
 */
export type String_1106 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput_1 {
  uri: String_1086;
  data: Object_461;
  created_at?: String_1104;
  updated_at?: String_1105;
  created_by?: String_1106;
}
/**
 * Created resource data
 */
export interface Object_461 {
  name: String_1087;
  description: String_1088;
  inputSchema: Object_462;
  outputSchema: Object_463;
  steps: Array_134;
  authorization?: Object_476;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_462 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_463 {
  [k: string]: unknown;
}
export interface Object_464 {
  type?: String_1089;
  /**
   * The step definition based on the type
   */
  def?: Object_465 | Object_473;
  [k: string]: unknown;
}
export interface Object_465 {
  id?: String_1090;
  name?: String_1091;
  description?: String_1092;
  prompt?: String_1093;
  inputSchema?: Object_466;
  outputSchema?: Object_467;
  input?: Object_468;
  output?: Object_469;
  status?: String_1094;
  execute?: String_1095;
  dependencies?: Array_135;
  options?: Object_471;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_466 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_467 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_468 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_469 {
  [k: string]: unknown;
}
export interface Object_470 {
  integrationId: String_1096;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_471 {
  retries?: Object_472;
  timeout?: Number_90;
}
export interface Object_472 {
  limit?: Integer_77;
  delay?: Integer_78;
  backoff?: String_1097;
}
export interface Object_473 {
  name?: String_1098;
  description?: String_1099;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_474 | Null_96;
  tool_name?: String_1101;
  integration?: String_1102;
  [k: string]: unknown;
}
export interface Object_474 {
  retries?: Object_475;
  timeout?: Number_91;
}
export interface Object_475 {
  limit?: Integer_79;
  delay?: Integer_80;
  backoff?: String_1100;
}
export interface Object_476 {
  token: String_1103;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_1107 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput_1 {
  uri: String_1107;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_72 = boolean;
/**
 * URI of the deleted resource
 */
export type String_1108 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput_1 {
  success: Boolean_72;
  uri: String_1108;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1109 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput_1 {
  uri: String_1109;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1110 = string;
/**
 * The unique name of the workflow
 */
export type String_1111 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1112 = string;
/**
 * The type of step
 */
export type String_1113 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_1114 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1115 = string;
/**
 * A clear description of what this step does
 */
export type String_1116 = string;
/**
 * The prompt used to generate the step
 */
export type String_1117 = string;
/**
 * Status of the step execution
 */
export type String_1118 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1119 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1120 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_137 = Object_486[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_81 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_82 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1121 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_92 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1122 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1123 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_83 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_84 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1124 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_93 = number;
export type Null_97 = null;
/**
 * The name of the tool to call
 */
export type String_1125 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1126 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_136 = Object_480[];
/**
 * The authorization token for the workflow
 */
export type String_1127 = string;
/**
 * Creation timestamp
 */
export type String_1128 = string;
/**
 * Last update timestamp
 */
export type String_1129 = string;
/**
 * User who created the resource
 */
export type String_1130 = string;
/**
 * User who last updated the resource
 */
export type String_1131 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput_1 {
  uri: String_1110;
  data: Object_477;
  created_at?: String_1128;
  updated_at?: String_1129;
  created_by?: String_1130;
  updated_by?: String_1131;
}
/**
 * Resource data
 */
export interface Object_477 {
  name: String_1111;
  description: String_1112;
  inputSchema: Object_478;
  outputSchema: Object_479;
  steps: Array_136;
  authorization?: Object_492;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_478 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_479 {
  [k: string]: unknown;
}
export interface Object_480 {
  type?: String_1113;
  /**
   * The step definition based on the type
   */
  def?: Object_481 | Object_489;
  [k: string]: unknown;
}
export interface Object_481 {
  id?: String_1114;
  name?: String_1115;
  description?: String_1116;
  prompt?: String_1117;
  inputSchema?: Object_482;
  outputSchema?: Object_483;
  input?: Object_484;
  output?: Object_485;
  status?: String_1118;
  execute?: String_1119;
  dependencies?: Array_137;
  options?: Object_487;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_482 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_483 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_484 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_485 {
  [k: string]: unknown;
}
export interface Object_486 {
  integrationId: String_1120;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_487 {
  retries?: Object_488;
  timeout?: Number_92;
}
export interface Object_488 {
  limit?: Integer_81;
  delay?: Integer_82;
  backoff?: String_1121;
}
export interface Object_489 {
  name?: String_1122;
  description?: String_1123;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_490 | Null_97;
  tool_name?: String_1125;
  integration?: String_1126;
  [k: string]: unknown;
}
export interface Object_490 {
  retries?: Object_491;
  timeout?: Number_93;
}
export interface Object_491 {
  limit?: Integer_83;
  delay?: Integer_84;
  backoff?: String_1124;
}
export interface Object_492 {
  token: String_1127;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1132 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READInput_1 {
  uri: String_1132;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1133 = string;
export type String_1134 = string;
export type String_1135 = string;
export type String_1136 = string;
export type String_1137 = string;
export type String_1138 = string;
export type String_1139 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_1140 = string;
/**
 * Error message if the workflow failed
 */
export type String_1141 = string;
export type String_1142 = "log" | "warn" | "error";
export type String_1143 = string;
/**
 * Console logs from the execution
 */
export type Array_138 = Object_495[];
/**
 * When the workflow started (timestamp)
 */
export type Number_94 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_95 = number;
export type Array_139 = unknown[];
export type String_1144 = string;
export type String_1145 = string;
export type String_1146 = string;
export type String_1147 = string;
export type String_1148 = string;
export type String_1149 = string;
export type Null_98 = null;
export type String_1150 = string;
export type String_1151 = string;
export type String_1152 = string;
export type StringNull_30 = String_1153 | Null_99;
export type String_1153 = string;
export type Null_99 = null;
export type StringNull_31 = String_1154 | Null_100;
export type String_1154 = string;
export type Null_100 = null;
export type BooleanNull_6 = Boolean_73 | Null_101;
export type Boolean_73 = boolean;
export type Null_101 = null;
export type String_1155 = string;
export type String_1156 = string;
export type StringNull_32 = String_1157 | Null_102;
export type String_1157 = string;
export type Null_102 = null;
export type StringNull_33 = String_1158 | Null_103;
export type String_1158 = string;
export type Null_103 = null;
export type BooleanNull_7 = Boolean_74 | Null_104;
export type Boolean_74 = boolean;
export type Null_104 = null;
export type String_1159 = string;
export type String_1160 = string;
export type Null_105 = null;
export type StringNull_34 = String_1161 | Null_106;
export type String_1161 = string;
export type Null_106 = null;
export type StringNull_35 = String_1162 | Null_107;
export type String_1162 = string;
export type Null_107 = null;
export type BooleanNull_8 = Boolean_75 | Null_108;
export type Boolean_75 = boolean;
export type Null_108 = null;
export type String_1163 = string;
export type String_1164 = string;
export type Null_109 = null;
export type Array_141 = Object_503[];
export type Array_140 = Object_501[];
export type String_1165 = string;
export type String_1166 = string;
export type Null_110 = null;
export type String_1167 = string;
/**
 * Creation timestamp
 */
export type String_1168 = string;
/**
 * Last update timestamp
 */
export type String_1169 = string;
/**
 * User who created the resource
 */
export type String_1170 = string;
/**
 * User who last updated the resource
 */
export type String_1171 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READOutput_1 {
  uri: String_1133;
  data: Object_493;
  created_at?: String_1168;
  updated_at?: String_1169;
  created_by?: String_1170;
  updated_by?: String_1171;
}
/**
 * Resource data
 */
export interface Object_493 {
  name: String_1134;
  description?: String_1135;
  icon?: String_1136;
  status: String_1137;
  runId: String_1138;
  workflowURI?: String_1139;
  currentStep?: String_1140;
  stepResults?: Object_494;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_1141;
  logs?: Array_138;
  startTime?: Number_94;
  endTime?: Number_95;
  workflowStatus?: Object_496;
}
/**
 * Results from completed steps
 */
export interface Object_494 {
  [k: string]: unknown;
}
export interface Object_495 {
  type: String_1142;
  content: String_1143;
}
export interface Object_496 {
  params?: Object_497 | Null_98;
  trigger?: Object_500;
  versionId?: String_1151;
  queued?: String_1152;
  start?: StringNull_30;
  end?: StringNull_31;
  success?: BooleanNull_6;
  steps?: Array_140;
  error?: Object_505 | Null_110;
  output?: unknown;
  status?: String_1167;
  [k: string]: unknown;
}
export interface Object_497 {
  input?: unknown;
  steps?: Array_139;
  name?: String_1144;
  context?: Object_498;
  [k: string]: unknown;
}
export interface Object_498 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_1145;
  startedBy?: Object_499;
  startedAt?: String_1149;
  [k: string]: unknown;
}
export interface Object_499 {
  id: String_1146;
  email?: String_1147;
  name?: String_1148;
}
export interface Object_500 {
  source: String_1150;
  [k: string]: unknown;
}
export interface Object_501 {
  name?: String_1155;
  type?: String_1156;
  start?: StringNull_32;
  end?: StringNull_33;
  success?: BooleanNull_7;
  output?: unknown;
  error?: Object_502 | Null_105;
  attempts?: Array_141;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_502 {
  name?: String_1159;
  message?: String_1160;
}
export interface Object_503 {
  start?: StringNull_34;
  end?: StringNull_35;
  success?: BooleanNull_8;
  error?: Object_504 | Null_109;
}
export interface Object_504 {
  name?: String_1163;
  message?: String_1164;
}
export interface Object_505 {
  name?: String_1165;
  message?: String_1166;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1172 = string;
/**
 * Page number (1-based)
 */
export type Integer_85 = number;
/**
 * Number of items per page
 */
export type Integer_86 = number;
/**
 * Field to sort by
 */
export type String_1173 = string;
/**
 * Sort order
 */
export type String_1174 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput_1 {
  term?: String_1172;
  page?: Integer_85;
  pageSize?: Integer_86;
  filters?: Object_506;
  sortBy?: String_1173;
  sortOrder?: String_1174;
}
/**
 * Additional filters to apply
 */
export interface Object_506 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1175 = string;
export type String_1176 = string;
/**
 * Description of the resource
 */
export type String_1177 = string;
/**
 * URL to the resource icon
 */
export type String_1178 = string;
export type String_1179 = string;
export type String_1180 = string;
export type String_1181 = string;
export type String_1182 = string;
export type String_1183 = string;
export type String_1184 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_1185 = string;
/**
 * Error message if the workflow failed
 */
export type String_1186 = string;
export type String_1187 = "log" | "warn" | "error";
export type String_1188 = string;
/**
 * Console logs from the execution
 */
export type Array_143 = Object_511[];
/**
 * When the workflow started (timestamp)
 */
export type Number_96 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_97 = number;
export type Array_144 = unknown[];
export type String_1189 = string;
export type String_1190 = string;
export type String_1191 = string;
export type String_1192 = string;
export type String_1193 = string;
export type String_1194 = string;
export type Null_111 = null;
export type String_1195 = string;
export type String_1196 = string;
export type String_1197 = string;
export type StringNull_36 = String_1198 | Null_112;
export type String_1198 = string;
export type Null_112 = null;
export type StringNull_37 = String_1199 | Null_113;
export type String_1199 = string;
export type Null_113 = null;
export type BooleanNull_9 = Boolean_76 | Null_114;
export type Boolean_76 = boolean;
export type Null_114 = null;
export type String_1200 = string;
export type String_1201 = string;
export type StringNull_38 = String_1202 | Null_115;
export type String_1202 = string;
export type Null_115 = null;
export type StringNull_39 = String_1203 | Null_116;
export type String_1203 = string;
export type Null_116 = null;
export type BooleanNull_10 = Boolean_77 | Null_117;
export type Boolean_77 = boolean;
export type Null_117 = null;
export type String_1204 = string;
export type String_1205 = string;
export type Null_118 = null;
export type StringNull_40 = String_1206 | Null_119;
export type String_1206 = string;
export type Null_119 = null;
export type StringNull_41 = String_1207 | Null_120;
export type String_1207 = string;
export type Null_120 = null;
export type BooleanNull_11 = Boolean_78 | Null_121;
export type Boolean_78 = boolean;
export type Null_121 = null;
export type String_1208 = string;
export type String_1209 = string;
export type Null_122 = null;
export type Array_146 = Object_519[];
export type Array_145 = Object_517[];
export type String_1210 = string;
export type String_1211 = string;
export type Null_123 = null;
export type String_1212 = string;
/**
 * Creation timestamp
 */
export type String_1213 = string;
/**
 * Last update timestamp
 */
export type String_1214 = string;
/**
 * User who created the resource
 */
export type String_1215 = string;
/**
 * User who last updated the resource
 */
export type String_1216 = string;
/**
 * Array of matching resources
 */
export type Array_142 = Object_507[];
/**
 * Total number of matching resources
 */
export type Integer_87 = number;
/**
 * Current page number
 */
export type Integer_88 = number;
/**
 * Number of items per page
 */
export type Integer_89 = number;
/**
 * Total number of pages
 */
export type Integer_90 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_79 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_80 = boolean;

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput_1 {
  items: Array_142;
  totalCount: Integer_87;
  page: Integer_88;
  pageSize: Integer_89;
  totalPages: Integer_90;
  hasNextPage: Boolean_79;
  hasPreviousPage: Boolean_80;
}
export interface Object_507 {
  uri: String_1175;
  /**
   * Resource data with required name
   */
  data: Object_508 & Object_509;
  created_at?: String_1213;
  updated_at?: String_1214;
  created_by?: String_1215;
  updated_by?: String_1216;
}
export interface Object_508 {
  name: String_1176;
  description?: String_1177;
  icon?: String_1178;
}
export interface Object_509 {
  name: String_1179;
  description?: String_1180;
  icon?: String_1181;
  status: String_1182;
  runId: String_1183;
  workflowURI?: String_1184;
  currentStep?: String_1185;
  stepResults?: Object_510;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_1186;
  logs?: Array_143;
  startTime?: Number_96;
  endTime?: Number_97;
  workflowStatus?: Object_512;
}
/**
 * Results from completed steps
 */
export interface Object_510 {
  [k: string]: unknown;
}
export interface Object_511 {
  type: String_1187;
  content: String_1188;
}
export interface Object_512 {
  params?: Object_513 | Null_111;
  trigger?: Object_516;
  versionId?: String_1196;
  queued?: String_1197;
  start?: StringNull_36;
  end?: StringNull_37;
  success?: BooleanNull_9;
  steps?: Array_145;
  error?: Object_521 | Null_123;
  output?: unknown;
  status?: String_1212;
  [k: string]: unknown;
}
export interface Object_513 {
  input?: unknown;
  steps?: Array_144;
  name?: String_1189;
  context?: Object_514;
  [k: string]: unknown;
}
export interface Object_514 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_1190;
  startedBy?: Object_515;
  startedAt?: String_1194;
  [k: string]: unknown;
}
export interface Object_515 {
  id: String_1191;
  email?: String_1192;
  name?: String_1193;
}
export interface Object_516 {
  source: String_1195;
  [k: string]: unknown;
}
export interface Object_517 {
  name?: String_1200;
  type?: String_1201;
  start?: StringNull_38;
  end?: StringNull_39;
  success?: BooleanNull_10;
  output?: unknown;
  error?: Object_518 | Null_118;
  attempts?: Array_146;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_518 {
  name?: String_1204;
  message?: String_1205;
}
export interface Object_519 {
  start?: StringNull_40;
  end?: StringNull_41;
  success?: BooleanNull_11;
  error?: Object_520 | Null_122;
}
export interface Object_520 {
  name?: String_1208;
  message?: String_1209;
}
export interface Object_521 {
  name?: String_1210;
  message?: String_1211;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1217 = string;
/**
 * Page number (1-based)
 */
export type Integer_91 = number;
/**
 * Number of items per page
 */
export type Integer_92 = number;
/**
 * Field to sort by
 */
export type String_1218 = string;
/**
 * Sort order
 */
export type String_1219 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput_1 {
  term?: String_1217;
  page?: Integer_91;
  pageSize?: Integer_92;
  filters?: Object_522;
  sortBy?: String_1218;
  sortOrder?: String_1219;
}
/**
 * Additional filters to apply
 */
export interface Object_522 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1220 = string;
export type String_1221 = string;
/**
 * Description of the resource
 */
export type String_1222 = string;
/**
 * URL to the resource icon
 */
export type String_1223 = string;
/**
 * The unique name of the workflow
 */
export type String_1224 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1225 = string;
/**
 * Creation timestamp
 */
export type String_1226 = string;
/**
 * Last update timestamp
 */
export type String_1227 = string;
/**
 * User who created the resource
 */
export type String_1228 = string;
/**
 * User who last updated the resource
 */
export type String_1229 = string;
/**
 * Array of matching resources
 */
export type Array_147 = Object_523[];
/**
 * Total number of matching resources
 */
export type Integer_93 = number;
/**
 * Current page number
 */
export type Integer_94 = number;
/**
 * Number of items per page
 */
export type Integer_95 = number;
/**
 * Total number of pages
 */
export type Integer_96 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_81 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_82 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput_1 {
  items: Array_147;
  totalCount: Integer_93;
  page: Integer_94;
  pageSize: Integer_95;
  totalPages: Integer_96;
  hasNextPage: Boolean_81;
  hasPreviousPage: Boolean_82;
}
export interface Object_523 {
  uri: String_1220;
  /**
   * Resource data with required name
   */
  data: Object_524 & Object_525;
  created_at?: String_1226;
  updated_at?: String_1227;
  created_by?: String_1228;
  updated_by?: String_1229;
}
export interface Object_524 {
  name: String_1221;
  description?: String_1222;
  icon?: String_1223;
}
export interface Object_525 {
  name: String_1224;
  description: String_1225;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_1230 = string;
/**
 * The unique name of the workflow
 */
export type String_1231 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1232 = string;
/**
 * The type of step
 */
export type String_1233 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_1234 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1235 = string;
/**
 * A clear description of what this step does
 */
export type String_1236 = string;
/**
 * The prompt used to generate the step
 */
export type String_1237 = string;
/**
 * Status of the step execution
 */
export type String_1238 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1239 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1240 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_149 = Object_535[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_97 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_98 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1241 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_98 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1242 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1243 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_99 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_100 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1244 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_99 = number;
export type Null_124 = null;
/**
 * The name of the tool to call
 */
export type String_1245 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1246 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_148 = Object_529[];
/**
 * The authorization token for the workflow
 */
export type String_1247 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput_1 {
  uri: String_1230;
  data: Object_526;
}
/**
 * Updated resource data
 */
export interface Object_526 {
  name: String_1231;
  description: String_1232;
  inputSchema: Object_527;
  outputSchema: Object_528;
  steps: Array_148;
  authorization?: Object_541;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_527 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_528 {
  [k: string]: unknown;
}
export interface Object_529 {
  type?: String_1233;
  /**
   * The step definition based on the type
   */
  def?: Object_530 | Object_538;
  [k: string]: unknown;
}
export interface Object_530 {
  id?: String_1234;
  name?: String_1235;
  description?: String_1236;
  prompt?: String_1237;
  inputSchema?: Object_531;
  outputSchema?: Object_532;
  input?: Object_533;
  output?: Object_534;
  status?: String_1238;
  execute?: String_1239;
  dependencies?: Array_149;
  options?: Object_536;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_531 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_532 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_533 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_534 {
  [k: string]: unknown;
}
export interface Object_535 {
  integrationId: String_1240;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_536 {
  retries?: Object_537;
  timeout?: Number_98;
}
export interface Object_537 {
  limit?: Integer_97;
  delay?: Integer_98;
  backoff?: String_1241;
}
export interface Object_538 {
  name?: String_1242;
  description?: String_1243;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_539 | Null_124;
  tool_name?: String_1245;
  integration?: String_1246;
  [k: string]: unknown;
}
export interface Object_539 {
  retries?: Object_540;
  timeout?: Number_99;
}
export interface Object_540 {
  limit?: Integer_99;
  delay?: Integer_100;
  backoff?: String_1244;
}
export interface Object_541 {
  token: String_1247;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_1248 = string;
/**
 * The unique name of the workflow
 */
export type String_1249 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1250 = string;
/**
 * The type of step
 */
export type String_1251 = "code" | "tool_call";
/**
 * The unique ID of the step within the workflow
 */
export type String_1252 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1253 = string;
/**
 * A clear description of what this step does
 */
export type String_1254 = string;
/**
 * The prompt used to generate the step
 */
export type String_1255 = string;
/**
 * Status of the step execution
 */
export type String_1256 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1257 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1258 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_151 = Object_551[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_101 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_102 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1259 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_100 = number;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1260 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1261 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_103 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_104 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1262 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_101 = number;
export type Null_125 = null;
/**
 * The name of the tool to call
 */
export type String_1263 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1264 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 */
export type Array_150 = Object_545[];
/**
 * The authorization token for the workflow
 */
export type String_1265 = string;
/**
 * Original creation timestamp
 */
export type String_1266 = string;
/**
 * Last update timestamp
 */
export type String_1267 = string;
/**
 * User who originally created the resource
 */
export type String_1268 = string;
/**
 * User who last updated the resource
 */
export type String_1269 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput_1 {
  uri: String_1248;
  data: Object_542;
  created_at?: String_1266;
  updated_at?: String_1267;
  created_by?: String_1268;
  updated_by?: String_1269;
}
/**
 * Updated resource data
 */
export interface Object_542 {
  name: String_1249;
  description: String_1250;
  inputSchema: Object_543;
  outputSchema: Object_544;
  steps: Array_150;
  authorization?: Object_557;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_543 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_544 {
  [k: string]: unknown;
}
export interface Object_545 {
  type?: String_1251;
  /**
   * The step definition based on the type
   */
  def?: Object_546 | Object_554;
  [k: string]: unknown;
}
export interface Object_546 {
  id?: String_1252;
  name?: String_1253;
  description?: String_1254;
  prompt?: String_1255;
  inputSchema?: Object_547;
  outputSchema?: Object_548;
  input?: Object_549;
  output?: Object_550;
  status?: String_1256;
  execute?: String_1257;
  dependencies?: Array_151;
  options?: Object_552;
  [k: string]: unknown;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_547 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_548 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_549 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_550 {
  [k: string]: unknown;
}
export interface Object_551 {
  integrationId: String_1258;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_552 {
  retries?: Object_553;
  timeout?: Number_100;
}
export interface Object_553 {
  limit?: Integer_101;
  delay?: Integer_102;
  backoff?: String_1259;
}
export interface Object_554 {
  name?: String_1260;
  description?: String_1261;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_555 | Null_125;
  tool_name?: String_1263;
  integration?: String_1264;
  [k: string]: unknown;
}
export interface Object_555 {
  retries?: Object_556;
  timeout?: Number_101;
}
export interface Object_556 {
  limit?: Integer_103;
  delay?: Integer_104;
  backoff?: String_1262;
}
export interface Object_557 {
  token: String_1265;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_1270 = string;
/**
 * The token to use for the tool execution
 */
export type String_1271 = string;

export interface DECO_TOOL_CALL_TOOLInput_1 {
  uri: String_1270;
  input: Object_558;
  authorization?: String_1271;
}
/**
 * The input of the code
 */
export interface Object_558 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1272 = "log" | "warn" | "error";
export type String_1273 = string;
/**
 * Console logs from the execution
 */
export type Array_152 = Object_559[];

export interface DECO_TOOL_CALL_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_152;
}
export interface Object_559 {
  type: String_1272;
  content: String_1273;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_1274 = string;
/**
 * The description of the tool
 */
export type String_1275 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1276 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1277 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_153 = Object_563[];
/**
 * The token to use for the tool execution
 */
export type String_1278 = string;

export interface DECO_TOOL_RUN_TOOLInput_1 {
  tool: Object_560;
  input: Object_564;
  authorization?: String_1278;
}
export interface Object_560 {
  name: String_1274;
  description: String_1275;
  inputSchema: Object_561;
  outputSchema: Object_562;
  execute: String_1276;
  dependencies?: Array_153;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_561 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_562 {
  [k: string]: unknown;
}
export interface Object_563 {
  integrationId: String_1277;
}
/**
 * The input of the code
 */
export interface Object_564 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1279 = "log" | "warn" | "error";
export type String_1280 = string;
/**
 * Console logs from the execution
 */
export type Array_154 = Object_565[];

export interface DECO_TOOL_RUN_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_154;
}
export interface Object_565 {
  type: String_1279;
  content: String_1280;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1281 = string;

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILInput {
  resource: String_1281;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1282 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1283 = string;
export type String_1284 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_155 = String_1284[];

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILOutput {
  url: String_1282;
  prompt?: String_1283;
  tools?: Array_155;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1285 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput_1 {
  resource: String_1285;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1286 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1287 = string;
export type String_1288 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_156 = String_1288[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput_1 {
  url: String_1286;
  prompt?: String_1287;
  tools?: Array_156;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1289 = string;

export interface DECO_VIEW_RENDER_VIEW_DETAILInput {
  resource: String_1289;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1290 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1291 = string;
export type String_1292 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_157 = String_1292[];

export interface DECO_VIEW_RENDER_VIEW_DETAILOutput {
  url: String_1290;
  prompt?: String_1291;
  tools?: Array_157;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1293 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput_1 {
  resource: String_1293;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1294 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1295 = string;
export type String_1296 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_158 = String_1296[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput_1 {
  url: String_1294;
  prompt?: String_1295;
  tools?: Array_158;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1297 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_RUNInput_1 {
  resource: String_1297;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1298 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1299 = string;
export type String_1300 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_159 = String_1300[];

export interface DECO_VIEW_RENDER_WORKFLOW_RUNOutput_1 {
  url: String_1298;
  prompt?: String_1299;
  tools?: Array_159;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_1301 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_1302 = string;

export interface DECO_WORKFLOW_STARTInput_1 {
  uri: String_1301;
  input: Object_566;
  stopAfter?: String_1302;
  state?: Object_567;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_566 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_567 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_1303 = string;
/**
 * The Resources 2.0 URI of the workflow run (rsc://i:workflows-management/workflow_run/{runId}). Use DECO_RESOURCE_WORKFLOW_RUN_READ to get status and results.
 */
export type String_1304 = string;
/**
 * Error message if workflow start failed
 */
export type String_1305 = string;

export interface DECO_WORKFLOW_STARTOutput_1 {
  runId?: String_1303;
  uri?: String_1304;
  error?: String_1305;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to delete
 */
export type String_1306 = string;

export interface DELETE_BRANCHInput {
  branchName: String_1306;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_83 = boolean;
export type String_1307 = string;
export type Number_102 = number;

export interface DELETE_BRANCHOutput {
  deleted: Boolean_83;
  branchName: String_1307;
  filesDeleted?: Number_102;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1308 = string;
/**
 * The file path within the branch
 */
export type String_1309 = string;

export interface DELETE_FILEInput {
  branch?: String_1308;
  path: String_1309;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_84 = boolean;

export interface DELETE_FILEOutput {
  deleted: Boolean_84;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The base branch to compare from (defaults to 'main')
 */
export type String_1310 = string;
/**
 * The branch to compare against
 */
export type String_1311 = string;

export interface DIFF_BRANCHInput {
  baseBranch?: String_1310;
  compareBranch: String_1311;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1312 = string;
export type String_1313 = "added" | "modified" | "deleted";
export type String_1314 = string;
export type String_1315 = string;
export type Array_160 = Object_568[];

export interface DIFF_BRANCHOutput {
  differences: Array_160;
}
export interface Object_568 {
  path: String_1312;
  type: String_1313;
  baseAddress?: String_1314;
  compareAddress?: String_1315;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1316 = string;

export interface FS_DELETEInput {
  path: String_1316;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The root directory to list files from
 */
export type String_1317 = string;

export interface FS_LISTInput {
  prefix: String_1317;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_161 = unknown[];

export interface FS_LISTOutput {
  items: Array_161;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1318 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_103 = number;

export interface FS_READInput {
  path: String_1318;
  expiresIn?: Number_103;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to read the file from
 */
export type String_1319 = string;

export interface FS_READOutput {
  url: String_1319;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1320 = string;

export interface FS_READ_METADATAInput {
  path: String_1320;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_READ_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1321 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_104 = number;
/**
 * Content-Type for the file. This is required.
 */
export type String_1322 = string;

export interface FS_WRITEInput {
  path: String_1321;
  expiresIn?: Number_104;
  contentType: String_1322;
  metadata?: Object_569;
}
/**
 * Metadata to be added to the file
 */
export interface Object_569 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to upload the file to
 */
export type String_1323 = string;

export interface FS_WRITEOutput {
  url: String_1323;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1324 = "day" | "week" | "month";

export interface GET_AGENTS_USAGEInput {
  range: String_1324;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1325 = string;
export type String_1326 = string;
export type StringNull_42 = String_1327 | Null_126;
export type String_1327 = string;
export type Null_126 = null;
export type Number_105 = number;
export type String_1328 = string;
export type String_1329 = string;
export type Number_106 = number;
export type StringNull_43 = String_1330 | Null_127;
export type String_1330 = string;
export type Null_127 = null;
export type StringNull_44 = String_1331 | Null_128;
export type String_1331 = string;
export type Null_128 = null;
export type Array_163 = Object_571[];
export type Array_162 = Object_570[];

export interface GET_AGENTS_USAGEOutput {
  total: String_1325;
  items: Array_162;
}
export interface Object_570 {
  id: String_1326;
  label?: StringNull_42;
  total: Number_105;
  transactions: Array_163;
}
export interface Object_571 {
  id: String_1328;
  timestamp: String_1329;
  amount: Number_106;
  agentId?: StringNull_43;
  generatedBy?: StringNull_44;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1332 = "day" | "week" | "month" | "year";

export interface GET_BILLING_HISTORYInput {
  range: String_1332;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1333 = string;
export type String_1334 = string;
export type String_1335 = string;
export type String_1336 = string;
export type StringNull_45 = String_1337 | Null_129;
export type String_1337 = string;
export type Null_129 = null;
export type StringNull_46 = String_1338 | Null_130;
export type String_1338 = string;
export type Null_130 = null;
export type Array_164 = Object_572[];

export interface GET_BILLING_HISTORYOutput {
  items: Array_164;
}
export interface Object_572 {
  id: String_1333;
  amount: String_1334;
  timestamp: String_1335;
  type: String_1336;
  contractId?: StringNull_45;
  callerApp?: StringNull_46;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1339 = "day" | "week" | "month" | "year";

export interface GET_CONTRACTS_COMMITSInput {
  range: String_1339;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1340 = string;
export type Number_107 = number;
export type String_1341 = string;
export type StringNull_47 = String_1342 | Null_131;
export type String_1342 = string;
export type Null_131 = null;
export type String_1343 = string;
export type Number_108 = number;
export type Array_166 = Object_574[];
export type String_1344 = string;
export type String_1345 = string;
export type Array_165 = Object_573[];

export interface GET_CONTRACTS_COMMITSOutput {
  items: Array_165;
}
export interface Object_573 {
  id: String_1340;
  amount: Number_107;
  contractId: String_1341;
  callerApp?: StringNull_47;
  clauses: Array_166;
  timestamp: String_1344;
  type: String_1345;
}
export interface Object_574 {
  clauseId: String_1343;
  amount: Number_108;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1346 = "day" | "week" | "month";

export interface GET_THREADS_USAGEInput {
  range: String_1346;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_THREADS_USAGEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WALLET_ACCOUNTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1347 = string;
export type String_1348 = string;

export interface GET_WALLET_ACCOUNTOutput {
  balance: String_1347;
  balanceExact: String_1348;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1349 = string;

export interface HOSTING_APP_DELETEInput {
  appSlug: String_1349;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, force the deployment even if there are breaking changes
 */
export type Boolean_85 = boolean;
/**
 * If true, promotes the deployment to production routes. The deployment will be available at a unique URL but won't replace the production version.
 */
export type Boolean_86 = boolean;
/**
 * The slug identifier for the app, if not provided, you should use the wrangler.toml file to determine the slug (using the name field).
 */
export type String_1350 = string;
export type String_1351 = string;
export type String_1352 = string;
export type Boolean_87 = boolean;
/**
 * An array of files with their paths and contents. Must include main.ts as entrypoint and package.json for dependencies
 */
export type Array_167 = Object_575[];
export type String_1353 = string;
/**
 * If false, skip the bundler step and upload the files as-is. Default: true (bundle files)
 */
export type Boolean_88 = boolean;
/**
 * Whether the app should be unlisted in the registry. Default: true (unlisted)
 */
export type Boolean_89 = boolean;

export interface HOSTING_APP_DEPLOYInput {
  force?: Boolean_85;
  promote?: Boolean_86;
  appSlug?: String_1350;
  files: Array_167;
  envVars?: Object_576;
  bundle?: Boolean_88;
  unlisted?: Boolean_89;
}
export interface Object_575 {
  path: String_1351;
  content: String_1352;
  asset?: Boolean_87;
}
/**
 * An optional object of environment variables to be set on the worker
 */
export interface Object_576 {
  [k: string]: String_1353;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The entrypoint of the app
 */
export type String_1354 = string;
export type String_1355 = string;
/**
 * The hosts of the app
 */
export type Array_168 = String_1355[];
/**
 * The id of the app
 */
export type String_1356 = string;
/**
 * The workspace of the app
 */
export type StringNull_48 = String_1357 | Null_132;
export type String_1357 = string;
export type Null_132 = null;
/**
 * The deployment id of the app
 */
export type String_1358 = string;

export interface HOSTING_APP_DEPLOYOutput {
  entrypoint: String_1354;
  hosts: Array_168;
  id: String_1356;
  workspace: StringNull_48;
  deploymentId?: String_1358;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1359 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTInput {
  appSlug: String_1359;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID
 */
export type String_1360 = string;
/**
 * The Cloudflare worker ID
 */
export type StringNull_49 = String_1361 | Null_133;
export type String_1361 = string;
export type Null_133 = null;
/**
 * The deployment entrypoint URL
 */
export type String_1362 = string;
/**
 * When the deployment was created
 */
export type String_1363 = string;
/**
 * When the deployment was last updated
 */
export type String_1364 = string;
export type Array_169 = Object_577[];
export type String_1365 = string;
export type String_1366 = string;
export type String_1367 = string;
export type String_1368 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTOutput {
  deployments: Array_169;
  app: Object_578;
}
export interface Object_577 {
  id: String_1360;
  cloudflare_deployment_id: StringNull_49;
  entrypoint: String_1362;
  created_at: String_1363;
  updated_at: String_1364;
}
export interface Object_578 {
  id: String_1365;
  slug: String_1366;
  workspace: String_1367;
  project_id: String_1368;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1369 = string;

export interface HOSTING_APP_INFOInput {
  appSlug: String_1369;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_INFOOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1370 = string;
/**
 * List of unique workflow names
 */
export type Array_170 = String_1370[];

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESOutput {
  workflowNames: Array_170;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_109 = number;
export type Number_110 = number;
/**
 * Optional: The name of the workflow to list runs for. If not provided, shows recent runs from any workflow.
 */
export type String_1371 = string;
export type String_1372 = string;
export type String_1373 = string;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSInput {
  page?: Number_109;
  per_page?: Number_110;
  workflowName?: String_1371;
  fromDate?: String_1372;
  toDate?: String_1373;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1374 = string;
export type String_1375 = string;
export type Number_111 = number;
export type NumberNull_6 = Number_112 | Null_134;
export type Number_112 = number;
export type Null_134 = null;
export type String_1376 = string;
/**
 * The workflow runs
 */
export type Array_171 = Object_579[];
export type Number_113 = number;
export type Number_114 = number;
export type Number_115 = number;
export type Number_116 = number;
export type Number_117 = number;
export type Number_118 = number;
export type Number_119 = number;
export type String_1377 = string;
export type Null_135 = null;
export type Number_120 = number;
export type String_1378 = string;
export type Null_136 = null;
export type Number_121 = number;
export type Number_122 = number;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSOutput {
  runs: Array_171;
  stats: Object_580;
  pagination: Object_583;
}
export interface Object_579 {
  workflowName: String_1374;
  runId: String_1375;
  createdAt: Number_111;
  updatedAt?: NumberNull_6;
  status: String_1376;
}
/**
 * Workflow statistics
 */
export interface Object_580 {
  totalRuns: Number_113;
  successCount: Number_114;
  errorCount: Number_115;
  runningCount: Number_116;
  pendingCount: Number_117;
  successRate: Number_118;
  firstRun: Object_581 | Null_135;
  lastRun: Object_582 | Null_136;
}
export interface Object_581 {
  date: Number_119;
  status: String_1377;
}
export interface Object_582 {
  date: Number_120;
  status: String_1378;
}
export interface Object_583 {
  page?: Number_121;
  per_page?: Number_122;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The instance ID of the workflow. To get this, use the HOSTING_APP_WORKFLOWS_INSTANCES_LIST or HOSTING_APP_WORKFLOWS_START tool.
 */
export type String_1379 = string;
export type String_1380 = string;

export interface HOSTING_APP_WORKFLOWS_STATUSInput {
  instanceId: String_1379;
  workflowName: String_1380;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_STATUSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APPS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1381 = string;
export type String_1382 = string;
export type Array_172 = Object_584[];

export interface HOSTING_APPS_LISTOutput {
  items: Array_172;
}
export interface Object_584 {
  slug?: String_1381;
  entrypoint: String_1382;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID to promote
 */
export type String_1383 = string;
/**
 * Route pattern to promote the deployment to (can be custom domain or .deco.page)
 */
export type String_1384 = string;

export interface HOSTING_APPS_PROMOTEInput {
  deploymentId: String_1383;
  routePattern: String_1384;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the promotion was successful
 */
export type Boolean_90 = boolean;
/**
 * The route pattern that was promoted
 */
export type String_1385 = string;

export interface HOSTING_APPS_PROMOTEOutput {
  success: Boolean_90;
  promotedRoute: String_1385;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1386 = string;
export type String_1387 = "HTTP";
export type String_1388 = string;
export type String_1389 = string;
export type String_1390 = "SSE";
export type String_1391 = string;
export type String_1392 = string;
export type String_1393 = string;
export type String_1394 = "Websocket";
export type String_1395 = string;
export type String_1396 = string;
export type String_1397 = "Deco";
export type String_1398 = string;
export type String_1399 = string;
export type String_1400 = "INNATE";
export type String_1401 = string;
export type String_1402 = string;
export type String_1403 = string;
export type Integer_105 = number;
export type String_1404 = string;

export interface INTEGRATIONS_CALL_TOOLInput_1 {
  id?: String_1386;
  connection?: Object_585 | Object_586 | Object_588 | Object_589 | Object_590;
  params: Object_591;
}
export interface Object_585 {
  type: String_1387;
  url: String_1388;
  token?: String_1389;
}
export interface Object_586 {
  type: String_1390;
  url: String_1391;
  token?: String_1392;
  headers?: Object_587;
}
export interface Object_587 {
  [k: string]: String_1393;
}
export interface Object_588 {
  type: String_1394;
  url: String_1395;
  token?: String_1396;
}
export interface Object_589 {
  type: String_1397;
  tenant: String_1398;
  token?: String_1399;
}
export interface Object_590 {
  type: String_1400;
  name: String_1401;
  workspace?: String_1402;
}
export interface Object_591 {
  _meta?: Object_592;
  name: String_1404;
  arguments?: Object_593;
  [k: string]: unknown;
}
export interface Object_592 {
  progressToken?: String_1403 | Integer_105;
  [k: string]: unknown;
}
export interface Object_593 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1405 = string;
export type String_1406 = string;
export type String_1407 = string;
export type String_1408 = string;
export type String_1409 = string;
export type Null_137 = null;
export type String_1410 = string;
export type Null_138 = null;
export type String_1411 = "HTTP";
export type String_1412 = string;
export type String_1413 = string;
export type String_1414 = "SSE";
export type String_1415 = string;
export type String_1416 = string;
export type String_1417 = string;
export type String_1418 = "Websocket";
export type String_1419 = string;
export type String_1420 = string;
export type String_1421 = "Deco";
export type String_1422 = string;
export type String_1423 = string;
export type String_1424 = "INNATE";
export type String_1425 = string;
export type String_1426 = string;
export type Null_139 = null;
/**
 * The name of the tool
 */
export type String_1427 = string;
/**
 * The description of the tool
 */
export type String_1428 = string;
export type Array_173 = (Object_601 & Object_603)[];
export type Null_140 = null;
export type String_1429 = string;

export interface INTEGRATIONS_CREATEInput_1 {
  id?: String_1405;
  name?: String_1406;
  description?: String_1407;
  icon?: String_1408;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1409
      )
    | Null_137;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1410
      )
    | Null_138;
  connection?: Object_594 | Object_595 | Object_597 | Object_598 | Object_599;
  metadata?: Object_600 | Null_139;
  tools?: Array_173 | Null_140;
  clientIdFromApp?: String_1429;
}
export interface Object_594 {
  type: String_1411;
  url: String_1412;
  token?: String_1413;
}
export interface Object_595 {
  type: String_1414;
  url: String_1415;
  token?: String_1416;
  headers?: Object_596;
}
export interface Object_596 {
  [k: string]: String_1417;
}
export interface Object_597 {
  type: String_1418;
  url: String_1419;
  token?: String_1420;
}
export interface Object_598 {
  type: String_1421;
  tenant: String_1422;
  token?: String_1423;
}
export interface Object_599 {
  type: String_1424;
  name: String_1425;
  workspace?: String_1426;
}
export interface Object_600 {
  [k: string]: unknown;
}
export interface Object_601 {
  name: String_1427;
  inputSchema: Object_602;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_602 {
  [k: string]: unknown;
}
export interface Object_603 {
  description?: String_1428;
  outputSchema?: Object_604;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_604 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1430 = string;

export interface INTEGRATIONS_DELETEInput_1 {
  id: String_1430;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1431 = string;

export interface INTEGRATIONS_GETInput_1 {
  id: String_1431;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1432 = string;

export interface INTEGRATIONS_GET_API_KEYInput_1 {
  integrationId: String_1432;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GET_API_KEYOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1433 = "Channel" | "View";
export type Boolean_91 = boolean;

export interface INTEGRATIONS_LISTInput_1 {
  binder?: String_1433;
  hideVirtual?: Boolean_91;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1434 = string;
export type String_1435 = string;
export type String_1436 = string;
export type String_1437 = string;
export type String_1438 = string;
export type Null_141 = null;
export type String_1439 = string;
export type Null_142 = null;
export type String_1440 = string;
export type Null_143 = null;
export type String_1441 = "HTTP";
export type String_1442 = string;
export type String_1443 = string;
export type String_1444 = "SSE";
export type String_1445 = string;
export type String_1446 = string;
export type String_1447 = string;
export type String_1448 = "Websocket";
export type String_1449 = string;
export type String_1450 = string;
export type String_1451 = "Deco";
export type String_1452 = string;
export type String_1453 = string;
export type String_1454 = "INNATE";
export type String_1455 = string;
export type String_1456 = string;
export type Null_144 = null;
/**
 * The name of the tool
 */
export type String_1457 = string;
/**
 * The description of the tool
 */
export type String_1458 = string;
export type Array_175 = (Object_613 & Object_615)[];
export type Null_145 = null;
export type Array_174 = Object_605[];

export interface INTEGRATIONS_LISTOutput_1 {
  items: Array_174;
}
export interface Object_605 {
  id: String_1434;
  name: String_1435;
  description?: String_1436;
  icon?: String_1437;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1438
      )
    | Null_141;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1439
      )
    | Null_142;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1440
      )
    | Null_143;
  connection: Object_606 | Object_607 | Object_609 | Object_610 | Object_611;
  metadata?: Object_612 | Null_144;
  tools?: Array_175 | Null_145;
}
export interface Object_606 {
  type: String_1441;
  url: String_1442;
  token?: String_1443;
}
export interface Object_607 {
  type: String_1444;
  url: String_1445;
  token?: String_1446;
  headers?: Object_608;
}
export interface Object_608 {
  [k: string]: String_1447;
}
export interface Object_609 {
  type: String_1448;
  url: String_1449;
  token?: String_1450;
}
export interface Object_610 {
  type: String_1451;
  tenant: String_1452;
  token?: String_1453;
}
export interface Object_611 {
  type: String_1454;
  name: String_1455;
  workspace?: String_1456;
}
export interface Object_612 {
  [k: string]: unknown;
}
export interface Object_613 {
  name: String_1457;
  inputSchema: Object_614;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_614 {
  [k: string]: unknown;
}
export interface Object_615 {
  description?: String_1458;
  outputSchema?: Object_616;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_616 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1459 = string;
export type String_1460 = string;
export type String_1461 = string;
export type String_1462 = string;
export type String_1463 = string;
export type String_1464 = string;
export type Null_146 = null;
export type String_1465 = string;
export type Null_147 = null;
export type String_1466 = string;
export type Null_148 = null;
export type String_1467 = "HTTP";
export type String_1468 = string;
export type String_1469 = string;
export type String_1470 = "SSE";
export type String_1471 = string;
export type String_1472 = string;
export type String_1473 = string;
export type String_1474 = "Websocket";
export type String_1475 = string;
export type String_1476 = string;
export type String_1477 = "Deco";
export type String_1478 = string;
export type String_1479 = string;
export type String_1480 = "INNATE";
export type String_1481 = string;
export type String_1482 = string;
export type Null_149 = null;
/**
 * The name of the tool
 */
export type String_1483 = string;
/**
 * The description of the tool
 */
export type String_1484 = string;
export type Array_176 = (Object_625 & Object_627)[];
export type Null_150 = null;

export interface INTEGRATIONS_UPDATEInput_1 {
  id: String_1459;
  integration: Object_617;
}
export interface Object_617 {
  id: String_1460;
  name: String_1461;
  description?: String_1462;
  icon?: String_1463;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1464
      )
    | Null_146;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1465
      )
    | Null_147;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1466
      )
    | Null_148;
  connection: Object_618 | Object_619 | Object_621 | Object_622 | Object_623;
  metadata?: Object_624 | Null_149;
  tools?: Array_176 | Null_150;
}
export interface Object_618 {
  type: String_1467;
  url: String_1468;
  token?: String_1469;
}
export interface Object_619 {
  type: String_1470;
  url: String_1471;
  token?: String_1472;
  headers?: Object_620;
}
export interface Object_620 {
  [k: string]: String_1473;
}
export interface Object_621 {
  type: String_1474;
  url: String_1475;
  token?: String_1476;
}
export interface Object_622 {
  type: String_1477;
  tenant: String_1478;
  token?: String_1479;
}
export interface Object_623 {
  type: String_1480;
  name: String_1481;
  workspace?: String_1482;
}
export interface Object_624 {
  [k: string]: unknown;
}
export interface Object_625 {
  name: String_1483;
  inputSchema: Object_626;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_626 {
  [k: string]: unknown;
}
export interface Object_627 {
  description?: String_1484;
  outputSchema?: Object_628;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_628 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1485 = string;
/**
 * File path from file added using workspace fs_write tool
 */
export type String_1486 = string;
/**
 * The name of the file
 */
export type String_1487 = string;
export type StringBoolean = String_1488 | Boolean_92;
export type String_1488 = string;
export type Boolean_92 = boolean;

export interface KNOWLEDGE_BASE_ADD_FILEInput {
  fileUrl: String_1485;
  path?: String_1486;
  filename?: String_1487;
  metadata?: Object_629;
}
export interface Object_629 {
  [k: string]: StringBoolean;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_ADD_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_1489 = string;
/**
 * The dimension of the knowledge base
 */
export type Number_123 = number;

export interface KNOWLEDGE_BASE_CREATEInput {
  name: String_1489;
  dimension?: Number_123;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_1490 = string;

export interface KNOWLEDGE_BASE_DELETEInput {
  name: String_1490;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1491 = string;

export interface KNOWLEDGE_BASE_DELETE_FILEInput {
  fileUrl: String_1491;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETE_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1492 = string;
/**
 * The id of the content to forget
 */
export type Array_177 = String_1492[];

export interface KNOWLEDGE_BASE_FORGETInput {
  docIds: Array_177;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_FORGETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LIST_FILESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_178 = unknown[];

export interface KNOWLEDGE_BASE_LIST_FILESOutput {
  items: Array_178;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the content being remembered
 */
export type String_1493 = string;
/**
 * The content to remember
 */
export type String_1494 = string;
export type String_1495 = string;

export interface KNOWLEDGE_BASE_REMEMBERInput {
  docId?: String_1493;
  content: String_1494;
  metadata?: Object_630;
}
/**
 * The metadata to remember
 */
export interface Object_630 {
  [k: string]: String_1495;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_REMEMBEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search the knowledge base
 */
export type String_1496 = string;
/**
 * The number of results to return
 */
export type Number_124 = number;
/**
 * Whether to return the content
 */
export type Boolean_93 = boolean;

export interface KNOWLEDGE_BASE_SEARCHInput {
  query: String_1496;
  topK?: Number_124;
  content?: Boolean_93;
  filter?: Object_631;
}
/**
 * Filters to match against document metadata and narrow search results. Supports MongoDB-style query operators:
 *         comparison ($eq, $ne, $gt, $gte, $lt, $lte), array ($in, $nin), logical ($and, $or), and existence ($exists).
 *         Only returns documents whose metadata matches the specified filter conditions.
 *         Examples:
 *         { "metadata": {{"category": "documents"}},
 *         { "metadata": {{"priority": {"$gte": 3}}},
 *         { "metadata": {{"status": {"$in": ["active", "pending"]}}},
 *         { "metadata": {{"$and": [{"type": "pdf"}, {"size": {"$lt": 1000}}]}}}
 */
export interface Object_631 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_SEARCHOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Optional prefix to filter branch names
 */
export type String_1497 = string;

export interface LIST_BRANCHESInput {
  prefix?: String_1497;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1498 = string;
export type Number_125 = number;
export type StringNull_50 = String_1499 | Null_151;
export type String_1499 = string;
export type Null_151 = null;
export type Array_179 = Object_632[];
export type Number_126 = number;

export interface LIST_BRANCHESOutput {
  branches: Array_179;
  count: Number_126;
}
export interface Object_632 {
  name: String_1498;
  createdAt: Number_125;
  metadata: Object_633;
  originBranch: StringNull_50;
}
export interface Object_633 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1500 = string;
/**
 * Optional prefix to filter files (use select instead)
 */
export type String_1501 = string;
export type String_1502 = string;
/**
 * Optional list of files to select
 */
export type Array_180 = String_1502[];
/**
 * Include file content as base64 in the response
 */
export type Boolean_94 = boolean;

export interface LIST_FILESInput {
  branch?: String_1500;
  prefix?: String_1501;
  select?: Array_180;
  includeContent?: Boolean_94;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1503 = string;
export type Number_127 = number;
export type Number_128 = number;
export type Number_129 = number;
export type String_1504 = string;
export type Number_130 = number;

export interface LIST_FILESOutput {
  files: Object_634;
  count: Number_130;
}
export interface Object_634 {
  [k: string]: Object_635;
}
export interface Object_635 {
  address: String_1503;
  metadata: Object_636;
  sizeInBytes: Number_127;
  mtime: Number_128;
  ctime: Number_129;
  content?: String_1504;
}
export interface Object_636 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch to merge into (defaults to 'main')
 */
export type String_1505 = string;
/**
 * The branch to merge from
 */
export type String_1506 = string;
/**
 * Merge strategy
 */
export type String_1507 = "OVERRIDE" | "LAST_WRITE_WINS";

export interface MERGE_BRANCHInput {
  targetBranch?: String_1505;
  sourceBranch: String_1506;
  strategy: String_1507;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_131 = number;
export type String_1508 = string;
export type Array_181 = String_1508[];
export type String_1509 = string;
export type Array_182 = String_1509[];
export type String_1510 = string;
export type Array_183 = String_1510[];
export type String_1511 = string;
export type String_1512 = "local" | "remote";
export type Number_132 = number;
export type Number_133 = number;
export type Array_184 = Object_637[];

export interface MERGE_BRANCHOutput {
  filesMerged: Number_131;
  added: Array_181;
  modified: Array_182;
  deleted: Array_183;
  conflicts?: Array_184;
}
export interface Object_637 {
  path: String_1511;
  resolved: String_1512;
  localMtime: Number_132;
  remoteMtime: Number_133;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1513 = string;
export type String_1514 = string;
export type String_1515 = string;
export type String_1516 = string;
export type Boolean_95 = boolean;
export type Boolean_96 = boolean;

export interface MODELS_CREATEInput {
  name: String_1513;
  model: String_1514;
  apiKey?: String_1515;
  description?: String_1516;
  byDeco?: Boolean_95;
  isEnabled?: Boolean_96;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1517 = string;

export interface MODELS_DELETEInput {
  id: String_1517;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1518 = string;

export interface MODELS_GETInput {
  id: String_1518;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_97 = boolean;
export type Boolean_98 = boolean;

export interface MODELS_LISTInput {
  excludeDisabled?: Boolean_97;
  excludeAuto?: Boolean_98;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_185 = unknown[];

export interface MODELS_LISTOutput {
  items: Array_185;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1519 = string;
export type String_1520 = string;
export type String_1521 = string;
export type StringNull_51 = String_1522 | Null_152;
export type String_1522 = string;
export type Null_152 = null;
export type Boolean_99 = boolean;
export type Boolean_100 = boolean;
export type String_1523 = string;

export interface MODELS_UPDATEInput {
  id: String_1519;
  data: Object_638;
}
export interface Object_638 {
  name?: String_1520;
  model?: String_1521;
  apiKey?: StringNull_51;
  isEnabled?: Boolean_99;
  byDeco?: Boolean_100;
  description?: String_1523;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the integration to create an OAuth code for
 */
export type String_1524 = string;

export interface OAUTH_CODE_CREATEInput {
  integrationId: String_1524;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The OAuth code
 */
export type String_1525 = string;

export interface OAUTH_CODE_CREATEOutput {
  code: String_1525;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount (in microdollars) of money to pre-authorize. Specified in USD dollars.
 */
export type StringNumber_2 = String_1526 | Number_134;
export type String_1526 = string;
export type Number_134 = number;

export interface PRE_AUTHORIZE_AMOUNTInput {
  amount: StringNumber_2;
  metadata?: Object_639;
}
export interface Object_639 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1527 = string;

export interface PRE_AUTHORIZE_AMOUNTOutput {
  id: String_1527;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1528 = string;
export type String_1529 = string;
export type String_1530 = string;

export interface PROMPTS_CREATEInput {
  name: String_1528;
  description?: String_1529;
  content: String_1530;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1531 = string;
export type String_1532 = string;
export type StringNull_52 = String_1533 | Null_153;
export type String_1533 = string;
export type Null_153 = null;
export type String_1534 = string;
export type BooleanNull_12 = Boolean_101 | Null_154;
export type Boolean_101 = boolean;
export type Null_154 = null;
export type String_1535 = string;
export type StringNull_53 = String_1536 | Null_155;
export type String_1536 = string;
export type Null_155 = null;

export interface PROMPTS_CREATEOutput {
  id: String_1531;
  name: String_1532;
  description: StringNull_52;
  content: String_1534;
  readonly?: BooleanNull_12;
  created_at: String_1535;
  updated_at?: StringNull_53;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1537 = string;

export interface PROMPTS_DELETEInput {
  id: String_1537;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_102 = boolean;

export interface PROMPTS_DELETEOutput {
  success: Boolean_102;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1538 = string;

export interface PROMPTS_GETInput {
  id: String_1538;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1539 = string;
export type Number_135 = number;
export type Number_136 = number;

export interface PROMPTS_GET_VERSIONSInput {
  id: String_1539;
  limit?: Number_135;
  offset?: Number_136;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull_54 = String_1540 | Null_156;
export type String_1540 = string;
export type Null_156 = null;
export type String_1541 = string;
export type StringNull_55 = String_1542 | Null_157;
export type String_1542 = string;
export type Null_157 = null;
export type String_1543 = string;
export type StringNull_56 = String_1544 | Null_158;
export type String_1544 = string;
export type Null_158 = null;
export type String_1545 = string;
export type StringNull_57 = String_1546 | Null_159;
export type String_1546 = string;
export type Null_159 = null;
export type Array_186 = Object_640[];

export interface PROMPTS_GET_VERSIONSOutput {
  items: Array_186;
}
export interface Object_640 {
  content: StringNull_54;
  created_at: String_1541;
  created_by: StringNull_55;
  id: String_1543;
  name: StringNull_56;
  prompt_id: String_1545;
  version_name: StringNull_57;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1547 = string;
/**
 * Filter prompts by ids
 */
export type Array_187 = String_1547[];
/**
 * Resolve mentions in the prompts
 */
export type Boolean_103 = boolean;
export type String_1548 = string;
/**
 * Exclude prompts by ids
 */
export type Array_188 = String_1548[];

export interface PROMPTS_LISTInput {
  ids?: Array_187;
  resolveMentions?: Boolean_103;
  excludeIds?: Array_188;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1549 = string;
export type String_1550 = string;
export type StringNull_58 = String_1551 | Null_160;
export type String_1551 = string;
export type Null_160 = null;
export type String_1552 = string;
export type BooleanNull_13 = Boolean_104 | Null_161;
export type Boolean_104 = boolean;
export type Null_161 = null;
export type String_1553 = string;
export type StringNull_59 = String_1554 | Null_162;
export type String_1554 = string;
export type Null_162 = null;
export type Array_189 = Object_641[];

export interface PROMPTS_LISTOutput {
  items: Array_189;
}
export interface Object_641 {
  id: String_1549;
  name: String_1550;
  description: StringNull_58;
  content: String_1552;
  readonly?: BooleanNull_13;
  created_at: String_1553;
  updated_at?: StringNull_59;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1555 = string;
export type String_1556 = string;

export interface PROMPTS_RENAME_VERSIONInput {
  id: String_1555;
  versionName: String_1556;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the version
 */
export type String_1557 = string;
/**
 * The id of the prompt
 */
export type String_1558 = string;
/**
 * The name of the version
 */
export type StringNull_60 = String_1559 | Null_163;
export type String_1559 = string;
export type Null_163 = null;
/**
 * The content of the version
 */
export type StringNull_61 = String_1560 | Null_164;
export type String_1560 = string;
export type Null_164 = null;
/**
 * The version name
 */
export type StringNull_62 = String_1561 | Null_165;
export type String_1561 = string;
export type Null_165 = null;
/**
 * The user who created the version
 */
export type StringNull_63 = String_1562 | Null_166;
export type String_1562 = string;
export type Null_166 = null;
/**
 * The date and time the version was created
 */
export type String_1563 = string;

export interface PROMPTS_RENAME_VERSIONOutput {
  id: String_1557;
  prompt_id: String_1558;
  name?: StringNull_60;
  content?: StringNull_61;
  version_name?: StringNull_62;
  created_by?: StringNull_63;
  created_at: String_1563;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1564 = string;
export type String_1565 = string;
export type String_1566 = string;
export type Null_167 = null;
export type String_1567 = string;
export type String_1568 = string;

export interface PROMPTS_UPDATEInput {
  id: String_1564;
  data: Object_642;
  versionName?: String_1568;
}
export interface Object_642 {
  name?: String_1565;
  description?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1566
      )
    | Null_167;
  content?: String_1567;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1569 = string;
export type String_1570 = string;
export type StringNull_64 = String_1571 | Null_168;
export type String_1571 = string;
export type Null_168 = null;
export type String_1572 = string;
export type BooleanNull_14 = Boolean_105 | Null_169;
export type Boolean_105 = boolean;
export type Null_169 = null;
export type String_1573 = string;
export type StringNull_65 = String_1574 | Null_170;
export type String_1574 = string;
export type Null_170 = null;

export interface PROMPTS_UPDATEOutput {
  id: String_1569;
  name: String_1570;
  description: StringNull_64;
  content: String_1572;
  readonly?: BooleanNull_14;
  created_at: String_1573;
  updated_at?: StringNull_65;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1575 = string;
/**
 * The file path within the branch
 */
export type String_1576 = string;
/**
 * Plain text string content
 */
export type String_1577 = string;
/**
 * Base64 encoded content
 */
export type String_1578 = string;
export type Number_137 = number;
/**
 * Array of bytes (0-255)
 */
export type Array_190 = Number_137[];
/**
 * Expected change time for conflict detection
 */
export type Number_138 = number;

export interface PUT_FILEInput {
  branch?: String_1575;
  path: String_1576;
  /**
   * The file content as plain string, base64 object, or array of bytes
   */
  content: String_1577 | Object_643 | Array_190;
  metadata?: Object_644;
  expectedCtime?: Number_138;
}
export interface Object_643 {
  base64: String_1578;
}
/**
 * Additional metadata key-value pairs
 */
export interface Object_644 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_106 = boolean;

export interface PUT_FILEOutput {
  conflict?: Boolean_106;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1579 = string;
/**
 * The file path within the branch
 */
export type String_1580 = string;
/**
 * Return format: 'base64' (default), 'byteArray', 'plainString', or 'json'
 */
export type String_1581 = "base64" | "byteArray" | "plainString" | "json";

export interface READ_FILEInput {
  branch?: String_1579;
  path: String_1580;
  format?: String_1581;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1582 = string;
export type Number_139 = number;
export type Number_140 = number;

export interface READ_FILEOutput {
  content?: unknown;
  address: String_1582;
  metadata: Object_645;
  mtime: Number_139;
  ctime: Number_140;
}
export interface Object_645 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1583 = string;

export interface REDEEM_VOUCHERInput {
  voucher: String_1583;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1584 = string;

export interface REDEEM_VOUCHEROutput {
  voucherId: String_1584;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1585 = string;
/**
 * Filter apps by scope name
 */
export type String_1586 = string;

export interface REGISTRY_LIST_APPSInput {
  search?: String_1585;
  scopeName?: String_1586;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1587 = string;
export type StringNull_66 = String_1588 | Null_171;
export type String_1588 = string;
export type Null_171 = null;
export type String_1589 = string;
export type String_1590 = string;
export type String_1591 = string;
export type String_1592 = string;
export type String_1593 = string;
export type String_1594 = string;
export type String_1595 = "HTTP";
export type String_1596 = string;
export type String_1597 = string;
export type String_1598 = "SSE";
export type String_1599 = string;
export type String_1600 = string;
export type String_1601 = string;
export type String_1602 = "Websocket";
export type String_1603 = string;
export type String_1604 = string;
export type String_1605 = "Deco";
export type String_1606 = string;
export type String_1607 = string;
export type String_1608 = "INNATE";
export type String_1609 = string;
export type String_1610 = string;
export type String_1611 = string;
export type String_1612 = string;
export type Boolean_107 = boolean;
export type String_1613 = string;
export type Boolean_108 = boolean;
export type String_1614 = string;
export type String_1615 = string;
export type String_1616 = string;
export type Array_192 = Object_653[];
export type Null_172 = null;
export type Array_191 = Object_646[];

export interface REGISTRY_LIST_APPSOutput {
  apps: Array_191;
}
export interface Object_646 {
  id: String_1587;
  workspace: StringNull_66;
  scopeId: String_1589;
  scopeName: String_1590;
  appName: String_1591;
  name: String_1592;
  description?: String_1593;
  icon?: String_1594;
  connection: Object_647 | Object_648 | Object_650 | Object_651 | Object_652;
  createdAt: String_1611;
  updatedAt: String_1612;
  unlisted: Boolean_107;
  friendlyName?: String_1613;
  verified?: Boolean_108;
  tools?: Array_192;
  metadata?: Object_657 | Null_172;
}
export interface Object_647 {
  type: String_1595;
  url: String_1596;
  token?: String_1597;
}
export interface Object_648 {
  type: String_1598;
  url: String_1599;
  token?: String_1600;
  headers?: Object_649;
}
export interface Object_649 {
  [k: string]: String_1601;
}
export interface Object_650 {
  type: String_1602;
  url: String_1603;
  token?: String_1604;
}
export interface Object_651 {
  type: String_1605;
  tenant: String_1606;
  token?: String_1607;
}
export interface Object_652 {
  type: String_1608;
  name: String_1609;
  workspace?: String_1610;
}
export interface Object_653 {
  id: String_1614;
  name: String_1615;
  description?: String_1616;
  inputSchema: Object_654;
  outputSchema?: Object_655;
  metadata?: Object_656;
}
export interface Object_654 {
  [k: string]: unknown;
}
export interface Object_655 {
  [k: string]: unknown;
}
export interface Object_656 {
  [k: string]: unknown;
}
export interface Object_657 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1617 = string;

export interface REGISTRY_LIST_PUBLISHED_APPSInput {
  search?: String_1617;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1618 = string;
export type StringNull_67 = String_1619 | Null_173;
export type String_1619 = string;
export type Null_173 = null;
export type String_1620 = string;
export type String_1621 = string;
export type String_1622 = string;
export type String_1623 = string;
export type String_1624 = string;
export type String_1625 = string;
export type String_1626 = "HTTP";
export type String_1627 = string;
export type String_1628 = string;
export type String_1629 = "SSE";
export type String_1630 = string;
export type String_1631 = string;
export type String_1632 = string;
export type String_1633 = "Websocket";
export type String_1634 = string;
export type String_1635 = string;
export type String_1636 = "Deco";
export type String_1637 = string;
export type String_1638 = string;
export type String_1639 = "INNATE";
export type String_1640 = string;
export type String_1641 = string;
export type String_1642 = string;
export type String_1643 = string;
export type Boolean_109 = boolean;
export type String_1644 = string;
export type Boolean_110 = boolean;
export type String_1645 = string;
export type String_1646 = string;
export type String_1647 = string;
export type Array_194 = Object_665[];
export type Null_174 = null;
export type Array_193 = Object_658[];

export interface REGISTRY_LIST_PUBLISHED_APPSOutput {
  apps: Array_193;
}
export interface Object_658 {
  id: String_1618;
  workspace: StringNull_67;
  scopeId: String_1620;
  scopeName: String_1621;
  appName: String_1622;
  name: String_1623;
  description?: String_1624;
  icon?: String_1625;
  connection: Object_659 | Object_660 | Object_662 | Object_663 | Object_664;
  createdAt: String_1642;
  updatedAt: String_1643;
  unlisted: Boolean_109;
  friendlyName?: String_1644;
  verified?: Boolean_110;
  tools?: Array_194;
  metadata?: Object_669 | Null_174;
}
export interface Object_659 {
  type: String_1626;
  url: String_1627;
  token?: String_1628;
}
export interface Object_660 {
  type: String_1629;
  url: String_1630;
  token?: String_1631;
  headers?: Object_661;
}
export interface Object_661 {
  [k: string]: String_1632;
}
export interface Object_662 {
  type: String_1633;
  url: String_1634;
  token?: String_1635;
}
export interface Object_663 {
  type: String_1636;
  tenant: String_1637;
  token?: String_1638;
}
export interface Object_664 {
  type: String_1639;
  name: String_1640;
  workspace?: String_1641;
}
export interface Object_665 {
  id: String_1645;
  name: String_1646;
  description?: String_1647;
  inputSchema: Object_666;
  outputSchema?: Object_667;
  metadata?: Object_668;
}
export interface Object_666 {
  [k: string]: unknown;
}
export interface Object_667 {
  [k: string]: unknown;
}
export interface Object_668 {
  [k: string]: unknown;
}
export interface Object_669 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter scopes by name
 */
export type String_1648 = string;

export interface REGISTRY_LIST_SCOPESInput {
  search?: String_1648;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1649 = string;
export type String_1650 = string;
export type StringNull_68 = String_1651 | Null_175;
export type String_1651 = string;
export type Null_175 = null;
export type StringNull_69 = String_1652 | Null_176;
export type String_1652 = string;
export type Null_176 = null;
export type String_1653 = string;
export type String_1654 = string;
export type Array_195 = Object_670[];

export interface REGISTRY_LIST_SCOPESOutput {
  scopes: Array_195;
}
export interface Object_670 {
  id: String_1649;
  scopeName: String_1650;
  workspace: StringNull_68;
  projectId: StringNull_69;
  createdAt: String_1653;
  updatedAt: String_1654;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The scope to publish to (defaults to team slug, automatically claimed on first use)
 */
export type String_1655 = string;
/**
 * The name of the app
 */
export type String_1656 = string;
/**
 * A friendly name for the app
 */
export type String_1657 = string;
/**
 * A description of the app
 */
export type String_1658 = string;
/**
 * URL to an icon for the app
 */
export type String_1659 = string;
export type String_1660 = "HTTP";
export type String_1661 = string;
export type String_1662 = string;
export type String_1663 = "SSE";
export type String_1664 = string;
export type String_1665 = string;
export type String_1666 = string;
export type String_1667 = "Websocket";
export type String_1668 = string;
export type String_1669 = string;
export type String_1670 = "Deco";
export type String_1671 = string;
export type String_1672 = string;
export type String_1673 = "INNATE";
export type String_1674 = string;
export type String_1675 = string;
/**
 * Whether the app should be unlisted
 */
export type Boolean_111 = boolean;

export interface REGISTRY_PUBLISH_APPInput {
  scopeName: String_1655;
  name: String_1656;
  friendlyName?: String_1657;
  description?: String_1658;
  icon?: String_1659;
  /**
   * The MCP connection configuration for the app
   */
  connection: Object_671 | Object_672 | Object_674 | Object_675 | Object_676;
  metadata?: Object_677;
  unlisted?: Boolean_111;
}
export interface Object_671 {
  type: String_1660;
  url: String_1661;
  token?: String_1662;
}
export interface Object_672 {
  type: String_1663;
  url: String_1664;
  token?: String_1665;
  headers?: Object_673;
}
export interface Object_673 {
  [k: string]: String_1666;
}
export interface Object_674 {
  type: String_1667;
  url: String_1668;
  token?: String_1669;
}
export interface Object_675 {
  type: String_1670;
  tenant: String_1671;
  token?: String_1672;
}
export interface Object_676 {
  type: String_1673;
  name: String_1674;
  workspace?: String_1675;
}
/**
 * Metadata for the app
 */
export interface Object_677 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_PUBLISH_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1676 = string;
export type String_1677 = string;
export type Number_141 = number;
export type String_1678 = string;
export type Array_197 = Object_679[];
export type Array_196 = Object_678[];

export interface TEAM_MEMBERS_INVITEInput {
  teamId: String_1676;
  invitees: Array_196;
}
export interface Object_678 {
  email: String_1677;
  roles: Array_197;
}
export interface Object_679 {
  id: Number_141;
  name: String_1678;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the view
 */
export type String_1679 = string;
/**
 * Display title for the view
 */
export type String_1680 = string;
/**
 * Icon identifier for the view
 */
export type String_1681 = string;
/**
 * Type of view (custom for views, resource for resources)
 */
export type String_1682 = "custom" | "resource";
/**
 * Integration-specific view name
 */
export type String_1683 = string;
export type String_1684 = string;
/**
 * Optional list of tool names to enable for this view
 */
export type Array_198 = String_1684[];
export type String_1685 = string;
/**
 * Optional list of textual rules to persist in context
 */
export type Array_199 = String_1685[];
/**
 * Integration ID
 */
export type String_1686 = string;
/**
 * Type of resource (for resources only)
 */
export type String_1687 = string;

export interface TEAMS_ADD_VIEWInput {
  view: Object_680;
}
/**
 * View or resource configuration to add
 */
export interface Object_680 {
  id: String_1679;
  title: String_1680;
  icon: String_1681;
  type: String_1682;
  name: String_1683;
  tools?: Array_198;
  rules?: Array_199;
  integration: Object_681;
  resourceType?: String_1687;
}
export interface Object_681 {
  id: String_1686;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_ADD_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the view or resource to remove
 */
export type String_1688 = string;

export interface TEAMS_REMOVE_VIEWInput {
  viewId: String_1688;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_REMOVE_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1689 = string;

export interface THREADS_GETInput {
  id: String_1689;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1690 = string;

export interface THREADS_GET_MESSAGESInput {
  id: String_1690;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GET_MESSAGESOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_142 = number;
export type String_1691 = string;
export type String_1692 = string;
export type String_1693 =
  | "createdAt_desc"
  | "createdAt_asc"
  | "updatedAt_desc"
  | "updatedAt_asc";
export type String_1694 = string;

export interface THREADS_LISTInput {
  limit?: Number_142;
  agentId?: String_1691;
  resourceId?: String_1692;
  orderBy?: String_1693;
  cursor?: String_1694;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1695 = string;

export interface THREADS_UPDATE_METADATAInput {
  threadId: String_1695;
  metadata: Object_682;
}
export interface Object_682 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1696 = string;
export type String_1697 = string;

export interface THREADS_UPDATE_TITLEInput {
  threadId: String_1696;
  title: String_1697;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_TITLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1698 = string;

export interface TRIGGERS_ACTIVATEInput {
  id: String_1698;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_ACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The title of the trigger
 */
export type String_1699 = string;
/**
 * The description of the trigger
 */
export type String_1700 = string;
export type String_1701 = string;
export type String_1702 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1703 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1704 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1705 = string;
export type String_1706 = "user" | "assistant" | "system";
export type String_1707 = string;
/**
 * The messages to send to the LLM
 */
export type Array_200 = Object_685[];
/**
 * The URL of the webhook
 */
export type String_1708 = string;
/**
 * The integration ID
 */
export type String_1709 = string;
/**
 * The tool name
 */
export type String_1710 = string;
/**
 * The title of the trigger
 */
export type String_1711 = string;
/**
 * The description of the trigger
 */
export type String_1712 = string;
export type String_1713 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1714 = string;
/**
 * The passphrase for the webhook
 */
export type String_1715 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1716 = string;

export interface TRIGGERS_CREATEInput {
  trigger: (Object_683 | Object_686) | (Object_689 | Object_691);
}
export interface Object_683 {
  title: String_1699;
  description?: String_1700;
  cronExp: String_1701;
  type: String_1702;
  agentId: String_1703;
  prompt: Object_684;
  url?: String_1708;
}
export interface Object_684 {
  threadId?: String_1704;
  resourceId?: String_1705;
  messages: Array_200;
}
export interface Object_685 {
  role: String_1706;
  content: String_1707;
}
export interface Object_686 {
  title: String_1699;
  description?: String_1700;
  cronExp: String_1701;
  type: String_1702;
  callTool: Object_687;
}
export interface Object_687 {
  integrationId: String_1709;
  toolName: String_1710;
  arguments?: Object_688;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_688 {
  [k: string]: unknown;
}
export interface Object_689 {
  title: String_1711;
  description?: String_1712;
  type: String_1713;
  url?: String_1714;
  passphrase?: String_1715;
  agentId: String_1716;
  schema?: Object_690;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_690 {
  [k: string]: unknown;
}
export interface Object_691 {
  title: String_1711;
  description?: String_1712;
  type: String_1713;
  url?: String_1714;
  passphrase?: String_1715;
  callTool: Object_687;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_WEBHOOKInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1717 = string;
export type String_1718 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1719 = string;
/**
 * The description of the trigger
 */
export type String_1720 = string;
export type String_1721 = string;
export type String_1722 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1723 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1724 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1725 = string;
export type String_1726 = "user" | "assistant" | "system";
export type String_1727 = string;
/**
 * The messages to send to the LLM
 */
export type Array_201 = Object_694[];
/**
 * The URL of the webhook
 */
export type String_1728 = string;
/**
 * The integration ID
 */
export type String_1729 = string;
/**
 * The tool name
 */
export type String_1730 = string;
/**
 * The title of the trigger
 */
export type String_1731 = string;
/**
 * The description of the trigger
 */
export type String_1732 = string;
export type String_1733 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1734 = string;
/**
 * The passphrase for the webhook
 */
export type String_1735 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1736 = string;
/**
 * The creation date
 */
export type String_1737 = string;
/**
 * The update date
 */
export type String_1738 = string;
/**
 * The user ID
 */
export type String_1739 = string;
/**
 * The user name
 */
export type String_1740 = string;
/**
 * The user email
 */
export type String_1741 = string;
/**
 * The user avatar
 */
export type String_1742 = string;
/**
 * The trigger status
 */
export type Boolean_112 = boolean;
/**
 * The workspace ID
 */
export type StringNull_70 = String_1743 | Null_177;
export type String_1743 = string;
export type Null_177 = null;

export interface TRIGGERS_CREATE_WEBHOOKOutput {
  id: String_1717;
  type: String_1718;
  data: (Object_692 | Object_695) | (Object_698 | Object_700);
  createdAt: String_1737;
  updatedAt: String_1738;
  user: Object_701;
  active?: Boolean_112;
  workspace: StringNull_70;
}
export interface Object_692 {
  title: String_1719;
  description?: String_1720;
  cronExp: String_1721;
  type: String_1722;
  agentId: String_1723;
  prompt: Object_693;
  url?: String_1728;
}
export interface Object_693 {
  threadId?: String_1724;
  resourceId?: String_1725;
  messages: Array_201;
}
export interface Object_694 {
  role: String_1726;
  content: String_1727;
}
export interface Object_695 {
  title: String_1719;
  description?: String_1720;
  cronExp: String_1721;
  type: String_1722;
  callTool: Object_696;
}
export interface Object_696 {
  integrationId: String_1729;
  toolName: String_1730;
  arguments?: Object_697;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_697 {
  [k: string]: unknown;
}
export interface Object_698 {
  title: String_1731;
  description?: String_1732;
  type: String_1733;
  url?: String_1734;
  passphrase?: String_1735;
  agentId: String_1736;
  schema?: Object_699;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_699 {
  [k: string]: unknown;
}
export interface Object_700 {
  title: String_1731;
  description?: String_1732;
  type: String_1733;
  url?: String_1734;
  passphrase?: String_1735;
  callTool: Object_696;
}
export interface Object_701 {
  id: String_1739;
  metadata: Object_702;
}
export interface Object_702 {
  full_name: String_1740;
  email: String_1741;
  avatar_url: String_1742;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1744 = string;

export interface TRIGGERS_DEACTIVATEInput {
  id: String_1744;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_DEACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1745 = string;

export interface TRIGGERS_DELETEInput {
  id: String_1745;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1746 = string;

export interface TRIGGERS_DELETEOutput {
  id: String_1746;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1747 = string;

export interface TRIGGERS_GETInput {
  id: String_1747;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1748 = string;

export interface TRIGGERS_GET_WEBHOOK_URLInput {
  id: String_1748;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL of the webhook trigger
 */
export type String_1749 = string;

export interface TRIGGERS_GET_WEBHOOK_URLOutput {
  url?: String_1749;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1750 = string;

export interface TRIGGERS_LISTInput {
  agentId?: String_1750;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1751 = string;
export type String_1752 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1753 = string;
/**
 * The description of the trigger
 */
export type String_1754 = string;
export type String_1755 = string;
export type String_1756 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1757 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1758 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1759 = string;
export type String_1760 = "user" | "assistant" | "system";
export type String_1761 = string;
/**
 * The messages to send to the LLM
 */
export type Array_203 = Object_706[];
/**
 * The URL of the webhook
 */
export type String_1762 = string;
/**
 * The integration ID
 */
export type String_1763 = string;
/**
 * The tool name
 */
export type String_1764 = string;
/**
 * The title of the trigger
 */
export type String_1765 = string;
/**
 * The description of the trigger
 */
export type String_1766 = string;
export type String_1767 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1768 = string;
/**
 * The passphrase for the webhook
 */
export type String_1769 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1770 = string;
/**
 * The creation date
 */
export type String_1771 = string;
/**
 * The update date
 */
export type String_1772 = string;
/**
 * The user ID
 */
export type String_1773 = string;
/**
 * The user name
 */
export type String_1774 = string;
/**
 * The user email
 */
export type String_1775 = string;
/**
 * The user avatar
 */
export type String_1776 = string;
/**
 * The trigger status
 */
export type Boolean_113 = boolean;
/**
 * The workspace ID
 */
export type StringNull_71 = String_1777 | Null_178;
export type String_1777 = string;
export type Null_178 = null;
export type Array_202 = Object_703[];

export interface TRIGGERS_LISTOutput {
  triggers: Array_202;
}
export interface Object_703 {
  id: String_1751;
  type: String_1752;
  data: (Object_704 | Object_707) | (Object_710 | Object_712);
  createdAt: String_1771;
  updatedAt: String_1772;
  user: Object_713;
  active?: Boolean_113;
  workspace: StringNull_71;
}
export interface Object_704 {
  title: String_1753;
  description?: String_1754;
  cronExp: String_1755;
  type: String_1756;
  agentId: String_1757;
  prompt: Object_705;
  url?: String_1762;
}
export interface Object_705 {
  threadId?: String_1758;
  resourceId?: String_1759;
  messages: Array_203;
}
export interface Object_706 {
  role: String_1760;
  content: String_1761;
}
export interface Object_707 {
  title: String_1753;
  description?: String_1754;
  cronExp: String_1755;
  type: String_1756;
  callTool: Object_708;
}
export interface Object_708 {
  integrationId: String_1763;
  toolName: String_1764;
  arguments?: Object_709;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_709 {
  [k: string]: unknown;
}
export interface Object_710 {
  title: String_1765;
  description?: String_1766;
  type: String_1767;
  url?: String_1768;
  passphrase?: String_1769;
  agentId: String_1770;
  schema?: Object_711;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_711 {
  [k: string]: unknown;
}
export interface Object_712 {
  title: String_1765;
  description?: String_1766;
  type: String_1767;
  url?: String_1768;
  passphrase?: String_1769;
  callTool: Object_708;
}
export interface Object_713 {
  id: String_1773;
  metadata: Object_714;
}
export interface Object_714 {
  full_name: String_1774;
  email: String_1775;
  avatar_url: String_1776;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1778 = string;
/**
 * The title of the trigger
 */
export type String_1779 = string;
/**
 * The description of the trigger
 */
export type String_1780 = string;
export type String_1781 = string;
export type String_1782 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1783 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1784 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1785 = string;
export type String_1786 = "user" | "assistant" | "system";
export type String_1787 = string;
/**
 * The messages to send to the LLM
 */
export type Array_204 = Object_717[];
/**
 * The URL of the webhook
 */
export type String_1788 = string;
/**
 * The integration ID
 */
export type String_1789 = string;
/**
 * The tool name
 */
export type String_1790 = string;
/**
 * The title of the trigger
 */
export type String_1791 = string;
/**
 * The description of the trigger
 */
export type String_1792 = string;
export type String_1793 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1794 = string;
/**
 * The passphrase for the webhook
 */
export type String_1795 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1796 = string;

export interface TRIGGERS_UPDATEInput {
  id: String_1778;
  data: (Object_715 | Object_718) | (Object_721 | Object_723);
}
export interface Object_715 {
  title: String_1779;
  description?: String_1780;
  cronExp: String_1781;
  type: String_1782;
  agentId: String_1783;
  prompt: Object_716;
  url?: String_1788;
}
export interface Object_716 {
  threadId?: String_1784;
  resourceId?: String_1785;
  messages: Array_204;
}
export interface Object_717 {
  role: String_1786;
  content: String_1787;
}
export interface Object_718 {
  title: String_1779;
  description?: String_1780;
  cronExp: String_1781;
  type: String_1782;
  callTool: Object_719;
}
export interface Object_719 {
  integrationId: String_1789;
  toolName: String_1790;
  arguments?: Object_720;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_720 {
  [k: string]: unknown;
}
export interface Object_721 {
  title: String_1791;
  description?: String_1792;
  type: String_1793;
  url?: String_1794;
  passphrase?: String_1795;
  agentId: String_1796;
  schema?: Object_722;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_722 {
  [k: string]: unknown;
}
export interface Object_723 {
  title: String_1791;
  description?: String_1792;
  type: String_1793;
  url?: String_1794;
  passphrase?: String_1795;
  callTool: Object_719;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to fetch content from
 */
export type String_1797 = string;
/**
 * The HTTP method to use for the request
 */
export type String_1798 = "GET" | "PUT" | "POST" | "DELETE" | "PATCH" | "HEAD";
export type String_1799 = string;
/**
 * How to parse the response body: 'text' returns the raw text, 'json' parses and returns JSON
 */
export type String_1800 = "text" | "json";
/**
 * Request timeout in milliseconds (1000-30000)
 */
export type Integer_106 = number;

export interface HTTP_FETCHInput {
  url: String_1797;
  method?: String_1798;
  headers?: Object_724;
  /**
   * Optional body to send with the request
   */
  body?: {
    [k: string]: unknown;
  };
  responseType?: String_1800;
  timeout?: Integer_106;
}
/**
 * Optional headers to include with the request
 */
export interface Object_724 {
  [k: string]: String_1799;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1801 = string;
/**
 * The HTTP status code of the response
 */
export type Number_143 = number;
/**
 * The HTTP status text of the response
 */
export type String_1802 = string;
export type String_1803 = string;
/**
 * Whether the request was successful (status in 200-299 range)
 */
export type Boolean_114 = boolean;

export interface HTTP_FETCHOutput {
  /**
   * The response body (string for text, parsed object for JSON)
   */
  body?: String_1801;
  status: Number_143;
  statusText: String_1802;
  headers: Object_725;
  ok: Boolean_114;
}
/**
 * The response headers
 */
export interface Object_725 {
  [k: string]: String_1803;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1804 = string;
export type String_1805 = "HTTP";
export type String_1806 = string;
export type String_1807 = string;
export type String_1808 = "SSE";
export type String_1809 = string;
export type String_1810 = string;
export type String_1811 = string;
export type String_1812 = "Websocket";
export type String_1813 = string;
export type String_1814 = string;
export type String_1815 = "Deco";
export type String_1816 = string;
export type String_1817 = string;
export type String_1818 = "INNATE";
export type String_1819 = string;
export type String_1820 = string;
export type String_1821 = string;
export type Integer_107 = number;
export type String_1822 = string;

export interface INTEGRATIONS_CALL_TOOLInput_2 {
  id?: String_1804;
  connection?: Object_726 | Object_727 | Object_729 | Object_730 | Object_731;
  params: Object_732;
}
export interface Object_726 {
  type: String_1805;
  url: String_1806;
  token?: String_1807;
}
export interface Object_727 {
  type: String_1808;
  url: String_1809;
  token?: String_1810;
  headers?: Object_728;
}
export interface Object_728 {
  [k: string]: String_1811;
}
export interface Object_729 {
  type: String_1812;
  url: String_1813;
  token?: String_1814;
}
export interface Object_730 {
  type: String_1815;
  tenant: String_1816;
  token?: String_1817;
}
export interface Object_731 {
  type: String_1818;
  name: String_1819;
  workspace?: String_1820;
}
export interface Object_732 {
  _meta?: Object_733;
  name: String_1822;
  arguments?: Object_734;
  [k: string]: unknown;
}
export interface Object_733 {
  progressToken?: String_1821 | Integer_107;
  [k: string]: unknown;
}
export interface Object_734 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_2 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1823 = "HTTP";
export type String_1824 = string;
export type String_1825 = string;
export type String_1826 = "SSE";
export type String_1827 = string;
export type String_1828 = string;
export type String_1829 = string;
export type String_1830 = "Websocket";
export type String_1831 = string;
export type String_1832 = string;
export type String_1833 = "Deco";
export type String_1834 = string;
export type String_1835 = string;
export type String_1836 = "INNATE";
export type String_1837 = string;
export type String_1838 = string;
/**
 * Whether to ignore the cache when listing tools
 */
export type Boolean_115 = boolean;

export interface INTEGRATIONS_LIST_TOOLSInput {
  connection: Object_735 | Object_736 | Object_738 | Object_739 | Object_740;
  ignoreCache?: Boolean_115;
}
export interface Object_735 {
  type: String_1823;
  url: String_1824;
  token?: String_1825;
}
export interface Object_736 {
  type: String_1826;
  url: String_1827;
  token?: String_1828;
  headers?: Object_737;
}
export interface Object_737 {
  [k: string]: String_1829;
}
export interface Object_738 {
  type: String_1830;
  url: String_1831;
  token?: String_1832;
}
export interface Object_739 {
  type: String_1833;
  tenant: String_1834;
  token?: String_1835;
}
export interface Object_740 {
  type: String_1836;
  name: String_1837;
  workspace?: String_1838;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_LIST_TOOLSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MY_INVITES_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_205 = unknown[];

export interface MY_INVITES_LISTOutput {
  items: Array_205;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull_72 = String_1839 | Null_179;
export type String_1839 = string;
export type Null_179 = null;
export type String_1840 = string;
export type NumberNull_7 = Number_144 | Null_180;
export type Number_144 = number;
export type Null_180 = null;
export type BooleanNull_15 = Boolean_116 | Null_181;
export type Boolean_116 = boolean;
export type Null_181 = null;
export type StringNull_73 = String_1841 | Null_182;
export type String_1841 = string;
export type Null_182 = null;

export interface PROFILES_UPDATEInput {
  name?: StringNull_72;
  email?: String_1840;
  deco_user_id?: NumberNull_7;
  is_new_user?: BooleanNull_15;
  phone?: StringNull_73;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1842 = string;
export type String_1843 = string;

export interface PROJECT_ACTIVITY_REGISTERInput {
  org: String_1842;
  project: String_1843;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECT_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The organization slug
 */
export type String_1844 = string;
/**
 * The project slug (URL-friendly identifier)
 */
export type String_1845 = string;
/**
 * The project title
 */
export type String_1846 = string;
/**
 * The project description
 */
export type String_1847 = string;
/**
 * The project icon URL or path
 */
export type String_1848 = string;

export interface PROJECTS_CREATEInput {
  org: String_1844;
  slug: String_1845;
  title: String_1846;
  description?: String_1847;
  icon?: String_1848;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1849 = string;
export type String_1850 = string;
export type String_1851 = string;
export type StringNull_74 = String_1852 | Null_183;
export type String_1852 = string;
export type Null_183 = null;
export type Number_145 = number;
export type String_1853 = string;
export type StringNull_75 = String_1854 | Null_184;
export type String_1854 = string;
export type Null_184 = null;

export interface PROJECTS_CREATEOutput {
  id: String_1849;
  title: String_1850;
  slug: String_1851;
  avatar_url: StringNull_74;
  org: Object_741;
}
export interface Object_741 {
  id: Number_145;
  slug: String_1853;
  avatar_url?: StringNull_75;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1855 = string;

export interface PROJECTS_LISTInput {
  org: String_1855;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECTS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Integer_108 = number;

export interface PROJECTS_RECENTInput {
  limit?: Integer_108;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1856 = string;
export type String_1857 = string;
export type String_1858 = string;
export type StringNull_76 = String_1859 | Null_185;
export type String_1859 = string;
export type Null_185 = null;
export type Number_146 = number;
export type String_1860 = string;
export type StringNull_77 = String_1861 | Null_186;
export type String_1861 = string;
export type Null_186 = null;
export type String_1862 = string;
export type Array_206 = Object_742[];

export interface PROJECTS_RECENTOutput {
  items: Array_206;
}
export interface Object_742 {
  id: String_1856;
  title: String_1857;
  slug: String_1858;
  avatar_url: StringNull_76;
  org: Object_743;
  last_accessed_at?: String_1862;
}
export interface Object_743 {
  id: Number_146;
  slug: String_1860;
  avatar_url?: StringNull_77;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The organization slug
 */
export type String_1863 = string;
/**
 * The project slug
 */
export type String_1864 = string;
/**
 * The new title for the project
 */
export type String_1865 = string;

export interface PROJECTS_UPDATEInput {
  org: String_1863;
  project: String_1864;
  data: Object_744;
}
export interface Object_744 {
  title?: String_1865;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1866 = string;
export type String_1867 = string;
export type String_1868 = string;
export type StringNull_78 = String_1869 | Null_187;
export type String_1869 = string;
export type Null_187 = null;
export type Number_147 = number;
export type String_1870 = string;
export type StringNull_79 = String_1871 | Null_188;
export type String_1871 = string;
export type Null_188 = null;

export interface PROJECTS_UPDATEOutput {
  id: String_1866;
  title: String_1867;
  slug: String_1868;
  avatar_url: StringNull_78;
  org: Object_745;
}
export interface Object_745 {
  id: Number_147;
  slug: String_1870;
  avatar_url?: StringNull_79;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the app to get
 */
export type String_1872 = string;
/**
 * The id of the app to get
 */
export type String_1873 = string;

export interface REGISTRY_GET_APPInput {
  name?: String_1872;
  id?: String_1873;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_GET_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1874 = string;

export interface TEAM_INVITE_ACCEPTInput {
  id: String_1874;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_ACCEPTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1875 = string;

export interface TEAM_INVITE_DELETEInput {
  id: String_1875;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_148 = number;

export interface TEAM_MEMBER_ACTIVITY_REGISTERInput {
  teamId: Number_148;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBER_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_149 = number;
export type Boolean_117 = boolean;

export interface TEAM_MEMBERS_GETInput {
  teamId: Number_149;
  withActivity?: Boolean_117;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1876 = string;
export type String_1877 = string;
export type Number_150 = number;
export type String_1878 = string;
export type Array_208 = Object_747[];
export type Array_207 = Object_746[];

export interface TEAM_MEMBERS_INVITEInput_1 {
  teamId: String_1876;
  invitees: Array_207;
}
export interface Object_746 {
  email: String_1877;
  roles: Array_208;
}
export interface Object_747 {
  id: Number_150;
  name: String_1878;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_151 = number;
export type Number_152 = number;

export interface TEAM_MEMBERS_REMOVEInput {
  teamId: Number_151;
  memberId: Number_152;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_REMOVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_153 = number;
export type Number_154 = number;
export type Boolean_118 = boolean;

export interface TEAM_MEMBERS_UPDATEInput {
  teamId: Number_153;
  memberId: Number_154;
  data: Object_748;
}
export interface Object_748 {
  admin?: Boolean_118;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_155 = number;
export type String_1879 = string;
export type Number_156 = number;
export type String_1880 = "grant" | "revoke";

export interface TEAM_MEMBERS_UPDATE_ROLEInput {
  teamId: Number_155;
  userId: String_1879;
  roleId: Number_156;
  action: String_1880;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATE_ROLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1881 = string;
export type String_1882 = string;
export type String_1883 = "Bug" | "Idea";
export type String_1884 = string;
export type String_1885 = string;
export type String_1886 = string;

export interface TEAM_REPORT_ISSUE_CREATEInput {
  orgSlug?: String_1881;
  projectSlug?: String_1882;
  type: String_1883;
  content: String_1884;
  url?: String_1885;
  path?: String_1886;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_REPORT_ISSUE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_157 = number;
export type String_1887 = string;
export type String_1888 = string;
export type String_1889 = string;
export type String_1890 = "allow" | "deny";
export type String_1891 = string;
export type Array_209 = Object_751[];
export type String_1892 = string;
export type Array_210 = String_1892[];
export type String_1893 = string;
export type String_1894 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_211 = Object_752[];

export interface TEAM_ROLE_CREATEInput {
  teamId: Number_157;
  roleData: Object_749;
}
export interface Object_749 {
  name: String_1887;
  description?: String_1888;
  tools: Object_750;
  agents?: Array_210;
  members?: Array_211;
}
export interface Object_750 {
  [k: string]: Array_209;
}
export interface Object_751 {
  toolName: String_1889;
  effect: String_1890;
  policyId?: String_1891;
}
export interface Object_752 {
  user_id: String_1893;
  action: String_1894;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_158 = number;
export type Number_159 = number;

export interface TEAM_ROLE_DELETEInput {
  teamId: Number_158;
  roleId: Number_159;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_160 = number;
export type Number_161 = number;

export interface TEAM_ROLE_GETInput {
  teamId: Number_160;
  roleId: Number_161;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_162 = number;
export type Number_163 = number;
export type String_1895 = string;
export type String_1896 = string;
export type String_1897 = string;
export type String_1898 = "allow" | "deny";
export type String_1899 = string;
export type Array_212 = Object_755[];
export type String_1900 = string;
export type Array_213 = String_1900[];
export type String_1901 = string;
export type String_1902 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_214 = Object_756[];

export interface TEAM_ROLE_UPDATEInput {
  teamId: Number_162;
  roleId: Number_163;
  roleData: Object_753;
}
export interface Object_753 {
  name: String_1895;
  description?: String_1896;
  tools: Object_754;
  agents?: Array_213;
  members?: Array_214;
}
export interface Object_754 {
  [k: string]: Array_212;
}
export interface Object_755 {
  toolName: String_1897;
  effect: String_1898;
  policyId?: String_1899;
}
export interface Object_756 {
  user_id: String_1901;
  action: String_1902;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_164 = number;

export interface TEAM_ROLES_LISTInput {
  teamId: Number_164;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_215 = unknown[];

export interface TEAM_ROLES_LISTOutput {
  items: Array_215;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1903 = string;
export type String_1904 = string;

export interface TEAMS_CREATEInput {
  name: String_1903;
  slug?: String_1904;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_165 = number;

export interface TEAMS_DELETEInput {
  teamId: Number_165;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1905 = string;

export interface TEAMS_GETInput {
  slug: String_1905;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1906 = string;

export interface TEAMS_GET_THEMEInput {
  slug: String_1906;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GET_THEMEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_216 = unknown[];

export interface TEAMS_LISTOutput {
  items: Array_216;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the team to update
 */
export type Number_166 = number;
/**
 * Team name
 */
export type String_1907 = string;
/**
 * Team URL slug
 */
export type String_1908 = string;
/**
 * Main background color of the application (OKLCH/hex format)
 */
export type String_1909 = string;
/**
 * Main text color on background (OKLCH/hex format)
 */
export type String_1910 = string;
/**
 * Background color for cards and panels (OKLCH/hex format)
 */
export type String_1911 = string;
/**
 * Text color on cards and panels (OKLCH/hex format)
 */
export type String_1912 = string;
/**
 * Background color for popovers and dropdowns (OKLCH/hex format)
 */
export type String_1913 = string;
/**
 * Text color in popovers and dropdowns (OKLCH/hex format)
 */
export type String_1914 = string;
/**
 * Primary brand color for buttons and highlights (OKLCH/hex format)
 */
export type String_1915 = string;
/**
 * Text color on primary elements (OKLCH/hex format)
 */
export type String_1916 = string;
/**
 * Lighter variant of primary color (OKLCH/hex format)
 */
export type String_1917 = string;
/**
 * Darker variant of primary color (OKLCH/hex format)
 */
export type String_1918 = string;
/**
 * Secondary color for less prominent elements (OKLCH/hex format)
 */
export type String_1919 = string;
/**
 * Text color on secondary elements (OKLCH/hex format)
 */
export type String_1920 = string;
/**
 * Muted background color for subtle elements (OKLCH/hex format)
 */
export type String_1921 = string;
/**
 * Muted text color for secondary text (OKLCH/hex format)
 */
export type String_1922 = string;
/**
 * Accent color for interactive elements (OKLCH/hex format)
 */
export type String_1923 = string;
/**
 * Text color on accent elements (OKLCH/hex format)
 */
export type String_1924 = string;
/**
 * Color for destructive actions and errors (OKLCH/hex format)
 */
export type String_1925 = string;
/**
 * Text color on destructive elements (OKLCH/hex format)
 */
export type String_1926 = string;
/**
 * Color for success states and positive actions (OKLCH/hex format)
 */
export type String_1927 = string;
/**
 * Text color on success elements (OKLCH/hex format)
 */
export type String_1928 = string;
/**
 * Color for warning states and caution indicators (OKLCH/hex format)
 */
export type String_1929 = string;
/**
 * Text color on warning elements (OKLCH/hex format)
 */
export type String_1930 = string;
/**
 * Border color for elements (OKLCH/hex format)
 */
export type String_1931 = string;
/**
 * Border color for input fields (OKLCH/hex format)
 */
export type String_1932 = string;
/**
 * Background color for sidebar navigation (OKLCH/hex format)
 */
export type String_1933 = string;
/**
 * Text color in sidebar navigation (OKLCH/hex format)
 */
export type String_1934 = string;
/**
 * Accent background color for sidebar elements (OKLCH/hex format)
 */
export type String_1935 = string;
/**
 * Text color on sidebar accent elements (OKLCH/hex format)
 */
export type String_1936 = string;
/**
 * Border color for sidebar elements (OKLCH/hex format)
 */
export type String_1937 = string;
/**
 * Focus ring color for sidebar elements (OKLCH/hex format)
 */
export type String_1938 = string;
/**
 * Background color for splash screen animation (OKLCH/hex format)
 */
export type String_1939 = string;
/**
 * URL to team avatar/logo image
 */
export type String_1940 = string;
/**
 * Use a Google Fonts font
 */
export type String_1941 = "Google Fonts";
/**
 * Name of the Google Font (e.g., 'Inter', 'Roboto', 'Open Sans')
 */
export type String_1942 = string;
/**
 * Use a custom uploaded font
 */
export type String_1943 = "Custom";
/**
 * Display name for the custom font
 */
export type String_1944 = string;
/**
 * URL to the custom font file
 */
export type String_1945 = string;

export interface TEAMS_UPDATEInput {
  id: Number_166;
  data: Object_757;
}
export interface Object_757 {
  name?: String_1907;
  slug?: String_1908;
  theme?: Object_758;
}
/**
 * Theme configuration for the workspace. Only include the properties you want to change - existing values will be preserved.
 */
export interface Object_758 {
  variables?: Object_759;
  picture?: String_1940;
  /**
   * Font configuration for the workspace
   */
  font?: Object_760 | Object_761;
}
/**
 * CSS custom properties for theme colors. Use OKLCH format (preferred) or hex colors.
 */
export interface Object_759 {
  "--background"?: String_1909;
  "--foreground"?: String_1910;
  "--card"?: String_1911;
  "--card-foreground"?: String_1912;
  "--popover"?: String_1913;
  "--popover-foreground"?: String_1914;
  "--primary"?: String_1915;
  "--primary-foreground"?: String_1916;
  "--primary-light"?: String_1917;
  "--primary-dark"?: String_1918;
  "--secondary"?: String_1919;
  "--secondary-foreground"?: String_1920;
  "--muted"?: String_1921;
  "--muted-foreground"?: String_1922;
  "--accent"?: String_1923;
  "--accent-foreground"?: String_1924;
  "--destructive"?: String_1925;
  "--destructive-foreground"?: String_1926;
  "--success"?: String_1927;
  "--success-foreground"?: String_1928;
  "--warning"?: String_1929;
  "--warning-foreground"?: String_1930;
  "--border"?: String_1931;
  "--input"?: String_1932;
  "--sidebar"?: String_1933;
  "--sidebar-foreground"?: String_1934;
  "--sidebar-accent"?: String_1935;
  "--sidebar-accent-foreground"?: String_1936;
  "--sidebar-border"?: String_1937;
  "--sidebar-ring"?: String_1938;
  "--splash"?: String_1939;
}
export interface Object_760 {
  type: String_1941;
  name: String_1942;
}
export interface Object_761 {
  type: String_1943;
  name: String_1944;
  url: String_1945;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_UPDATEOutput {}

import { z } from "zod";

export type Mcp<T extends Record<string, (input: any) => Promise<any>>> = {
  [K in keyof T]: ((
    input: Parameters<T[K]>[0],
  ) => Promise<Awaited<ReturnType<T[K]>>>) & {
    asTool: () => Promise<{
      inputSchema: z.ZodType<Parameters<T[K]>[0]>;
      outputSchema?: z.ZodType<Awaited<ReturnType<T[K]>>>;
      description: string;
      id: string;
      execute: (
        input: Parameters<T[K]>[0],
      ) => Promise<Awaited<ReturnType<T[K]>>>;
    }>;
  };
};

export const StateSchema = z.object({
  TOOLS: z.object({
    value: z.string(),
    __type: z.literal("@deco/tools").default("@deco/tools"),
  }),
  WORKFLOWS_MANAGEMENT: z.object({
    value: z.string(),
    __type: z.literal("@deco/workflows").default("@deco/workflows"),
  }),
  AI_GATEWAY: z.object({
    value: z.string(),
    __type: z.literal("@deco/ai-gateway").default("@deco/ai-gateway"),
  }),
  INTEGRATIONS: z.object({
    value: z.string(),
    __type: z.literal("@deco/integrations").default("@deco/integrations"),
  }),
});

export interface Env {
  DECO_CHAT_WORKSPACE: string;
  DECO_CHAT_API_JWT_PUBLIC_KEY: string;
  TOOLS: Mcp<{
    /**
     * Create an executable tool with JSON Schema validation.
     * ## Tool Execute Function
     * Tools must export a default async function:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: validated against tool's inputSchema
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return: must match tool's outputSchema
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * **Key Points:**
     * - **inputSchema** defines the `input` parameter type and validation
     * - **outputSchema** defines the return value type and validation
     * - **execute** is the function code as an inline ES module string
     * - **dependencies** (optional): Array of `{ integrationId }` for ctx.env calls
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - System will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition including metadata, schemas, and execute code.
     * Returns:
     * - Tool metadata (name, description)
     * - Input/output JSON schemas
     * - Execute code (inline ES module)
     * - Dependencies (integration IDs used in ctx.env calls)
     * The tool's execute code uses `ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args)` to call integrations.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update a tool's metadata, schemas, or execution code.
     * ## Execute Function API
     * ```javascript
     * export default async function(input, ctx) {
     * // Call integration tools
     * const result = await ctx.env['i:integration'].tool_name({ args });
     * return { output: result };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain function signature** - Keep `async function(input, ctx)` format
     * 2. **Match schemas** - Input/output must match updated schemas
     * 3. **Use placeholder integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` for any ctx.env calls
     * 5. **Test thoroughly** - Input/output are validated automatically
     * **Integration IDs:**
     * - Use placeholders like `i:slack` if you don't know the ID
     * - Validation errors will list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
  }>;
  WORKFLOWS_MANAGEMENT: Mcp<{
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Create a workflow with sequential code steps.
     * ## Execution Pattern
     * Workflows consist of sequential code steps where each step can reference previous step outputs using @ syntax:
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** in the input object to reference previous step outputs or workflow input
     * 3. **@ References** are resolved before step execution
     * 4. **Final step output** must match the workflow's output schema
     * ## Step Structure
     * Each step must define:
     * ```json
     * {
     * "name": "send-notification",
     * "description": "Send a notification using the Slack API",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string" },
     * "message": { "type": "string" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "timestamp": { "type": "string" }
     * }
     * },
     * "input": {
     * "channel": "@input.slackChannel",
     * "message": "@process-data.output.formattedMessage"
     * },
     * "execute": "export default async function(input, ctx) { ... }",
     * "dependencies": [{ "integrationId": "i:slack-123" }]
     * }
     * ```
     * ## @ Reference Syntax
     * Use @ references to declaratively connect step inputs to outputs:
     * - **Workflow input**: `@input.propertyName`
     * - **Previous step output**: `@<step-name>.output.propertyName`
     * - **Nested properties**: `@step-1.output.data.user.name`
     * The system automatically resolves these references before executing each step.
     * ## Execute Function
     * The execute function receives the **resolved input** (with @ references replaced by actual values):
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // No need for ctx.readWorkflowInput() or ctx.readStepResult()
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack-123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return data matching outputSchema
     * return { success: true, timestamp: new Date().toISOString() };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * ## Best Practices
     * 1. **Define clear schemas** - inputSchema and outputSchema should be precise
     * 2. **Use @ references** - Declaratively wire data flow between steps
     * 3. **Keep steps focused** - Each step should do one thing well
     * 4. **Use placeholders for integration IDs** - Validation errors will list available integrations
     * 5. **Test incrementally** - Use stopAfter to test each step individually
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions with @ references for data flow
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Read the status and results of a workflow run using its Resources 2.0 URI.
     * ## Overview
     * This tool retrieves comprehensive information about a workflow execution, including real-time status, step results, logs, and timing information. Use this after starting a workflow with DECO_WORKFLOW_START to monitor progress and retrieve results.
     * ## Input
     * - **uri**: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - This URI is returned by DECO_WORKFLOW_START when you start a workflow
     * - You can also search for workflow runs using DECO_RESOURCE_WORKFLOW_RUN_SEARCH
     * ## Return Value
     * Returns a workflow_run resource object with:
     * ### Core Fields
     * - **status**: Current execution status ("pending", "running", "completed", "failed", "errored")
     * - **runId**: Unique identifier for this execution
     * - **workflowURI**: The URI of the workflow definition that was executed
     * ### Execution Details
     * - **currentStep**: Name of the step currently executing (if status is "running")
     * - **stepResults**: Object mapping step names to their output values (for completed steps)
     * - **finalResult**: The final workflow output (if status is "completed")
     * - **partialResult**: Intermediate results from completed steps (if still running)
     * ### Error Information
     * - **error**: Error message and details (if status is "failed" or "errored")
     * - **logs**: Array of log entries from step execution, including errors and warnings
     * ### Timing
     * - **startTime**: Unix timestamp when the workflow started
     * - **endTime**: Unix timestamp when the workflow finished (if completed/failed)
     * - **created_at**: ISO 8601 timestamp when the run was created
     * - **updated_at**: ISO 8601 timestamp of the last status update
     * ### Raw Data
     * - **workflowStatus**: Complete raw workflow status from Cloudflare Workflows (for advanced use cases)
     * ## Usage Pattern
     * ```javascript
     * // 1. Start a workflow
     * const { uri } = await DECO_WORKFLOW_START({
     * uri: "rsc://workflow/my-workflow",
     * input: { userId: "123" }
     * });
     * // 2. Monitor execution
     * const run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * console.log(run.data.status); // "running"
     * console.log(run.data.currentStep); // "step-2-process-data"
     * // 3. Poll until complete
     * while (run.data.status === "running" || run.data.status === "pending") {
     * await sleep(2000);
     * run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * }
     * // 4. Get results
     * if (run.data.status === "completed") {
     * console.log(run.data.finalResult);
     * } else {
     * console.error(run.data.error);
     * console.log(run.data.logs);
     * }
     * ```
     * ## Common Use Cases
     * - **Monitor Progress**: Poll this tool to track workflow execution in real-time
     * - **Retrieve Results**: Get the final output once a workflow completes
     * - **Debug Failures**: Access error messages and logs when workflows fail
     * - **Inspect Steps**: View intermediate results from each completed step
     * - **Resume Workflows**: Use partialResult to continue from a checkpoint
     */
    DECO_RESOURCE_WORKFLOW_RUN_READ: (
      input: DECO_RESOURCE_WORKFLOW_RUN_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_READOutput>;
    /**
     * Search workflow_run resources
     */
    DECO_RESOURCE_WORKFLOW_RUN_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow with sequential code steps using @ references.
     * ## Execution Pattern Reminder
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** to connect step inputs to previous outputs
     * 3. **@ References are resolved** before step execution
     * 4. **Final step output** must match workflow's output schema
     * ## Update Guidelines
     * 1. **Define clear schemas** - Update inputSchema and outputSchema as needed
     * 2. **Use @ references** - Update the input object to wire data between steps
     * 3. **Update execute code** - Remember that input is already resolved (no ctx.readStepResult needed)
     * 4. **Update dependencies** - Add `{ integrationId }` if using ctx.env
     * 5. **Test incrementally** - Use stopAfter to test each updated step
     * ## @ Reference Examples
     * ```json
     * {
     * "input": {
     * "userId": "@input.userId",
     * "previousResult": "@step-1.output.data",
     * "nestedValue": "@step-2.output.user.email"
     * }
     * }
     * ```
     * ## Execute Function Signature
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // ctx.env contains integration tools
     * const result = await ctx.env['i:integration-id'].tool_name(input);
     * return { success: true, data: result };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Render workflow_run view
     */
    DECO_VIEW_RENDER_WORKFLOW_RUN: (
      input: DECO_VIEW_RENDER_WORKFLOW_RUNInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_RUNOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes consisting of code steps that use @ references to declaratively wire data between steps. Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to steps via `@input.propertyName` references in their input objects
     * - Should match the structure expected by the workflow's input schema
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution (legacy)
     * - `uri`: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     * ## Monitoring Workflow Execution
     * After starting a workflow, use the returned `uri` with **DECO_RESOURCE_WORKFLOW_RUN_READ** to monitor progress and retrieve results:
     * - The workflow_run resource includes status, current step, step results, logs, and timing information
     * - For running workflows, call DECO_RESOURCE_WORKFLOW_RUN_READ repeatedly to poll for updates
     * - The resource automatically refreshes with the latest execution state
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
  }>;
  AI_GATEWAY: Mcp<{
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
  }>;
  INTEGRATIONS: Mcp<{
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * Get the API key for an integration
     */
    INTEGRATIONS_GET_API_KEY: (
      input: INTEGRATIONS_GET_API_KEYInput,
    ) => Promise<INTEGRATIONS_GET_API_KEYOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
  }>;
  DECO_CHAT_WORKSPACE_API: Mcp<{
    /**
     * Create a new agent
     */
    AGENTS_CREATE: (input: AGENTS_CREATEInput) => Promise<AGENTS_CREATEOutput>;
    /**
     * Delete an agent by id
     */
    AGENTS_DELETE: (input: AGENTS_DELETEInput) => Promise<AGENTS_DELETEOutput>;
    /**
     * Get an agent by id
     */
    AGENTS_GET: (input: AGENTS_GETInput) => Promise<AGENTS_GETOutput>;
    /**
     * List all agents
     */
    AGENTS_LIST: (input: AGENTS_LISTInput) => Promise<AGENTS_LISTOutput>;
    /**
     * Update an existing agent
     */
    AGENTS_UPDATE: (input: AGENTS_UPDATEInput) => Promise<AGENTS_UPDATEOutput>;
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
    /**
     * Check if an API key has access to a resource
     */
    API_KEYS_CHECK_ACCESS: (
      input: API_KEYS_CHECK_ACCESSInput,
    ) => Promise<API_KEYS_CHECK_ACCESSOutput>;
    /**
     * Create a new API key
     */
    API_KEYS_CREATE: (
      input: API_KEYS_CREATEInput,
    ) => Promise<API_KEYS_CREATEOutput>;
    /**
     * Delete an API key (soft delete)
     */
    API_KEYS_DELETE: (
      input: API_KEYS_DELETEInput,
    ) => Promise<API_KEYS_DELETEOutput>;
    /**
     * Disable an API key
     */
    API_KEYS_DISABLE: (
      input: API_KEYS_DISABLEInput,
    ) => Promise<API_KEYS_DISABLEOutput>;
    /**
     * Enable an API key
     */
    API_KEYS_ENABLE: (
      input: API_KEYS_ENABLEInput,
    ) => Promise<API_KEYS_ENABLEOutput>;
    /**
     * Get an API key by ID
     */
    API_KEYS_GET: (input: API_KEYS_GETInput) => Promise<API_KEYS_GETOutput>;
    /**
     * List all API keys
     */
    API_KEYS_LIST: (input: API_KEYS_LISTInput) => Promise<API_KEYS_LISTOutput>;
    /**
     * Reissue an existing API key with new claims
     */
    API_KEYS_REISSUE: (
      input: API_KEYS_REISSUEInput,
    ) => Promise<API_KEYS_REISSUEOutput>;
    /**
     * Update an API key metadata
     */
    API_KEYS_UPDATE: (
      input: API_KEYS_UPDATEInput,
    ) => Promise<API_KEYS_UPDATEOutput>;
    /**
     * Validate an API key by ID
     */
    API_KEYS_VALIDATE: (
      input: API_KEYS_VALIDATEInput,
    ) => Promise<API_KEYS_VALIDATEOutput>;
    /**
     * Create a channel
     */
    CHANNELS_CREATE: (
      input: CHANNELS_CREATEInput,
    ) => Promise<CHANNELS_CREATEOutput>;
    /**
     * Delete a channel
     */
    CHANNELS_DELETE: (
      input: CHANNELS_DELETEInput,
    ) => Promise<CHANNELS_DELETEOutput>;
    /**
     * Get a channel by ID
     */
    CHANNELS_GET: (input: CHANNELS_GETInput) => Promise<CHANNELS_GETOutput>;
    /**
     * Invite an agent to a channel
     */
    CHANNELS_JOIN: (input: CHANNELS_JOINInput) => Promise<CHANNELS_JOINOutput>;
    /**
     * Remove an agent from a channel
     */
    CHANNELS_LEAVE: (
      input: CHANNELS_LEAVEInput,
    ) => Promise<CHANNELS_LEAVEOutput>;
    /**
     * List all channels
     */
    CHANNELS_LIST: (input: CHANNELS_LISTInput) => Promise<CHANNELS_LISTOutput>;
    /**
     * Commit a pre-authorized amount of money for the current tenant's wallet
     */
    COMMIT_PRE_AUTHORIZED_AMOUNT: (
      input: COMMIT_PRE_AUTHORIZED_AMOUNTInput,
    ) => Promise<COMMIT_PRE_AUTHORIZED_AMOUNTOutput>;
    /**
     * Register a contract with the registry.
     */
    CONTRACT_REGISTER: (
      input: CONTRACT_REGISTERInput,
    ) => Promise<CONTRACT_REGISTEROutput>;
    /**
     * Create a DECONFIG branch. If sourceBranch is provided, creates a branch from that branch (O(1) operation). Otherwise creates an empty branch.
     */
    CREATE_BRANCH: (input: CREATE_BRANCHInput) => Promise<CREATE_BRANCHOutput>;
    /**
     * Create a checkout session for the current tenant's wallet
     */
    CREATE_CHECKOUT_SESSION: (
      input: CREATE_CHECKOUT_SESSIONInput,
    ) => Promise<CREATE_CHECKOUT_SESSIONOutput>;
    /**
     * Create a voucher with money from the current tenant's wallet
     */
    CREATE_VOUCHER: (
      input: CREATE_VOUCHERInput,
    ) => Promise<CREATE_VOUCHEROutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_GET_META: (
      input: DATABASES_GET_METAInput,
    ) => Promise<DATABASES_GET_METAOutput>;
    /**
     * Migrate data from Turso database to new database
     */
    DATABASES_MIGRATE: (
      input: DATABASES_MIGRATEInput,
    ) => Promise<DATABASES_MIGRATEOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RECOVERY: (
      input: DATABASES_RECOVERYInput,
    ) => Promise<DATABASES_RECOVERYOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RUN_SQL: (
      input: DATABASES_RUN_SQLInput,
    ) => Promise<DATABASES_RUN_SQLOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Create a new document with markdown content.
     * ## Document Structure
     * Documents consist of:
     * - **name**: A clear, descriptive title for the document
     * - **description** (optional): A brief summary of the document's purpose
     * - **content**: Markdown-formatted text content
     * - **tags** (optional): Array of strings for categorization
     * ## Markdown Support
     * Documents support full markdown syntax:
     * ```markdown
     * # Main Header
     * ## Subheader
     * This is **bold** and this is *italic*.
     * - Bullet point 1
     * - Bullet point 2
     * 1. Numbered item
     * 2. Another item
     * [Link text](https://example.com)
     * ```code
     * Code blocks with syntax highlighting
     * ```
     * > Blockquotes
     * | Table | Headers |
     * |-------|---------|
     * | Data  | Data    |
     * ```
     * ## Best Practices
     * 1. **Use clear names** - Make document titles descriptive and searchable
     * 2. **Add descriptions** - Help others understand the document's purpose
     * 3. **Structure content** - Use headers to organize long documents
     * 4. **Tag appropriately** - Use tags for easier discovery and organization
     * 5. **Keep it readable** - Use markdown formatting to enhance readability
     */
    DECO_RESOURCE_DOCUMENT_CREATE: (
      input: DECO_RESOURCE_DOCUMENT_CREATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_CREATEOutput>;
    /**
     * Delete a document from the workspace.
     * This operation permanently removes the document file from the DECONFIG storage.
     * Use this to clean up obsolete, duplicate, or unwanted documents.
     * Warning: This action cannot be undone. The document will be permanently removed
     * from the workspace.
     */
    DECO_RESOURCE_DOCUMENT_DELETE: (
      input: DECO_RESOURCE_DOCUMENT_DELETEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_DELETEOutput>;
    /**
     * Read a document's content and metadata.
     * Returns:
     * - Document metadata (name, description, tags)
     * - Full markdown content
     * - Creation and modification timestamps
     * Documents support standard markdown syntax including:
     * - Headers (# ## ###)
     * - Lists (ordered and unordered)
     * - Links and images
     * - Code blocks with syntax highlighting
     * - Tables, blockquotes, and more
     */
    DECO_RESOURCE_DOCUMENT_READ: (
      input: DECO_RESOURCE_DOCUMENT_READInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_READOutput>;
    /**
     * Search documents in the workspace.
     * This operation allows you to find documents by name, content, description, or tags.
     * Documents are markdown-formatted text content that can be used for documentation,
     * notes, guides, or any other text-based information.
     * Use this to discover existing documents before creating new ones or to find documents
     * for reading or modification.
     */
    DECO_RESOURCE_DOCUMENT_SEARCH: (
      input: DECO_RESOURCE_DOCUMENT_SEARCHInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_SEARCHOutput>;
    /**
     * Update a document's content or metadata.
     * You can update any of the following:
     * - **name**: Change the document title
     * - **description**: Update the document's summary
     * - **content**: Modify the markdown content
     * - **tags**: Add, remove, or change tags
     * ## Update Guidelines
     * 1. **Preserve formatting** - Maintain markdown structure when editing content
     * 2. **Update incrementally** - Make focused changes rather than rewriting everything
     * 3. **Use clear descriptions** - Keep descriptions concise and informative
     * 4. **Manage tags thoughtfully** - Add relevant tags, remove outdated ones
     * ## Common Update Patterns
     * **Adding content:**
     * - Append new sections to existing content
     * - Insert new information in appropriate locations
     * - Maintain document structure and flow
     * **Fixing content:**
     * - Correct typos and formatting issues
     * - Update outdated information
     * - Improve clarity and readability
     * **Reorganizing:**
     * - Restructure headers and sections
     * - Reorder content for better flow
     * - Split or merge sections as needed
     */
    DECO_RESOURCE_DOCUMENT_UPDATE: (
      input: DECO_RESOURCE_DOCUMENT_UPDATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_UPDATEOutput>;
    /**
     * Create an executable tool with JSON Schema validation.
     * ## Tool Execute Function
     * Tools must export a default async function:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: validated against tool's inputSchema
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return: must match tool's outputSchema
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * **Key Points:**
     * - **inputSchema** defines the `input` parameter type and validation
     * - **outputSchema** defines the return value type and validation
     * - **execute** is the function code as an inline ES module string
     * - **dependencies** (optional): Array of `{ integrationId }` for ctx.env calls
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - System will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition including metadata, schemas, and execute code.
     * Returns:
     * - Tool metadata (name, description)
     * - Input/output JSON schemas
     * - Execute code (inline ES module)
     * - Dependencies (integration IDs used in ctx.env calls)
     * The tool's execute code uses `ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args)` to call integrations.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update a tool's metadata, schemas, or execution code.
     * ## Execute Function API
     * ```javascript
     * export default async function(input, ctx) {
     * // Call integration tools
     * const result = await ctx.env['i:integration'].tool_name({ args });
     * return { output: result };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain function signature** - Keep `async function(input, ctx)` format
     * 2. **Match schemas** - Input/output must match updated schemas
     * 3. **Use placeholder integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` for any ctx.env calls
     * 5. **Test thoroughly** - Input/output are validated automatically
     * **Integration IDs:**
     * - Use placeholders like `i:slack` if you don't know the ID
     * - Validation errors will list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Create a new view with React code.
     * ## View Structure
     * Views consist of:
     * - **name**: A clear, descriptive title for the view
     * - **description** (optional): A brief summary of the view's purpose
     * - **code**: React component code that defines the App component
     * - **icon** (optional): URL to an icon image for the view
     * - **tags** (optional): Array of strings for categorization
     * - **importmap** (optional): Custom import map for additional modules (defaults to React 19.2.0)
     * ## React Component Guidelines
     * **You only need to write the React component code. The system provides:**
     * - ✅ React-compatible runtime with automatic JSX transform (no `import React` needed)
     * - ✅ Tailwind CSS v4 design tokens (already available)
     * - ✅ Global `callTool({ toolName, input })` function (supports regular and resource tools - always available)
     * - ✅ Import maps for React modules
     * **Your code must define an App component and import React hooks:**
     * ```jsx
     * import { useState } from 'react';
     * export const App = () => {
     * const [data, setData] = useState(null);
     * const [loading, setLoading] = useState(false);
     * const fetchData = async () => {
     * setLoading(true);
     * try {
     * const result = await callTool({
     * toolName: 'INTEGRATIONS_LIST',
     * input: {}
     * });
     * setData(result);
     * } catch (error) {
     * console.error(error);
     * } finally {
     * setLoading(false);
     * }
     * };
     * return (
     * <div className="p-6">
     * <h1 className="text-2xl font-bold mb-4">My View</h1>
     * <button
     * onClick={fetchData}
     * className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
     * >
     * Load Data
     * </button>
     * {loading && <p className="mt-4">Loading...</p>}
     * {data && <pre className="mt-4 p-4 bg-gray-100 rounded">{JSON.stringify(data, null, 2)}</pre>}
     * </div>
     * );
     * };
     * ```
     * ## Available Imports
     * Import React hooks and utilities from 'react':
     * ```jsx
     * import { useState, useEffect, useCallback, useMemo, useRef, useContext, createContext } from 'react';
     * ```
     * The following modules are available via import maps by default:
     * - `react` - React 19.2.0
     * - `react-dom` - React DOM 19.2.0
     * - `react-dom/client` - React DOM client APIs
     * ## Custom Import Maps (Advanced)
     * You can optionally provide a custom `importmap` to add additional libraries:
     * ```json
     * {
     * "importmap": {
     * "lodash": "https://esm.sh/lodash@4.17.21",
     * "date-fns": "https://esm.sh/date-fns@3.0.0"
     * }
     * }
     * ```
     * Then use these libraries in your component:
     * ```jsx
     * import { useState } from 'react';
     * import { groupBy } from 'lodash';
     * import { format } from 'date-fns';
     * export const App = () => {
     * // Use imported libraries
     * const formattedDate = format(new Date(), 'yyyy-MM-dd');
     * // ...
     * };
     * ```
     * **Note:** The default React imports are always available and will be merged with your custom imports.
     * ## Calling Tools
     * Use the global `callTool()` function to invoke any tool. This function is **always available** and doesn't need to be imported.
     * ### API Signature
     * ```typescript
     * callTool(params: {
     * toolName: string;  // Required: Tool name or resource URI
     * input: object;     // Required: Parameters for the tool (use {} if none needed)
     * }): Promise<any>
     * ```
     * ### Tool Types
     * Both types of tools are called the same way, but serve different purposes:
     * **Regular Tools** - Standard workspace tools (most common):
     * - Use the tool name directly (e.g., `"INTEGRATIONS_LIST"`)
     * - Workspace-specific tools from installed integrations
     * - Most integration tools fall into this category
     * **Resource Tools** - Tools that operate on resources (advanced):
     * - Use a resource URI starting with `rsc://` (e.g., `"rsc://tools-management/tool/TOOL_SEARCH"`)
     * - Dynamic tools that work with workspace resources
     * - Used for CRUD operations on resources like tools, workflows, documents, etc.
     * ### Usage Examples
     * **Regular tool call (most common):**
     * ```jsx
     * // Call a regular workspace tool
     * const integrations = await callTool({
     * toolName: 'INTEGRATIONS_LIST',
     * input: {}  // Empty object when tool requires no parameters
     * });
     * ```
     * **Regular tool with parameters:**
     * ```jsx
     * const user = await callTool({
     * toolName: 'USER_GET',
     * input: {
     * userId: '123',
     * includeProfile: true
     * }
     * });
     * ```
     * **Resource tool call (advanced):**
     * ```jsx
     * // Call a resource tool using URI
     * const tools = await callTool({
     * toolName: 'rsc://tools-management/tool/TOOL_SEARCH',
     * input: { query: 'database' }
     * });
     * ```
     * **With error handling:**
     * ```jsx
     * try {
     * const result = await callTool({
     * toolName: 'DATA_PROCESS',
     * input: { data: myData }
     * });
     * console.log('Success:', result);
     * } catch (error) {
     * console.error('Tool call failed:', error.message);
     * }
     * ```
     * ### Important Notes
     * - Both `toolName` and `input` are **required** parameters
     * - `toolName` must be a string:
     * - **Regular tools**: Use the tool name directly (e.g., `"INTEGRATIONS_LIST"`)
     * - **Resource tools**: Use a URI starting with `rsc://` (e.g., `"rsc://tools-management/tool/TOOL_SEARCH"`)
     * - `input` must be an object (not an array). Use `{}` if the tool needs no parameters
     * - Both regular and resource tools are called the same way - the API handles routing automatically
     * - The function returns a Promise that resolves with the tool's result
     * - Errors are thrown if parameters are invalid or if the API call fails
     * **For complete tool calling documentation, refer to the TOOL_CALL.md guide.**
     * ## Styling with Tailwind CSS v4
     * Use Tailwind utility classes directly in your JSX:
     * ```jsx
     * <div className="flex items-center gap-4 p-6 bg-white rounded-lg shadow-md">
     * <h2 className="text-xl font-semibold text-gray-800">Hello World</h2>
     * <button className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition">
     * Click me
     * </button>
     * </div>
     * ```
     * ## Best Practices
     * 1. **Import hooks** - Always import React hooks you need: `import { useState, useEffect } from 'react'`
     * 2. **Define App component** - Always define `export const App = () => { ... }`
     * 3. **Use Tailwind classes** - Leverage Tailwind CSS for styling instead of custom CSS
     * 4. **Handle loading states** - Show feedback when calling tools
     * 5. **Error handling** - Use try/catch when calling tools
     * 6. **Clear naming** - Make view titles descriptive and searchable
     * 7. **Add descriptions** - Help others understand the view's purpose
     * 8. **Tag appropriately** - Use tags for easier discovery and organization
     * 9. **Keep it simple** - Focus on the component logic, not boilerplate
     * ## Common Use Cases
     * **Dashboard View:**
     * ```jsx
     * import { useState, useEffect } from 'react';
     * export const App = () => {
     * const [metrics, setMetrics] = useState(null);
     * useEffect(() => {
     * const loadMetrics = async () => {
     * const data = await callTool({
     * toolName: 'GET_METRICS',
     * input: {}
     * });
     * setMetrics(data);
     * };
     * loadMetrics();
     * }, []);
     * return (
     * <div className="p-6 space-y-4">
     * <h1 className="text-3xl font-bold">Dashboard</h1>
     * <div className="grid grid-cols-3 gap-4">
     * {metrics?.map((metric, i) => (
     * <div key={i} className="p-4 bg-white rounded shadow">
     * <div className="text-2xl font-bold">{metric.value}</div>
     * <div className="text-gray-600">{metric.label}</div>
     * </div>
     * ))}
     * </div>
     * </div>
     * );
     * };
     * ```
     * **Interactive Form:**
     * ```jsx
     * import { useState } from 'react';
     * export const App = () => {
     * const [formData, setFormData] = useState({ name: '', email: '' });
     * const [result, setResult] = useState(null);
     * const handleSubmit = async (e) => {
     * e.preventDefault();
     * const res = await callTool({
     * toolName: 'SUBMIT_FORM',
     * input: formData
     * });
     * setResult(res);
     * };
     * return (
     * <div className="p-6 max-w-md">
     * <form onSubmit={handleSubmit} className="space-y-4">
     * <input
     * type="text"
     * value={formData.name}
     * onChange={(e) => setFormData({...formData, name: e.target.value})}
     * className="w-full px-4 py-2 border rounded"
     * placeholder="Name"
     * />
     * <input
     * type="email"
     * value={formData.email}
     * onChange={(e) => setFormData({...formData, email: e.target.value})}
     * className="w-full px-4 py-2 border rounded"
     * placeholder="Email"
     * />
     * <button
     * type="submit"
     * className="w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
     * >
     * Submit
     * </button>
     * </form>
     * {result && <div className="mt-4 p-4 bg-green-100 rounded">{JSON.stringify(result)}</div>}
     * </div>
     * );
     * };
     * ```
     */
    DECO_RESOURCE_VIEW_CREATE: (
      input: DECO_RESOURCE_VIEW_CREATEInput,
    ) => Promise<DECO_RESOURCE_VIEW_CREATEOutput>;
    /**
     * Delete a view from the workspace.
     * This operation permanently removes the view file from the DECONFIG storage.
     * Use this to clean up obsolete, duplicate, or unwanted views.
     * Warning: This action cannot be undone. The view will be permanently removed
     * from the workspace. Make sure you have a backup if needed.
     */
    DECO_RESOURCE_VIEW_DELETE: (
      input: DECO_RESOURCE_VIEW_DELETEInput,
    ) => Promise<DECO_RESOURCE_VIEW_DELETEOutput>;
    /**
     * Read a view's content and metadata.
     * Returns:
     * - View metadata (name, description, icon, tags)
     * - React component code (code field)
     * - Creation and modification timestamps
     * The code contains only the React component definition (e.g., `export const App = () => { ... }`).
     * The frontend will automatically wrap this code in a complete HTML template with:
     * - React-compatible runtime with automatic JSX transform
     * - Tailwind CSS v4 design tokens
     * - Global `callTool(params)` function for invoking tools
     * - Takes an object with `toolName` (string) and `input` (object) properties
     * - Supports both regular tools (e.g., `"INTEGRATIONS_LIST"`) and resource tools (URIs like `"rsc://integration/tool/NAME"`)
     * - Both types are called the same way - the API handles routing
     * - Example: `await callTool({ toolName: 'INTEGRATIONS_LIST', input: {} })`
     * Security Notes:
     * - Views are rendered in isolated iframes with sandbox attributes
     * - External resources are loaded from trusted CDNs
     * - Component code is validated before execution
     */
    DECO_RESOURCE_VIEW_READ: (
      input: DECO_RESOURCE_VIEW_READInput,
    ) => Promise<DECO_RESOURCE_VIEW_READOutput>;
    /**
     * Search views in the workspace.
     * This operation allows you to find views by name, description, or tags.
     * Views are HTML-based UI components that can be rendered in iframes to create
     * custom interfaces, dashboards, reports, or any other web-based visualization.
     * Use this to discover existing views before creating new ones or to find views
     * for reading or modification.
     */
    DECO_RESOURCE_VIEW_SEARCH: (
      input: DECO_RESOURCE_VIEW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_VIEW_SEARCHOutput>;
    /**
     * Update a view's content or metadata.
     * You can update any of the following:
     * - **name**: Change the view title
     * - **description**: Update the view's summary
     * - **code**: Modify the React component code
     * - **icon**: Change the icon URL
     * - **tags**: Add, remove, or change tags
     * - **importmap**: Add or modify custom module imports
     * ## Update Guidelines
     * 1. **Preserve imports** - Ensure necessary React hooks are imported from 'react'
     * 2. **Preserve App component** - Always keep the `export const App = () => { ... }` definition
     * 3. **Update incrementally** - Make focused changes rather than rewriting everything
     * 4. **Test changes** - Verify the component renders correctly after updates
     * 5. **Use Tailwind classes** - Leverage Tailwind CSS for styling
     * 6. **Manage tags thoughtfully** - Add relevant tags, remove outdated ones
     * ## Common Update Patterns
     * **Updating content:**
     * - Modify JSX structure and layout
     * - Add new sections or UI elements
     * - Update data visualizations
     * - Fix styling with Tailwind classes
     * **Adding functionality:**
     * - Import new React hooks if needed: `import { useState, useEffect, ... } from 'react'`
     * - Include new state and effects
     * - Add event handlers and interactivity
     * - Integrate tool calls with `callTool({ toolName: 'TOOL_NAME', input: {} })`
     * - Enhance user interactions
     * **Improving design:**
     * - Update Tailwind utility classes
     * - Modernize component layout
     * - Improve responsiveness with Tailwind breakpoints
     * - Optimize rendering performance
     */
    DECO_RESOURCE_VIEW_UPDATE: (
      input: DECO_RESOURCE_VIEW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_VIEW_UPDATEOutput>;
    /**
     * Create a workflow with sequential code steps.
     * ## Execution Pattern
     * Workflows consist of sequential code steps where each step can reference previous step outputs using @ syntax:
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** in the input object to reference previous step outputs or workflow input
     * 3. **@ References** are resolved before step execution
     * 4. **Final step output** must match the workflow's output schema
     * ## Step Structure
     * Each step must define:
     * ```json
     * {
     * "name": "send-notification",
     * "description": "Send a notification using the Slack API",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string" },
     * "message": { "type": "string" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "timestamp": { "type": "string" }
     * }
     * },
     * "input": {
     * "channel": "@input.slackChannel",
     * "message": "@process-data.output.formattedMessage"
     * },
     * "execute": "export default async function(input, ctx) { ... }",
     * "dependencies": [{ "integrationId": "i:slack-123" }]
     * }
     * ```
     * ## @ Reference Syntax
     * Use @ references to declaratively connect step inputs to outputs:
     * - **Workflow input**: `@input.propertyName`
     * - **Previous step output**: `@<step-name>.output.propertyName`
     * - **Nested properties**: `@step-1.output.data.user.name`
     * The system automatically resolves these references before executing each step.
     * ## Execute Function
     * The execute function receives the **resolved input** (with @ references replaced by actual values):
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // No need for ctx.readWorkflowInput() or ctx.readStepResult()
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack-123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return data matching outputSchema
     * return { success: true, timestamp: new Date().toISOString() };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * ## Best Practices
     * 1. **Define clear schemas** - inputSchema and outputSchema should be precise
     * 2. **Use @ references** - Declaratively wire data flow between steps
     * 3. **Keep steps focused** - Each step should do one thing well
     * 4. **Use placeholders for integration IDs** - Validation errors will list available integrations
     * 5. **Test incrementally** - Use stopAfter to test each step individually
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions with @ references for data flow
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Read the status and results of a workflow run using its Resources 2.0 URI.
     * ## Overview
     * This tool retrieves comprehensive information about a workflow execution, including real-time status, step results, logs, and timing information. Use this after starting a workflow with DECO_WORKFLOW_START to monitor progress and retrieve results.
     * ## Input
     * - **uri**: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - This URI is returned by DECO_WORKFLOW_START when you start a workflow
     * - You can also search for workflow runs using DECO_RESOURCE_WORKFLOW_RUN_SEARCH
     * ## Return Value
     * Returns a workflow_run resource object with:
     * ### Core Fields
     * - **status**: Current execution status ("pending", "running", "completed", "failed", "errored")
     * - **runId**: Unique identifier for this execution
     * - **workflowURI**: The URI of the workflow definition that was executed
     * ### Execution Details
     * - **currentStep**: Name of the step currently executing (if status is "running")
     * - **stepResults**: Object mapping step names to their output values (for completed steps)
     * - **finalResult**: The final workflow output (if status is "completed")
     * - **partialResult**: Intermediate results from completed steps (if still running)
     * ### Error Information
     * - **error**: Error message and details (if status is "failed" or "errored")
     * - **logs**: Array of log entries from step execution, including errors and warnings
     * ### Timing
     * - **startTime**: Unix timestamp when the workflow started
     * - **endTime**: Unix timestamp when the workflow finished (if completed/failed)
     * - **created_at**: ISO 8601 timestamp when the run was created
     * - **updated_at**: ISO 8601 timestamp of the last status update
     * ### Raw Data
     * - **workflowStatus**: Complete raw workflow status from Cloudflare Workflows (for advanced use cases)
     * ## Usage Pattern
     * ```javascript
     * // 1. Start a workflow
     * const { uri } = await DECO_WORKFLOW_START({
     * uri: "rsc://workflow/my-workflow",
     * input: { userId: "123" }
     * });
     * // 2. Monitor execution
     * const run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * console.log(run.data.status); // "running"
     * console.log(run.data.currentStep); // "step-2-process-data"
     * // 3. Poll until complete
     * while (run.data.status === "running" || run.data.status === "pending") {
     * await sleep(2000);
     * run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * }
     * // 4. Get results
     * if (run.data.status === "completed") {
     * console.log(run.data.finalResult);
     * } else {
     * console.error(run.data.error);
     * console.log(run.data.logs);
     * }
     * ```
     * ## Common Use Cases
     * - **Monitor Progress**: Poll this tool to track workflow execution in real-time
     * - **Retrieve Results**: Get the final output once a workflow completes
     * - **Debug Failures**: Access error messages and logs when workflows fail
     * - **Inspect Steps**: View intermediate results from each completed step
     * - **Resume Workflows**: Use partialResult to continue from a checkpoint
     */
    DECO_RESOURCE_WORKFLOW_RUN_READ: (
      input: DECO_RESOURCE_WORKFLOW_RUN_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_READOutput>;
    /**
     * Search workflow_run resources
     */
    DECO_RESOURCE_WORKFLOW_RUN_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow with sequential code steps using @ references.
     * ## Execution Pattern Reminder
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** to connect step inputs to previous outputs
     * 3. **@ References are resolved** before step execution
     * 4. **Final step output** must match workflow's output schema
     * ## Update Guidelines
     * 1. **Define clear schemas** - Update inputSchema and outputSchema as needed
     * 2. **Use @ references** - Update the input object to wire data between steps
     * 3. **Update execute code** - Remember that input is already resolved (no ctx.readStepResult needed)
     * 4. **Update dependencies** - Add `{ integrationId }` if using ctx.env
     * 5. **Test incrementally** - Use stopAfter to test each updated step
     * ## @ Reference Examples
     * ```json
     * {
     * "input": {
     * "userId": "@input.userId",
     * "previousResult": "@step-1.output.data",
     * "nestedValue": "@step-2.output.user.email"
     * }
     * }
     * ```
     * ## Execute Function Signature
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // ctx.env contains integration tools
     * const result = await ctx.env['i:integration-id'].tool_name(input);
     * return { success: true, data: result };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render document_detail view
     */
    DECO_VIEW_RENDER_DOCUMENT_DETAIL: (
      input: DECO_VIEW_RENDER_DOCUMENT_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_DOCUMENT_DETAILOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
    /**
     * Render view_detail view
     */
    DECO_VIEW_RENDER_VIEW_DETAIL: (
      input: DECO_VIEW_RENDER_VIEW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_VIEW_DETAILOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Render workflow_run view
     */
    DECO_VIEW_RENDER_WORKFLOW_RUN: (
      input: DECO_VIEW_RENDER_WORKFLOW_RUNInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_RUNOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes consisting of code steps that use @ references to declaratively wire data between steps. Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to steps via `@input.propertyName` references in their input objects
     * - Should match the structure expected by the workflow's input schema
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution (legacy)
     * - `uri`: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     * ## Monitoring Workflow Execution
     * After starting a workflow, use the returned `uri` with **DECO_RESOURCE_WORKFLOW_RUN_READ** to monitor progress and retrieve results:
     * - The workflow_run resource includes status, current step, step results, logs, and timing information
     * - For running workflows, call DECO_RESOURCE_WORKFLOW_RUN_READ repeatedly to poll for updates
     * - The resource automatically refreshes with the latest execution state
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
    /**
     * Delete a branch and all its files. This operation cannot be undone.
     */
    DELETE_BRANCH: (input: DELETE_BRANCHInput) => Promise<DELETE_BRANCHOutput>;
    /**
     * Delete a file from a DECONFIG branch
     */
    DELETE_FILE: (input: DELETE_FILEInput) => Promise<DELETE_FILEOutput>;
    /**
     * Compare two branches and get the differences
     */
    DIFF_BRANCH: (input: DIFF_BRANCHInput) => Promise<DIFF_BRANCHOutput>;
    /**
     * Delete a file
     */
    FS_DELETE: (input: FS_DELETEInput) => Promise<FS_DELETEOutput>;
    /**
     * List files from a given bucket given a prefix
     */
    FS_LIST: (input: FS_LISTInput) => Promise<FS_LISTOutput>;
    /**
     * Get a secure temporary link to read a file
     */
    FS_READ: (input: FS_READInput) => Promise<FS_READOutput>;
    /**
     * Get metadata about a file
     */
    FS_READ_METADATA: (
      input: FS_READ_METADATAInput,
    ) => Promise<FS_READ_METADATAOutput>;
    /**
     * Get a secure temporary link to upload a file
     */
    FS_WRITE: (input: FS_WRITEInput) => Promise<FS_WRITEOutput>;
    /**
     * Get the agents usage for the current tenant's wallet
     */
    GET_AGENTS_USAGE: (
      input: GET_AGENTS_USAGEInput,
    ) => Promise<GET_AGENTS_USAGEOutput>;
    /**
     * Get the billing history for the current tenant's wallet
     */
    GET_BILLING_HISTORY: (
      input: GET_BILLING_HISTORYInput,
    ) => Promise<GET_BILLING_HISTORYOutput>;
    /**
     * Get the contracts commits for the current tenant's wallet
     */
    GET_CONTRACTS_COMMITS: (
      input: GET_CONTRACTS_COMMITSInput,
    ) => Promise<GET_CONTRACTS_COMMITSOutput>;
    /**
     * Get the threads usage for the current tenant's wallet
     */
    GET_THREADS_USAGE: (
      input: GET_THREADS_USAGEInput,
    ) => Promise<GET_THREADS_USAGEOutput>;
    /**
     * Get the wallet account for the current tenant
     */
    GET_WALLET_ACCOUNT: (
      input: GET_WALLET_ACCOUNTInput,
    ) => Promise<GET_WALLET_ACCOUNTOutput>;
    /**
     * Get the plan for the current tenant's workspace
     */
    GET_WORKSPACE_PLAN: (
      input: GET_WORKSPACE_PLANInput,
    ) => Promise<GET_WORKSPACE_PLANOutput>;
    /**
     * Delete an app and its worker
     */
    HOSTING_APP_DELETE: (
      input: HOSTING_APP_DELETEInput,
    ) => Promise<HOSTING_APP_DELETEOutput>;
    /**
     * Deploy multiple TypeScript files that use Wrangler for bundling and deployment to Cloudflare Workers. You must provide a package.json file with the necessary dependencies and a wrangler.toml file matching the Workers for Platforms format. Use 'main_module' instead of 'main', and define bindings using the [[bindings]] array, where each binding is a table specifying its type and properties. To add custom Deco bindings, set type = "MCP" in a binding entry (these will be filtered and handled automatically).
     * Set 'preview: true' to create a preview deployment that won't replace the production version. Preview deployments get their own unique URL but are not promoted to production routes.
     * Common patterns:
     * 1. Use a package.json file to manage dependencies:
     * // package.json
     * {
     * "name": "@deco/workers-example",
     * "private": true,
     * "version": "0.0.0",
     * "type": "module",
     * "scripts": {
     * "dev": "deco dev",
     * "gen": "deco gen > env.gen.ts",
     * "setup": "npm i -g deco-cli",
     * "deploy": "wrangler deploy --dry-run --outdir ./dist && deco deploy ./dist"
     * },
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/mcp": "npm:@jsr/deco__mcp@^0.5.6",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.4.0",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }
     * 2. Import dependencies directly in your files:
     * // main.ts
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * 3. Use wrangler.toml to configure your app:
     * // wrangler.toml
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * # You can add any supported binding type as per Workers for Platforms documentation.
     * 4. You should always surround the user fetch with the withRuntime function.
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * You must use the Workers for Platforms TOML format for wrangler.toml. The bindings supports all standard binding types (ai, analytics_engine, assets, browser_rendering, d1, durable_object_namespace, hyperdrive, kv_namespace, mtls_certificate, plain_text, queue, r2_bucket, secret_text, service, tail_consumer, vectorize, version_metadata, etc). For Deco-specific bindings, use type = "MCP".
     * For routes, only custom domains are supported. The user must point their DNS to the script endpoint. $SCRIPT.deco.page using DNS-Only. The user needs to wait for the DNS to propagate before the app will be available.
     * Example of files deployment:
     * [
     * {
     * "path": "package.json",
     * "content": `{
     * "name": "@deco/workers-example",
     * "version": "0.0.0",
     * "type": "module",
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.2.18",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }`
     * },
     * {
     * "path": "main.ts",
     * "content": `
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * `
     * },
     * {
     * "path": "wrangler.toml",
     * "content": `
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * `
     * }
     * ]
     * Important Notes:
     * - You can access the app workspace by accessing env.DECO_CHAT_WORKSPACE
     * - You can access the app script slug by accessing env.DECO_CHAT_APP_SLUG
     * - Token and workspace can be used to make authenticated requests to the Deco API under https://api.decocms.com
     * - Always use Cloudflare Workers syntax with export default and proper fetch handler signature
     * - When using template literals inside content strings, escape backticks with a backslash (\) or use string concatenation (+)
     * - You must include a package.json file with the @deco/workers-runtime dependency
     * - Dependencies are managed through npm packages in package.json, not npm: or jsr: specifiers
     * - Wrangler will handle the bundling process using the dependencies defined in package.json
     */
    HOSTING_APP_DEPLOY: (
      input: HOSTING_APP_DEPLOYInput,
    ) => Promise<HOSTING_APP_DEPLOYOutput>;
    /**
     * List all deployments for a specific app
     */
    HOSTING_APP_DEPLOYMENTS_LIST: (
      input: HOSTING_APP_DEPLOYMENTS_LISTInput,
    ) => Promise<HOSTING_APP_DEPLOYMENTS_LISTOutput>;
    /**
     * Get info/metadata for an app (including endpoint)
     */
    HOSTING_APP_INFO: (
      input: HOSTING_APP_INFOInput,
    ) => Promise<HOSTING_APP_INFOOutput>;
    /**
     * List all unique workflow names in the workspace
     */
    HOSTING_APP_WORKFLOWS_LIST_NAMES: (
      input: HOSTING_APP_WORKFLOWS_LIST_NAMESInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_NAMESOutput>;
    /**
     * List workflow runs. If workflowName is provided, shows runs for that specific workflow. If not provided, shows recent runs from any workflow.
     */
    HOSTING_APP_WORKFLOWS_LIST_RUNS: (
      input: HOSTING_APP_WORKFLOWS_LIST_RUNSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_RUNSOutput>;
    /**
     * Get the status of a workflow instance
     */
    HOSTING_APP_WORKFLOWS_STATUS: (
      input: HOSTING_APP_WORKFLOWS_STATUSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_STATUSOutput>;
    /**
     * List all apps for the current tenant
     */
    HOSTING_APPS_LIST: (
      input: HOSTING_APPS_LISTInput,
    ) => Promise<HOSTING_APPS_LISTOutput>;
    /**
     * Promote a specific deployment to an existing route pattern and update routing cache
     */
    HOSTING_APPS_PROMOTE: (
      input: HOSTING_APPS_PROMOTEInput,
    ) => Promise<HOSTING_APPS_PROMOTEOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * Get the API key for an integration
     */
    INTEGRATIONS_GET_API_KEY: (
      input: INTEGRATIONS_GET_API_KEYInput,
    ) => Promise<INTEGRATIONS_GET_API_KEYOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
    /**
     * Add a file content into knowledge base
     */
    KNOWLEDGE_BASE_ADD_FILE: (
      input: KNOWLEDGE_BASE_ADD_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_ADD_FILEOutput>;
    /**
     * Create a knowledge base
     */
    KNOWLEDGE_BASE_CREATE: (
      input: KNOWLEDGE_BASE_CREATEInput,
    ) => Promise<KNOWLEDGE_BASE_CREATEOutput>;
    /**
     * Delete a knowledge base
     */
    KNOWLEDGE_BASE_DELETE: (
      input: KNOWLEDGE_BASE_DELETEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETEOutput>;
    /**
     * Delete a file from the knowledge base
     */
    KNOWLEDGE_BASE_DELETE_FILE: (
      input: KNOWLEDGE_BASE_DELETE_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETE_FILEOutput>;
    /**
     * Forget something
     */
    KNOWLEDGE_BASE_FORGET: (
      input: KNOWLEDGE_BASE_FORGETInput,
    ) => Promise<KNOWLEDGE_BASE_FORGETOutput>;
    /**
     * List all knowledge bases
     */
    KNOWLEDGE_BASE_LIST: (
      input: KNOWLEDGE_BASE_LISTInput,
    ) => Promise<KNOWLEDGE_BASE_LISTOutput>;
    /**
     * List all files in the knowledge base
     */
    KNOWLEDGE_BASE_LIST_FILES: (
      input: KNOWLEDGE_BASE_LIST_FILESInput,
    ) => Promise<KNOWLEDGE_BASE_LIST_FILESOutput>;
    /**
     * Remember something
     */
    KNOWLEDGE_BASE_REMEMBER: (
      input: KNOWLEDGE_BASE_REMEMBERInput,
    ) => Promise<KNOWLEDGE_BASE_REMEMBEROutput>;
    /**
     * Search the knowledge base
     */
    KNOWLEDGE_BASE_SEARCH: (
      input: KNOWLEDGE_BASE_SEARCHInput,
    ) => Promise<KNOWLEDGE_BASE_SEARCHOutput>;
    /**
     * List all branches in the current workspace
     */
    LIST_BRANCHES: (input: LIST_BRANCHESInput) => Promise<LIST_BRANCHESOutput>;
    /**
     * List files in a DECONFIG branch with optional prefix filtering and content inclusion
     */
    LIST_FILES: (input: LIST_FILESInput) => Promise<LIST_FILESOutput>;
    /**
     * Merge another branch into the current one with configurable strategy
     */
    MERGE_BRANCH: (input: MERGE_BRANCHInput) => Promise<MERGE_BRANCHOutput>;
    /**
     * Create a new model
     */
    MODELS_CREATE: (input: MODELS_CREATEInput) => Promise<MODELS_CREATEOutput>;
    /**
     * Delete a model by id
     */
    MODELS_DELETE: (input: MODELS_DELETEInput) => Promise<MODELS_DELETEOutput>;
    /**
     * Get a model by id
     */
    MODELS_GET: (input: MODELS_GETInput) => Promise<MODELS_GETOutput>;
    /**
     * List models for the current user
     */
    MODELS_LIST: (input: MODELS_LISTInput) => Promise<MODELS_LISTOutput>;
    /**
     * Update an existing model
     */
    MODELS_UPDATE: (input: MODELS_UPDATEInput) => Promise<MODELS_UPDATEOutput>;
    /**
     * Create an OAuth code for a given API key
     */
    OAUTH_CODE_CREATE: (
      input: OAUTH_CODE_CREATEInput,
    ) => Promise<OAUTH_CODE_CREATEOutput>;
    /**
     * Pre-authorize an amount of money for the current tenant's wallet
     */
    PRE_AUTHORIZE_AMOUNT: (
      input: PRE_AUTHORIZE_AMOUNTInput,
    ) => Promise<PRE_AUTHORIZE_AMOUNTOutput>;
    /**
     * Create a new prompt
     */
    PROMPTS_CREATE: (
      input: PROMPTS_CREATEInput,
    ) => Promise<PROMPTS_CREATEOutput>;
    /**
     * Delete a prompt by id
     */
    PROMPTS_DELETE: (
      input: PROMPTS_DELETEInput,
    ) => Promise<PROMPTS_DELETEOutput>;
    /**
     * Get a prompt by id
     */
    PROMPTS_GET: (input: PROMPTS_GETInput) => Promise<PROMPTS_GETOutput>;
    /**
     * Get the versions of a prompt
     */
    PROMPTS_GET_VERSIONS: (
      input: PROMPTS_GET_VERSIONSInput,
    ) => Promise<PROMPTS_GET_VERSIONSOutput>;
    /**
     * List prompts for the current workspace
     */
    PROMPTS_LIST: (input: PROMPTS_LISTInput) => Promise<PROMPTS_LISTOutput>;
    /**
     * Rename a prompt version
     */
    PROMPTS_RENAME_VERSION: (
      input: PROMPTS_RENAME_VERSIONInput,
    ) => Promise<PROMPTS_RENAME_VERSIONOutput>;
    /**
     * Update an existing prompt
     */
    PROMPTS_UPDATE: (
      input: PROMPTS_UPDATEInput,
    ) => Promise<PROMPTS_UPDATEOutput>;
    /**
     * Put a file in a DECONFIG branch (create or update) with optional conflict detection
     */
    PUT_FILE: (input: PUT_FILEInput) => Promise<PUT_FILEOutput>;
    /**
     * Read a file from a DECONFIG branch
     */
    READ_FILE: (input: READ_FILEInput) => Promise<READ_FILEOutput>;
    /**
     * Redeem a voucher for the current tenant's wallet
     */
    REDEEM_VOUCHER: (
      input: REDEEM_VOUCHERInput,
    ) => Promise<REDEEM_VOUCHEROutput>;
    /**
     * List all apps in the registry for the current workspace
     */
    REGISTRY_LIST_APPS: (
      input: REGISTRY_LIST_APPSInput,
    ) => Promise<REGISTRY_LIST_APPSOutput>;
    /**
     * List published apps by the current workspace
     */
    REGISTRY_LIST_PUBLISHED_APPS: (
      input: REGISTRY_LIST_PUBLISHED_APPSInput,
    ) => Promise<REGISTRY_LIST_PUBLISHED_APPSOutput>;
    /**
     * List all registry scopes
     */
    REGISTRY_LIST_SCOPES: (
      input: REGISTRY_LIST_SCOPESInput,
    ) => Promise<REGISTRY_LIST_SCOPESOutput>;
    /**
     * Publish an app to the registry (automatically claims scope on first use)
     */
    REGISTRY_PUBLISH_APP: (
      input: REGISTRY_PUBLISH_APPInput,
    ) => Promise<REGISTRY_PUBLISH_APPOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Add a custom view or resource to a team
     */
    TEAMS_ADD_VIEW: (
      input: TEAMS_ADD_VIEWInput,
    ) => Promise<TEAMS_ADD_VIEWOutput>;
    /**
     * Remove a custom view or resource from a team
     */
    TEAMS_REMOVE_VIEW: (
      input: TEAMS_REMOVE_VIEWInput,
    ) => Promise<TEAMS_REMOVE_VIEWOutput>;
    /**
     * Get a thread by thread id (without messages)
     */
    THREADS_GET: (input: THREADS_GETInput) => Promise<THREADS_GETOutput>;
    /**
     * Get only the messages for a thread by thread id
     */
    THREADS_GET_MESSAGES: (
      input: THREADS_GET_MESSAGESInput,
    ) => Promise<THREADS_GET_MESSAGESOutput>;
    /**
     * List all threads in a workspace with cursor-based pagination and filtering
     */
    THREADS_LIST: (input: THREADS_LISTInput) => Promise<THREADS_LISTOutput>;
    /**
     * Update a thread's metadata
     */
    THREADS_UPDATE_METADATA: (
      input: THREADS_UPDATE_METADATAInput,
    ) => Promise<THREADS_UPDATE_METADATAOutput>;
    /**
     * Update a thread's title
     */
    THREADS_UPDATE_TITLE: (
      input: THREADS_UPDATE_TITLEInput,
    ) => Promise<THREADS_UPDATE_TITLEOutput>;
    /**
     * Activate a trigger
     */
    TRIGGERS_ACTIVATE: (
      input: TRIGGERS_ACTIVATEInput,
    ) => Promise<TRIGGERS_ACTIVATEOutput>;
    /**
     * Create a trigger
     */
    TRIGGERS_CREATE: (
      input: TRIGGERS_CREATEInput,
    ) => Promise<TRIGGERS_CREATEOutput>;
    /**
     * Create a cron trigger
     */
    TRIGGERS_CREATE_CRON: (
      input: TRIGGERS_CREATE_CRONInput,
    ) => Promise<TRIGGERS_CREATE_CRONOutput>;
    /**
     * Create a webhook trigger
     */
    TRIGGERS_CREATE_WEBHOOK: (
      input: TRIGGERS_CREATE_WEBHOOKInput,
    ) => Promise<TRIGGERS_CREATE_WEBHOOKOutput>;
    /**
     * Deactivate a trigger
     */
    TRIGGERS_DEACTIVATE: (
      input: TRIGGERS_DEACTIVATEInput,
    ) => Promise<TRIGGERS_DEACTIVATEOutput>;
    /**
     * Delete a trigger
     */
    TRIGGERS_DELETE: (
      input: TRIGGERS_DELETEInput,
    ) => Promise<TRIGGERS_DELETEOutput>;
    /**
     * Get a trigger by ID
     */
    TRIGGERS_GET: (input: TRIGGERS_GETInput) => Promise<TRIGGERS_GETOutput>;
    /**
     * Get the webhook URL for a trigger
     */
    TRIGGERS_GET_WEBHOOK_URL: (
      input: TRIGGERS_GET_WEBHOOK_URLInput,
    ) => Promise<TRIGGERS_GET_WEBHOOK_URLOutput>;
    /**
     * List all triggers
     */
    TRIGGERS_LIST: (input: TRIGGERS_LISTInput) => Promise<TRIGGERS_LISTOutput>;
    /**
     * Update a trigger
     */
    TRIGGERS_UPDATE: (
      input: TRIGGERS_UPDATEInput,
    ) => Promise<TRIGGERS_UPDATEOutput>;
  }>;
  DECO_CHAT_API: Mcp<{
    /**
     * Make HTTP requests to any URL. Supports multiple HTTP methods (GET, POST, PUT, DELETE, PATCH, HEAD), custom headers, request body, and response parsing. Use this when you need to fetch data from external APIs or make HTTP calls that don't have a specific integration available. Supports both text and JSON response parsing.
     */
    HTTP_FETCH: (input: HTTP_FETCHInput) => Promise<HTTP_FETCHOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * List tools of a given integration
     */
    INTEGRATIONS_LIST_TOOLS: (
      input: INTEGRATIONS_LIST_TOOLSInput,
    ) => Promise<INTEGRATIONS_LIST_TOOLSOutput>;
    /**
     * List all team invites for the current logged in user
     */
    MY_INVITES_LIST: (
      input: MY_INVITES_LISTInput,
    ) => Promise<MY_INVITES_LISTOutput>;
    /**
     * Get the current user's profile
     */
    PROFILES_GET: (input: PROFILES_GETInput) => Promise<PROFILES_GETOutput>;
    /**
     * Update the current user's profile
     */
    PROFILES_UPDATE: (
      input: PROFILES_UPDATEInput,
    ) => Promise<PROFILES_UPDATEOutput>;
    /**
     * Register that the user accessed a project
     */
    PROJECT_ACTIVITY_REGISTER: (
      input: PROJECT_ACTIVITY_REGISTERInput,
    ) => Promise<PROJECT_ACTIVITY_REGISTEROutput>;
    /**
     * Create a new project in an organization
     */
    PROJECTS_CREATE: (
      input: PROJECTS_CREATEInput,
    ) => Promise<PROJECTS_CREATEOutput>;
    /**
     * List projects for an organization
     */
    PROJECTS_LIST: (input: PROJECTS_LISTInput) => Promise<PROJECTS_LISTOutput>;
    /**
     * List recent projects for the current user based on activity
     */
    PROJECTS_RECENT: (
      input: PROJECTS_RECENTInput,
    ) => Promise<PROJECTS_RECENTOutput>;
    /**
     * Update an existing project's properties
     */
    PROJECTS_UPDATE: (
      input: PROJECTS_UPDATEInput,
    ) => Promise<PROJECTS_UPDATEOutput>;
    /**
     * Get an app from the registry
     */
    REGISTRY_GET_APP: (
      input: REGISTRY_GET_APPInput,
    ) => Promise<REGISTRY_GET_APPOutput>;
    /**
     * Accept a team invitation
     */
    TEAM_INVITE_ACCEPT: (
      input: TEAM_INVITE_ACCEPTInput,
    ) => Promise<TEAM_INVITE_ACCEPTOutput>;
    /**
     * Delete a team invitation
     */
    TEAM_INVITE_DELETE: (
      input: TEAM_INVITE_DELETEInput,
    ) => Promise<TEAM_INVITE_DELETEOutput>;
    /**
     * Register that the user accessed a team
     */
    TEAM_MEMBER_ACTIVITY_REGISTER: (
      input: TEAM_MEMBER_ACTIVITY_REGISTERInput,
    ) => Promise<TEAM_MEMBER_ACTIVITY_REGISTEROutput>;
    /**
     * Get all members of a team
     */
    TEAM_MEMBERS_GET: (
      input: TEAM_MEMBERS_GETInput,
    ) => Promise<TEAM_MEMBERS_GETOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Remove a member from a team
     */
    TEAM_MEMBERS_REMOVE: (
      input: TEAM_MEMBERS_REMOVEInput,
    ) => Promise<TEAM_MEMBERS_REMOVEOutput>;
    /**
     * Update a team member. Usefull for updating admin status.
     */
    TEAM_MEMBERS_UPDATE: (
      input: TEAM_MEMBERS_UPDATEInput,
    ) => Promise<TEAM_MEMBERS_UPDATEOutput>;
    /**
     * Update a member's role in a team
     */
    TEAM_MEMBERS_UPDATE_ROLE: (
      input: TEAM_MEMBERS_UPDATE_ROLEInput,
    ) => Promise<TEAM_MEMBERS_UPDATE_ROLEOutput>;
    /**
     * Report a bug or idea within a team/project context
     */
    TEAM_REPORT_ISSUE_CREATE: (
      input: TEAM_REPORT_ISSUE_CREATEInput,
    ) => Promise<TEAM_REPORT_ISSUE_CREATEOutput>;
    /**
     * Create a new team role with associated policies and permissions
     */
    TEAM_ROLE_CREATE: (
      input: TEAM_ROLE_CREATEInput,
    ) => Promise<TEAM_ROLE_CREATEOutput>;
    /**
     * Delete a team role and its associated policies (only team-specific roles)
     */
    TEAM_ROLE_DELETE: (
      input: TEAM_ROLE_DELETEInput,
    ) => Promise<TEAM_ROLE_DELETEOutput>;
    /**
     * Get detailed information about a specific team role
     */
    TEAM_ROLE_GET: (input: TEAM_ROLE_GETInput) => Promise<TEAM_ROLE_GETOutput>;
    /**
     * Update a team role and its associated policies
     */
    TEAM_ROLE_UPDATE: (
      input: TEAM_ROLE_UPDATEInput,
    ) => Promise<TEAM_ROLE_UPDATEOutput>;
    /**
     * Get all roles available for a team, including basic deco roles
     */
    TEAM_ROLES_LIST: (
      input: TEAM_ROLES_LISTInput,
    ) => Promise<TEAM_ROLES_LISTOutput>;
    /**
     * Create a new team
     */
    TEAMS_CREATE: (input: TEAMS_CREATEInput) => Promise<TEAMS_CREATEOutput>;
    /**
     * Delete a team by id
     */
    TEAMS_DELETE: (input: TEAMS_DELETEInput) => Promise<TEAMS_DELETEOutput>;
    /**
     * Get a team by slug
     */
    TEAMS_GET: (input: TEAMS_GETInput) => Promise<TEAMS_GETOutput>;
    /**
     * Get the theme for a workspace
     */
    TEAMS_GET_THEME: (
      input: TEAMS_GET_THEMEInput,
    ) => Promise<TEAMS_GET_THEMEOutput>;
    /**
     * List teams for the current user
     */
    TEAMS_LIST: (input: TEAMS_LISTInput) => Promise<TEAMS_LISTOutput>;
    /**
     * Update an existing team including theme customization
     */
    TEAMS_UPDATE: (input: TEAMS_UPDATEInput) => Promise<TEAMS_UPDATEOutput>;
  }>;
  SELF: Mcp<{
    /**
     * OAuth for Deco Chat
     */
    DECO_CHAT_OAUTH_START: (
      input: DECO_CHAT_OAUTH_STARTInput,
    ) => Promise<DECO_CHAT_OAUTH_STARTOutput>;
    /**
     * Validate the state of the OAuth flow
     */
    DECO_CHAT_STATE_VALIDATION: (
      input: DECO_CHAT_STATE_VALIDATIONInput,
    ) => Promise<DECO_CHAT_STATE_VALIDATIONOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Generate a workflow step using AI based on objective
     */
    GENERATE_STEP: (input: GENERATE_STEPInput) => Promise<GENERATE_STEPOutput>;
    /**
     * Generate a custom input view for a specific workflow step field using AI
     */
    GENERATE_STEP_INPUT_VIEW: (
      input: GENERATE_STEP_INPUT_VIEWInput,
    ) => Promise<GENERATE_STEP_INPUT_VIEWOutput>;
    /**
     * Generate a custom output view for a specific workflow step using AI
     */
    GENERATE_STEP_OUTPUT_VIEW: (
      input: GENERATE_STEP_OUTPUT_VIEWInput,
    ) => Promise<GENERATE_STEP_OUTPUT_VIEWOutput>;
    /**
     * Generate a custom input or output view definition using AI. Returns a JSON structure that can be rendered as UI components.
     */
    GENERATE_VIEW: (input: GENERATE_VIEWInput) => Promise<GENERATE_VIEWOutput>;
    /**
     * Get example view definitions for different use cases
     */
    GET_VIEW_EXAMPLES: (
      input: GET_VIEW_EXAMPLESInput,
    ) => Promise<GET_VIEW_EXAMPLESOutput>;
    /**
     * Generate a workflow step that directly calls a specific tool (without AI)
     */
    IMPORT_TOOL_AS_STEP: (
      input: IMPORT_TOOL_AS_STEPInput,
    ) => Promise<IMPORT_TOOL_AS_STEPOutput>;
    /**
     * List all installed integrations and tools available in the current workspace
     */
    LIST_INSTALLED_INTEGRATIONS: (
      input: LIST_INSTALLED_INTEGRATIONSInput,
    ) => Promise<LIST_INSTALLED_INTEGRATIONSOutput>;
    /**
     * Read a workflow
     */
    READ_WORKFLOW: (input: READ_WORKFLOWInput) => Promise<READ_WORKFLOWOutput>;
    /**
     * Execute a workflow step with @ref resolution and optional authorization
     */
    RUN_WORKFLOW_STEP: (
      input: RUN_WORKFLOW_STEPInput,
    ) => Promise<RUN_WORKFLOW_STEPOutput>;
    /**
     * Update a workflow
     */
    UPDATE_WORKFLOW: (
      input: UPDATE_WORKFLOWInput,
    ) => Promise<UPDATE_WORKFLOWOutput>;
    /**
     * Validate a view definition structure and provide feedback
     */
    VALIDATE_VIEW: (input: VALIDATE_VIEWInput) => Promise<VALIDATE_VIEWOutput>;
  }>;
}

export const Scopes = {
  AI_GATEWAY: {
    AI_GENERATE: "AI_GATEWAY::AI_GENERATE",
    AI_GENERATE_OBJECT: "AI_GATEWAY::AI_GENERATE_OBJECT",
  },
  TOOLS: {
    DECO_RESOURCE_TOOL_CREATE: "TOOLS::DECO_RESOURCE_TOOL_CREATE",
    DECO_RESOURCE_TOOL_DELETE: "TOOLS::DECO_RESOURCE_TOOL_DELETE",
    DECO_RESOURCE_TOOL_READ: "TOOLS::DECO_RESOURCE_TOOL_READ",
    DECO_RESOURCE_TOOL_SEARCH: "TOOLS::DECO_RESOURCE_TOOL_SEARCH",
    DECO_RESOURCE_TOOL_UPDATE: "TOOLS::DECO_RESOURCE_TOOL_UPDATE",
    DECO_TOOL_CALL_TOOL: "TOOLS::DECO_TOOL_CALL_TOOL",
    DECO_TOOL_RUN_TOOL: "TOOLS::DECO_TOOL_RUN_TOOL",
    DECO_VIEW_RENDER_TOOL_DETAIL: "TOOLS::DECO_VIEW_RENDER_TOOL_DETAIL",
  },
  WORKFLOWS_MANAGEMENT: {
    DECO_CHAT_VIEWS_LIST: "WORKFLOWS_MANAGEMENT::DECO_CHAT_VIEWS_LIST",
    DECO_RESOURCE_WORKFLOW_CREATE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_CREATE",
    DECO_RESOURCE_WORKFLOW_DELETE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_DELETE",
    DECO_RESOURCE_WORKFLOW_READ:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_READ",
    DECO_RESOURCE_WORKFLOW_RUN_READ:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_RUN_READ",
    DECO_RESOURCE_WORKFLOW_RUN_SEARCH:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_RUN_SEARCH",
    DECO_RESOURCE_WORKFLOW_SEARCH:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_SEARCH",
    DECO_RESOURCE_WORKFLOW_UPDATE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_UPDATE",
    DECO_VIEW_RENDER_WORKFLOW_DETAIL:
      "WORKFLOWS_MANAGEMENT::DECO_VIEW_RENDER_WORKFLOW_DETAIL",
    DECO_VIEW_RENDER_WORKFLOW_RUN:
      "WORKFLOWS_MANAGEMENT::DECO_VIEW_RENDER_WORKFLOW_RUN",
    DECO_WORKFLOW_START: "WORKFLOWS_MANAGEMENT::DECO_WORKFLOW_START",
  },
  INTEGRATIONS: {
    DECO_GET_APP_SCHEMA: "INTEGRATIONS::DECO_GET_APP_SCHEMA",
    DECO_INTEGRATION_INSTALL: "INTEGRATIONS::DECO_INTEGRATION_INSTALL",
    DECO_INTEGRATION_OAUTH_START: "INTEGRATIONS::DECO_INTEGRATION_OAUTH_START",
    DECO_INTEGRATIONS_SEARCH: "INTEGRATIONS::DECO_INTEGRATIONS_SEARCH",
    INTEGRATIONS_CALL_TOOL: "INTEGRATIONS::INTEGRATIONS_CALL_TOOL",
    INTEGRATIONS_CREATE: "INTEGRATIONS::INTEGRATIONS_CREATE",
    INTEGRATIONS_DELETE: "INTEGRATIONS::INTEGRATIONS_DELETE",
    INTEGRATIONS_GET: "INTEGRATIONS::INTEGRATIONS_GET",
    INTEGRATIONS_GET_API_KEY: "INTEGRATIONS::INTEGRATIONS_GET_API_KEY",
    INTEGRATIONS_LIST: "INTEGRATIONS::INTEGRATIONS_LIST",
    INTEGRATIONS_UPDATE: "INTEGRATIONS::INTEGRATIONS_UPDATE",
  },
};
