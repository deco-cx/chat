// Generated types - do not edit manually

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to fetch content from
 */
export type String = string;
/**
 * The HTTP method to use for the request
 */
export type String_1 = "GET" | "PUT" | "POST" | "DELETE" | "PATCH" | "HEAD";
export type String_2 = string;
/**
 * How to parse the response body: 'text' returns the raw text, 'json' parses and returns JSON
 */
export type String_3 = "text" | "json";
/**
 * Request timeout in milliseconds (1000-30000)
 */
export type Integer = number;

export interface HTTP_FETCHInput {
  url: String;
  method?: String_1;
  headers?: Object;
  /**
   * Optional body to send with the request
   */
  body?: {
    [k: string]: unknown;
  };
  responseType?: String_3;
  timeout?: Integer;
}
/**
 * Optional headers to include with the request
 */
export interface Object {
  [k: string]: String_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_4 = string;
/**
 * The HTTP status code of the response
 */
export type Number = number;
/**
 * The HTTP status text of the response
 */
export type String_5 = string;
export type String_6 = string;
/**
 * Whether the request was successful (status in 200-299 range)
 */
export type Boolean = boolean;

export interface HTTP_FETCHOutput {
  /**
   * The response body (string for text, parsed object for JSON)
   */
  body?: String_4;
  status: Number;
  statusText: String_5;
  headers: Object_1;
  ok: Boolean;
}
/**
 * The response headers
 */
export interface Object_1 {
  [k: string]: String_6;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_7 = string;
export type String_8 = "HTTP";
export type String_9 = string;
export type String_10 = string;
export type String_11 = "SSE";
export type String_12 = string;
export type String_13 = string;
export type String_14 = string;
export type String_15 = "Websocket";
export type String_16 = string;
export type String_17 = string;
export type String_18 = "Deco";
export type String_19 = string;
export type String_20 = string;
export type String_21 = "INNATE";
export type String_22 = string;
export type String_23 = string;
export type String_24 = string;
export type Integer_1 = number;
export type String_25 = string;

export interface INTEGRATIONS_CALL_TOOLInput {
  id?: String_7;
  connection?: Object_2 | Object_3 | Object_5 | Object_6 | Object_7;
  params: Object_8;
}
export interface Object_2 {
  type: String_8;
  url: String_9;
  token?: String_10;
}
export interface Object_3 {
  type: String_11;
  url: String_12;
  token?: String_13;
  headers?: Object_4;
}
export interface Object_4 {
  [k: string]: String_14;
}
export interface Object_5 {
  type: String_15;
  url: String_16;
  token?: String_17;
}
export interface Object_6 {
  type: String_18;
  tenant: String_19;
  token?: String_20;
}
export interface Object_7 {
  type: String_21;
  name: String_22;
  workspace?: String_23;
}
export interface Object_8 {
  _meta?: Object_9;
  name: String_25;
  arguments?: Object_10;
  [k: string]: unknown;
}
export interface Object_9 {
  progressToken?: String_24 | Integer_1;
  [k: string]: unknown;
}
export interface Object_10 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_26 = "HTTP";
export type String_27 = string;
export type String_28 = string;
export type String_29 = "SSE";
export type String_30 = string;
export type String_31 = string;
export type String_32 = string;
export type String_33 = "Websocket";
export type String_34 = string;
export type String_35 = string;
export type String_36 = "Deco";
export type String_37 = string;
export type String_38 = string;
export type String_39 = "INNATE";
export type String_40 = string;
export type String_41 = string;
/**
 * Whether to ignore the cache when listing tools
 */
export type Boolean_1 = boolean;

export interface INTEGRATIONS_LIST_TOOLSInput {
  connection: Object_11 | Object_12 | Object_14 | Object_15 | Object_16;
  ignoreCache?: Boolean_1;
}
export interface Object_11 {
  type: String_26;
  url: String_27;
  token?: String_28;
}
export interface Object_12 {
  type: String_29;
  url: String_30;
  token?: String_31;
  headers?: Object_13;
}
export interface Object_13 {
  [k: string]: String_32;
}
export interface Object_14 {
  type: String_33;
  url: String_34;
  token?: String_35;
}
export interface Object_15 {
  type: String_36;
  tenant: String_37;
  token?: String_38;
}
export interface Object_16 {
  type: String_39;
  name: String_40;
  workspace?: String_41;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_LIST_TOOLSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MY_INVITES_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array = unknown[];

export interface MY_INVITES_LISTOutput {
  items: Array;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull = String_42 | Null;
export type String_42 = string;
export type Null = null;
export type String_43 = string;
export type NumberNull = Number_1 | Null_1;
export type Number_1 = number;
export type Null_1 = null;
export type BooleanNull = Boolean_2 | Null_2;
export type Boolean_2 = boolean;
export type Null_2 = null;
export type StringNull_1 = String_44 | Null_3;
export type String_44 = string;
export type Null_3 = null;

export interface PROFILES_UPDATEInput {
  name?: StringNull;
  email?: String_43;
  deco_user_id?: NumberNull;
  is_new_user?: BooleanNull;
  phone?: StringNull_1;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_45 = string;
export type String_46 = string;

export interface PROJECT_ACTIVITY_REGISTERInput {
  org: String_45;
  project: String_46;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECT_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The organization slug
 */
export type String_47 = string;
/**
 * The project slug (URL-friendly identifier)
 */
export type String_48 = string;
/**
 * The project title
 */
export type String_49 = string;
/**
 * The project description
 */
export type String_50 = string;
/**
 * The project icon URL or path
 */
export type String_51 = string;

export interface PROJECTS_CREATEInput {
  org: String_47;
  slug: String_48;
  title: String_49;
  description?: String_50;
  icon?: String_51;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_52 = string;
export type String_53 = string;
export type String_54 = string;
export type StringNull_2 = String_55 | Null_4;
export type String_55 = string;
export type Null_4 = null;
export type Number_2 = number;
export type String_56 = string;
export type StringNull_3 = String_57 | Null_5;
export type String_57 = string;
export type Null_5 = null;

export interface PROJECTS_CREATEOutput {
  id: String_52;
  title: String_53;
  slug: String_54;
  avatar_url: StringNull_2;
  org: Object_17;
}
export interface Object_17 {
  id: Number_2;
  slug: String_56;
  avatar_url?: StringNull_3;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_58 = string;

export interface PROJECTS_LISTInput {
  org: String_58;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECTS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Integer_2 = number;

export interface PROJECTS_RECENTInput {
  limit?: Integer_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_59 = string;
export type String_60 = string;
export type String_61 = string;
export type StringNull_4 = String_62 | Null_6;
export type String_62 = string;
export type Null_6 = null;
export type Number_3 = number;
export type String_63 = string;
export type StringNull_5 = String_64 | Null_7;
export type String_64 = string;
export type Null_7 = null;
export type String_65 = string;
export type Array_1 = Object_18[];

export interface PROJECTS_RECENTOutput {
  items: Array_1;
}
export interface Object_18 {
  id: String_59;
  title: String_60;
  slug: String_61;
  avatar_url: StringNull_4;
  org: Object_19;
  last_accessed_at?: String_65;
}
export interface Object_19 {
  id: Number_3;
  slug: String_63;
  avatar_url?: StringNull_5;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The organization slug
 */
export type String_66 = string;
/**
 * The project slug
 */
export type String_67 = string;
/**
 * The new title for the project
 */
export type String_68 = string;

export interface PROJECTS_UPDATEInput {
  org: String_66;
  project: String_67;
  data: Object_20;
}
export interface Object_20 {
  title?: String_68;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_69 = string;
export type String_70 = string;
export type String_71 = string;
export type StringNull_6 = String_72 | Null_8;
export type String_72 = string;
export type Null_8 = null;
export type Number_4 = number;
export type String_73 = string;
export type StringNull_7 = String_74 | Null_9;
export type String_74 = string;
export type Null_9 = null;

export interface PROJECTS_UPDATEOutput {
  id: String_69;
  title: String_70;
  slug: String_71;
  avatar_url: StringNull_6;
  org: Object_21;
}
export interface Object_21 {
  id: Number_4;
  slug: String_73;
  avatar_url?: StringNull_7;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the app to get
 */
export type String_75 = string;
/**
 * The id of the app to get
 */
export type String_76 = string;

export interface REGISTRY_GET_APPInput {
  name?: String_75;
  id?: String_76;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_GET_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_77 = string;

export interface TEAM_INVITE_ACCEPTInput {
  id: String_77;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_ACCEPTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_78 = string;

export interface TEAM_INVITE_DELETEInput {
  id: String_78;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_5 = number;

export interface TEAM_MEMBER_ACTIVITY_REGISTERInput {
  teamId: Number_5;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBER_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_6 = number;
export type Boolean_3 = boolean;

export interface TEAM_MEMBERS_GETInput {
  teamId: Number_6;
  withActivity?: Boolean_3;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_79 = string;
export type String_80 = string;
export type Number_7 = number;
export type String_81 = string;
export type Array_3 = Object_23[];
export type Array_2 = Object_22[];

export interface TEAM_MEMBERS_INVITEInput {
  teamId: String_79;
  invitees: Array_2;
}
export interface Object_22 {
  email: String_80;
  roles: Array_3;
}
export interface Object_23 {
  id: Number_7;
  name: String_81;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_8 = number;
export type Number_9 = number;

export interface TEAM_MEMBERS_REMOVEInput {
  teamId: Number_8;
  memberId: Number_9;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_REMOVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_10 = number;
export type Number_11 = number;
export type Boolean_4 = boolean;

export interface TEAM_MEMBERS_UPDATEInput {
  teamId: Number_10;
  memberId: Number_11;
  data: Object_24;
}
export interface Object_24 {
  admin?: Boolean_4;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_12 = number;
export type String_82 = string;
export type Number_13 = number;
export type String_83 = "grant" | "revoke";

export interface TEAM_MEMBERS_UPDATE_ROLEInput {
  teamId: Number_12;
  userId: String_82;
  roleId: Number_13;
  action: String_83;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATE_ROLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_84 = string;
export type String_85 = string;
export type String_86 = "Bug" | "Idea";
export type String_87 = string;
export type String_88 = string;
export type String_89 = string;

export interface TEAM_REPORT_ISSUE_CREATEInput {
  orgSlug?: String_84;
  projectSlug?: String_85;
  type: String_86;
  content: String_87;
  url?: String_88;
  path?: String_89;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_REPORT_ISSUE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_14 = number;
export type String_90 = string;
export type String_91 = string;
export type String_92 = string;
export type String_93 = "allow" | "deny";
export type String_94 = string;
export type Array_4 = Object_27[];
export type String_95 = string;
export type Array_5 = String_95[];
export type String_96 = string;
export type String_97 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_6 = Object_28[];

export interface TEAM_ROLE_CREATEInput {
  teamId: Number_14;
  roleData: Object_25;
}
export interface Object_25 {
  name: String_90;
  description?: String_91;
  tools: Object_26;
  agents?: Array_5;
  members?: Array_6;
}
export interface Object_26 {
  [k: string]: Array_4;
}
export interface Object_27 {
  toolName: String_92;
  effect: String_93;
  policyId?: String_94;
}
export interface Object_28 {
  user_id: String_96;
  action: String_97;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_15 = number;
export type Number_16 = number;

export interface TEAM_ROLE_DELETEInput {
  teamId: Number_15;
  roleId: Number_16;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_17 = number;
export type Number_18 = number;

export interface TEAM_ROLE_GETInput {
  teamId: Number_17;
  roleId: Number_18;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_19 = number;
export type Number_20 = number;
export type String_98 = string;
export type String_99 = string;
export type String_100 = string;
export type String_101 = "allow" | "deny";
export type String_102 = string;
export type Array_7 = Object_31[];
export type String_103 = string;
export type Array_8 = String_103[];
export type String_104 = string;
export type String_105 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_9 = Object_32[];

export interface TEAM_ROLE_UPDATEInput {
  teamId: Number_19;
  roleId: Number_20;
  roleData: Object_29;
}
export interface Object_29 {
  name: String_98;
  description?: String_99;
  tools: Object_30;
  agents?: Array_8;
  members?: Array_9;
}
export interface Object_30 {
  [k: string]: Array_7;
}
export interface Object_31 {
  toolName: String_100;
  effect: String_101;
  policyId?: String_102;
}
export interface Object_32 {
  user_id: String_104;
  action: String_105;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_21 = number;

export interface TEAM_ROLES_LISTInput {
  teamId: Number_21;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_10 = unknown[];

export interface TEAM_ROLES_LISTOutput {
  items: Array_10;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_106 = string;
export type String_107 = string;

export interface TEAMS_CREATEInput {
  name: String_106;
  slug?: String_107;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_22 = number;

export interface TEAMS_DELETEInput {
  teamId: Number_22;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_108 = string;

export interface TEAMS_GETInput {
  slug: String_108;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_109 = string;

export interface TEAMS_GET_THEMEInput {
  slug: String_109;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GET_THEMEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_11 = unknown[];

export interface TEAMS_LISTOutput {
  items: Array_11;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the team to update
 */
export type Number_23 = number;
/**
 * Team name
 */
export type String_110 = string;
/**
 * Team URL slug
 */
export type String_111 = string;
/**
 * Main background color of the application (OKLCH/hex format)
 */
export type String_112 = string;
/**
 * Main text color on background (OKLCH/hex format)
 */
export type String_113 = string;
/**
 * Background color for cards and panels (OKLCH/hex format)
 */
export type String_114 = string;
/**
 * Text color on cards and panels (OKLCH/hex format)
 */
export type String_115 = string;
/**
 * Background color for popovers and dropdowns (OKLCH/hex format)
 */
export type String_116 = string;
/**
 * Text color in popovers and dropdowns (OKLCH/hex format)
 */
export type String_117 = string;
/**
 * Primary brand color for buttons and highlights (OKLCH/hex format)
 */
export type String_118 = string;
/**
 * Text color on primary elements (OKLCH/hex format)
 */
export type String_119 = string;
/**
 * Lighter variant of primary color (OKLCH/hex format)
 */
export type String_120 = string;
/**
 * Darker variant of primary color (OKLCH/hex format)
 */
export type String_121 = string;
/**
 * Secondary color for less prominent elements (OKLCH/hex format)
 */
export type String_122 = string;
/**
 * Text color on secondary elements (OKLCH/hex format)
 */
export type String_123 = string;
/**
 * Muted background color for subtle elements (OKLCH/hex format)
 */
export type String_124 = string;
/**
 * Muted text color for secondary text (OKLCH/hex format)
 */
export type String_125 = string;
/**
 * Accent color for interactive elements (OKLCH/hex format)
 */
export type String_126 = string;
/**
 * Text color on accent elements (OKLCH/hex format)
 */
export type String_127 = string;
/**
 * Color for destructive actions and errors (OKLCH/hex format)
 */
export type String_128 = string;
/**
 * Text color on destructive elements (OKLCH/hex format)
 */
export type String_129 = string;
/**
 * Color for success states and positive actions (OKLCH/hex format)
 */
export type String_130 = string;
/**
 * Text color on success elements (OKLCH/hex format)
 */
export type String_131 = string;
/**
 * Color for warning states and caution indicators (OKLCH/hex format)
 */
export type String_132 = string;
/**
 * Text color on warning elements (OKLCH/hex format)
 */
export type String_133 = string;
/**
 * Border color for elements (OKLCH/hex format)
 */
export type String_134 = string;
/**
 * Border color for input fields (OKLCH/hex format)
 */
export type String_135 = string;
/**
 * Background color for sidebar navigation (OKLCH/hex format)
 */
export type String_136 = string;
/**
 * Text color in sidebar navigation (OKLCH/hex format)
 */
export type String_137 = string;
/**
 * Accent background color for sidebar elements (OKLCH/hex format)
 */
export type String_138 = string;
/**
 * Text color on sidebar accent elements (OKLCH/hex format)
 */
export type String_139 = string;
/**
 * Border color for sidebar elements (OKLCH/hex format)
 */
export type String_140 = string;
/**
 * Focus ring color for sidebar elements (OKLCH/hex format)
 */
export type String_141 = string;
/**
 * Background color for splash screen animation (OKLCH/hex format)
 */
export type String_142 = string;
/**
 * URL to team avatar/logo image
 */
export type String_143 = string;
/**
 * Use a Google Fonts font
 */
export type String_144 = "Google Fonts";
/**
 * Name of the Google Font (e.g., 'Inter', 'Roboto', 'Open Sans')
 */
export type String_145 = string;
/**
 * Use a custom uploaded font
 */
export type String_146 = "Custom";
/**
 * Display name for the custom font
 */
export type String_147 = string;
/**
 * URL to the custom font file
 */
export type String_148 = string;

export interface TEAMS_UPDATEInput {
  id: Number_23;
  data: Object_33;
}
export interface Object_33 {
  name?: String_110;
  slug?: String_111;
  theme?: Object_34;
}
/**
 * Theme configuration for the workspace. Only include the properties you want to change - existing values will be preserved.
 */
export interface Object_34 {
  variables?: Object_35;
  picture?: String_143;
  /**
   * Font configuration for the workspace
   */
  font?: Object_36 | Object_37;
}
/**
 * CSS custom properties for theme colors. Use OKLCH format (preferred) or hex colors.
 */
export interface Object_35 {
  "--background"?: String_112;
  "--foreground"?: String_113;
  "--card"?: String_114;
  "--card-foreground"?: String_115;
  "--popover"?: String_116;
  "--popover-foreground"?: String_117;
  "--primary"?: String_118;
  "--primary-foreground"?: String_119;
  "--primary-light"?: String_120;
  "--primary-dark"?: String_121;
  "--secondary"?: String_122;
  "--secondary-foreground"?: String_123;
  "--muted"?: String_124;
  "--muted-foreground"?: String_125;
  "--accent"?: String_126;
  "--accent-foreground"?: String_127;
  "--destructive"?: String_128;
  "--destructive-foreground"?: String_129;
  "--success"?: String_130;
  "--success-foreground"?: String_131;
  "--warning"?: String_132;
  "--warning-foreground"?: String_133;
  "--border"?: String_134;
  "--input"?: String_135;
  "--sidebar"?: String_136;
  "--sidebar-foreground"?: String_137;
  "--sidebar-accent"?: String_138;
  "--sidebar-accent-foreground"?: String_139;
  "--sidebar-border"?: String_140;
  "--sidebar-ring"?: String_141;
  "--splash"?: String_142;
}
export interface Object_36 {
  type: String_144;
  name: String_145;
}
export interface Object_37 {
  type: String_146;
  name: String_147;
  url: String_148;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_149 = string;
/**
 * Human-readable name of the agent
 */
export type String_150 = string;
/**
 * URL to the agent's avatar image
 */
export type String_151 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_152 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_153 = string;
export type String_154 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_12 = String_154[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_24 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_1 = Number_25 | Null_10;
export type Number_25 = number;
export type Null_10 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_155 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_156 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_26 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_5 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_6 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_157 = string;
/**
 * URL for the view
 */
export type String_158 = string;
/**
 * Name of the view
 */
export type String_159 = string;
/**
 * Views where the agent can be used
 */
export type Array_13 = Object_41[];
/**
 * Visibility of the agent
 */
export type String_160 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_161 = string;
export type Null_11 = null;
export type Number_27 = number;
export type Null_12 = null;

export interface AGENTS_CREATEInput {
  id?: String_149;
  name?: String_150;
  avatar?: String_151;
  instructions?: String_152;
  description?: String_153;
  tools_set?: Object_38;
  max_steps?: Number_24;
  max_tokens?: NumberNull_1;
  model?: String_155;
  memory?: Object_39;
  views?: Array_13;
  visibility?: String_160;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_161
      )
    | Null_11;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_27
      )
    | Null_12;
}
/**
 * Tools available to the agent
 */
export interface Object_38 {
  [k: string]: Array_12;
}
/**
 * Memory to use for the agent
 */
export interface Object_39 {
  discriminator?: String_156;
  last_messages?: Number_26;
  semantic_recall?: Boolean_5;
  working_memory?: Object_40;
}
/**
 * Working memory to use for the agent
 */
export interface Object_40 {
  enabled?: Boolean_6;
  template?: String_157;
}
export interface Object_41 {
  url: String_158;
  name: String_159;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_162 = string;
/**
 * Human-readable name of the agent
 */
export type String_163 = string;
/**
 * URL to the agent's avatar image
 */
export type String_164 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_165 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_166 = string;
export type String_167 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_14 = String_167[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_28 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_2 = Number_29 | Null_13;
export type Number_29 = number;
export type Null_13 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_168 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_169 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_30 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_7 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_8 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_170 = string;
/**
 * URL for the view
 */
export type String_171 = string;
/**
 * Name of the view
 */
export type String_172 = string;
/**
 * Views where the agent can be used
 */
export type Array_15 = Object_45[];
/**
 * Visibility of the agent
 */
export type String_173 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_174 = string;
export type Null_14 = null;
export type Number_31 = number;
export type Null_15 = null;

export interface AGENTS_CREATEOutput {
  id: String_162;
  name: String_163;
  avatar: String_164;
  instructions: String_165;
  description?: String_166;
  tools_set: Object_42;
  max_steps?: Number_28;
  max_tokens?: NumberNull_2;
  model?: String_168;
  memory?: Object_43;
  views: Array_15;
  visibility: String_173;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_174
      )
    | Null_14;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_31
      )
    | Null_15;
}
/**
 * Tools available to the agent
 */
export interface Object_42 {
  [k: string]: Array_14;
}
/**
 * Memory to use for the agent
 */
export interface Object_43 {
  discriminator?: String_169;
  last_messages?: Number_30;
  semantic_recall?: Boolean_7;
  working_memory?: Object_44;
}
/**
 * Working memory to use for the agent
 */
export interface Object_44 {
  enabled?: Boolean_8;
  template?: String_170;
}
export interface Object_45 {
  url: String_171;
  name: String_172;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_175 = string;

export interface AGENTS_DELETEInput {
  id: String_175;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_9 = boolean;

export interface AGENTS_DELETEOutput {
  deleted: Boolean_9;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_176 = string;

export interface AGENTS_GETInput {
  id: String_176;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_177 = string;
/**
 * Human-readable name of the agent
 */
export type String_178 = string;
/**
 * URL to the agent's avatar image
 */
export type String_179 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_180 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_181 = string;
export type String_182 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_16 = String_182[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_32 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_3 = Number_33 | Null_16;
export type Number_33 = number;
export type Null_16 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_183 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_184 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_34 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_10 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_11 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_185 = string;
/**
 * URL for the view
 */
export type String_186 = string;
/**
 * Name of the view
 */
export type String_187 = string;
/**
 * Views where the agent can be used
 */
export type Array_17 = Object_49[];
/**
 * Visibility of the agent
 */
export type String_188 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_189 = string;
export type Null_17 = null;
export type Number_35 = number;
export type Null_18 = null;

export interface AGENTS_GETOutput {
  id: String_177;
  name: String_178;
  avatar: String_179;
  instructions: String_180;
  description?: String_181;
  tools_set: Object_46;
  max_steps?: Number_32;
  max_tokens?: NumberNull_3;
  model?: String_183;
  memory?: Object_47;
  views: Array_17;
  visibility: String_188;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_189
      )
    | Null_17;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_35
      )
    | Null_18;
}
/**
 * Tools available to the agent
 */
export interface Object_46 {
  [k: string]: Array_16;
}
/**
 * Memory to use for the agent
 */
export interface Object_47 {
  discriminator?: String_184;
  last_messages?: Number_34;
  semantic_recall?: Boolean_10;
  working_memory?: Object_48;
}
/**
 * Working memory to use for the agent
 */
export interface Object_48 {
  enabled?: Boolean_11;
  template?: String_185;
}
export interface Object_49 {
  url: String_186;
  name: String_187;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AGENTS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_190 = string;
/**
 * Human-readable name of the agent
 */
export type String_191 = string;
/**
 * URL to the agent's avatar image
 */
export type String_192 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_193 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_194 = string;
export type String_195 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_19 = String_195[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_36 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_4 = Number_37 | Null_19;
export type Number_37 = number;
export type Null_19 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_196 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_197 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_38 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_12 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_13 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_198 = string;
/**
 * URL for the view
 */
export type String_199 = string;
/**
 * Name of the view
 */
export type String_200 = string;
/**
 * Views where the agent can be used
 */
export type Array_20 = Object_54[];
/**
 * Visibility of the agent
 */
export type String_201 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_202 = string;
export type Null_20 = null;
export type Number_39 = number;
export type Null_21 = null;
export type StringNull_8 = String_203 | Null_22;
export type String_203 = string;
export type Null_22 = null;
export type StringNull_9 = String_204 | Null_23;
export type String_204 = string;
export type Null_23 = null;
export type Array_18 = Object_50[];

export interface AGENTS_LISTOutput {
  items: Array_18;
}
export interface Object_50 {
  id: String_190;
  name: String_191;
  avatar: String_192;
  instructions: String_193;
  description?: String_194;
  tools_set: Object_51;
  max_steps?: Number_36;
  max_tokens?: NumberNull_4;
  model?: String_196;
  memory?: Object_52;
  views: Array_20;
  visibility: String_201;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_202
      )
    | Null_20;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_39
      )
    | Null_21;
  lastAccess?: StringNull_8;
  lastAccessor?: StringNull_9;
}
/**
 * Tools available to the agent
 */
export interface Object_51 {
  [k: string]: Array_19;
}
/**
 * Memory to use for the agent
 */
export interface Object_52 {
  discriminator?: String_197;
  last_messages?: Number_38;
  semantic_recall?: Boolean_12;
  working_memory?: Object_53;
}
/**
 * Working memory to use for the agent
 */
export interface Object_53 {
  enabled?: Boolean_13;
  template?: String_198;
}
export interface Object_54 {
  url: String_199;
  name: String_200;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_205 = string;
/**
 * Unique identifier for the agent
 */
export type String_206 = string;
/**
 * Human-readable name of the agent
 */
export type String_207 = string;
/**
 * URL to the agent's avatar image
 */
export type String_208 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_209 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_210 = string;
export type String_211 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_21 = String_211[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_40 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_5 = Number_41 | Null_24;
export type Number_41 = number;
export type Null_24 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_212 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_213 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_42 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_14 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_15 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_214 = string;
/**
 * URL for the view
 */
export type String_215 = string;
/**
 * Name of the view
 */
export type String_216 = string;
/**
 * Views where the agent can be used
 */
export type Array_22 = Object_59[];
/**
 * Visibility of the agent
 */
export type String_217 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_218 = string;
export type Null_25 = null;
export type Number_43 = number;
export type Null_26 = null;

export interface AGENTS_UPDATEInput {
  id: String_205;
  agent: Object_55;
}
export interface Object_55 {
  id?: String_206;
  name?: String_207;
  avatar?: String_208;
  instructions?: String_209;
  description?: String_210;
  tools_set?: Object_56;
  max_steps?: Number_40;
  max_tokens?: NumberNull_5;
  model?: String_212;
  memory?: Object_57;
  views?: Array_22;
  visibility?: String_217;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_218
      )
    | Null_25;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_43
      )
    | Null_26;
}
/**
 * Tools available to the agent
 */
export interface Object_56 {
  [k: string]: Array_21;
}
/**
 * Memory to use for the agent
 */
export interface Object_57 {
  discriminator?: String_213;
  last_messages?: Number_42;
  semantic_recall?: Boolean_14;
  working_memory?: Object_58;
}
/**
 * Working memory to use for the agent
 */
export interface Object_58 {
  enabled?: Boolean_15;
  template?: String_214;
}
export interface Object_59 {
  url: String_215;
  name: String_216;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_219 = string;
/**
 * Human-readable name of the agent
 */
export type String_220 = string;
/**
 * URL to the agent's avatar image
 */
export type String_221 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_222 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_223 = string;
export type String_224 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_23 = String_224[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_44 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_6 = Number_45 | Null_27;
export type Number_45 = number;
export type Null_27 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_225 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_226 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_46 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_16 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_17 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_227 = string;
/**
 * URL for the view
 */
export type String_228 = string;
/**
 * Name of the view
 */
export type String_229 = string;
/**
 * Views where the agent can be used
 */
export type Array_24 = Object_63[];
/**
 * Visibility of the agent
 */
export type String_230 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_231 = string;
export type Null_28 = null;
export type Number_47 = number;
export type Null_29 = null;

export interface AGENTS_UPDATEOutput {
  id: String_219;
  name: String_220;
  avatar: String_221;
  instructions: String_222;
  description?: String_223;
  tools_set: Object_60;
  max_steps?: Number_44;
  max_tokens?: NumberNull_6;
  model?: String_225;
  memory?: Object_61;
  views: Array_24;
  visibility: String_230;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_231
      )
    | Null_28;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_47
      )
    | Null_29;
}
/**
 * Tools available to the agent
 */
export interface Object_60 {
  [k: string]: Array_23;
}
/**
 * Memory to use for the agent
 */
export interface Object_61 {
  discriminator?: String_226;
  last_messages?: Number_46;
  semantic_recall?: Boolean_16;
  working_memory?: Object_62;
}
/**
 * Working memory to use for the agent
 */
export interface Object_62 {
  enabled?: Boolean_17;
  template?: String_227;
}
export interface Object_63 {
  url: String_228;
  name: String_229;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_232 = string;
export type String_233 = "user" | "assistant" | "system";
export type String_234 = string;
export type String_235 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_236 = string;
/**
 * Media type of the attachment
 */
export type String_237 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_238 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_26 = Object_65[];
/**
 * Array of messages for the conversation
 */
export type Array_25 = Object_64[];
/**
 * Skip transaction creation
 */
export type Boolean_18 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_239 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_48 = number;
/**
 * Temperature for the generation
 */
export type Number_49 = number;
export type String_240 = string;
export type Array_27 = String_240[];

export interface AI_GENERATEInput {
  messages: Array_25;
  skipTransaction?: Boolean_18;
  model?: String_239;
  maxTokens?: Number_48;
  temperature?: Number_49;
  tools?: Object_66;
}
export interface Object_64 {
  id?: String_232;
  role: String_233;
  content: String_234;
  createdAt?: String_235;
  experimental_attachments?: Array_26;
}
export interface Object_65 {
  name?: String_236;
  contentType?: String_237;
  url: String_238;
}
/**
 * Tools available for the generation
 */
export interface Object_66 {
  [k: string]: Array_27;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_241 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_50 = number;
/**
 * Number of tokens in the completion
 */
export type Number_51 = number;
/**
 * Total number of tokens used
 */
export type Number_52 = number;
/**
 * Transaction ID
 */
export type String_242 = string;
/**
 * Reason why generation finished
 */
export type String_243 = string;

export interface AI_GENERATEOutput {
  text: String_241;
  usage: Object_67;
  finishReason?: String_243;
}
/**
 * Token usage information
 */
export interface Object_67 {
  promptTokens: Number_50;
  completionTokens: Number_51;
  totalTokens: Number_52;
  transactionId?: String_242;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_244 = string;
export type String_245 = "user" | "assistant" | "system";
export type String_246 = string;
export type String_247 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_248 = string;
/**
 * Media type of the attachment
 */
export type String_249 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_250 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_29 = Object_69[];
/**
 * Array of messages for the conversation
 */
export type Array_28 = Object_68[];
/**
 * Skip transaction creation
 */
export type Boolean_19 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_251 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_53 = number;
/**
 * Temperature for the generation
 */
export type Number_54 = number;
export type String_252 = string;
export type Array_30 = String_252[];

export interface AI_GENERATE_OBJECTInput {
  messages: Array_28;
  schema: Object_70;
  skipTransaction?: Boolean_19;
  model?: String_251;
  maxTokens?: Number_53;
  temperature?: Number_54;
  tools?: Object_71;
}
export interface Object_68 {
  id?: String_244;
  role: String_245;
  content: String_246;
  createdAt?: String_247;
  experimental_attachments?: Array_29;
}
export interface Object_69 {
  name?: String_248;
  contentType?: String_249;
  url: String_250;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_70 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_71 {
  [k: string]: Array_30;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_55 = number;
/**
 * Number of tokens in the completion
 */
export type Number_56 = number;
/**
 * Total number of tokens used
 */
export type Number_57 = number;
/**
 * Transaction ID
 */
export type String_253 = string;
/**
 * Reason why generation finished
 */
export type String_254 = string;

export interface AI_GENERATE_OBJECTOutput {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_72;
  finishReason?: String_254;
}
/**
 * Token usage information
 */
export interface Object_72 {
  promptTokens: Number_55;
  completionTokens: Number_56;
  totalTokens: Number_57;
  transactionId?: String_253;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The API key to check access for, if not provided, the current key from context will be used
 */
export type String_255 = string;
export type String_256 = string;
/**
 * All tools that wants to check access
 */
export type Array_31 = String_256[];

export interface API_KEYS_CHECK_ACCESSInput {
  key?: String_255;
  tools: Array_31;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_20 = boolean;

export interface API_KEYS_CHECK_ACCESSOutput {
  access: Object_73;
}
export interface Object_73 {
  [k: string]: Boolean_20;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the API key
 */
export type String_257 = string;
export type String_258 = "allow" | "deny";
export type String_259 = string;
export type String_260 = "is_integration";
export type String_261 = string;
/**
 * Policies for the API key
 */
export type Array_32 = Object_74[];
export type String_262 = string;
export type String_263 = string;

export interface API_KEYS_CREATEInput {
  name: String_257;
  policies?: Array_32;
  claims?: Object_76;
}
export interface Object_74 {
  effect: String_258;
  resource: String_259;
  matchCondition?: Object_75;
}
export interface Object_75 {
  resource: String_260;
  integrationId: String_261;
}
/**
 * App Claims to be added to the API key
 */
export interface Object_76 {
  appName: String_262;
  integrationId: String_263;
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_264 = string;
/**
 * The name of the API key
 */
export type String_265 = string;
/**
 * The workspace ID
 */
export type StringNull_10 = String_266 | Null_30;
export type String_266 = string;
export type Null_30 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_21 = boolean;
export type String_267 = "allow" | "deny";
export type String_268 = string;
export type String_269 = "is_integration";
export type String_270 = string;
/**
 * Access policies for the API key
 */
export type Array_33 = Object_77[];
/**
 * Creation timestamp
 */
export type String_271 = string;
/**
 * Last update timestamp
 */
export type String_272 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_11 = String_273 | Null_31;
export type String_273 = string;
export type Null_31 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_274 = string;

export interface API_KEYS_CREATEOutput {
  id: String_264;
  name: String_265;
  workspace: StringNull_10;
  enabled: Boolean_21;
  policies: Array_33;
  createdAt: String_271;
  updatedAt: String_272;
  deletedAt: StringNull_11;
  value: String_274;
}
export interface Object_77 {
  effect: String_267;
  resource: String_268;
  matchCondition?: Object_78;
}
export interface Object_78 {
  resource: String_269;
  integrationId: String_270;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to delete
 */
export type String_275 = string;

export interface API_KEYS_DELETEInput {
  id: String_275;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the deleted API key
 */
export type String_276 = string;
/**
 * Confirmation that the key was deleted
 */
export type Boolean_22 = boolean;

export interface API_KEYS_DELETEOutput {
  id: String_276;
  deleted: Boolean_22;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to disable
 */
export type String_277 = string;

export interface API_KEYS_DISABLEInput {
  id: String_277;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_278 = string;
/**
 * The name of the API key
 */
export type String_279 = string;
/**
 * The workspace ID
 */
export type StringNull_12 = String_280 | Null_32;
export type String_280 = string;
export type Null_32 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_23 = boolean;
export type String_281 = "allow" | "deny";
export type String_282 = string;
export type String_283 = "is_integration";
export type String_284 = string;
/**
 * Access policies for the API key
 */
export type Array_34 = Object_79[];
/**
 * Creation timestamp
 */
export type String_285 = string;
/**
 * Last update timestamp
 */
export type String_286 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_13 = String_287 | Null_33;
export type String_287 = string;
export type Null_33 = null;

export interface API_KEYS_DISABLEOutput {
  id: String_278;
  name: String_279;
  workspace: StringNull_12;
  enabled: Boolean_23;
  policies: Array_34;
  createdAt: String_285;
  updatedAt: String_286;
  deletedAt: StringNull_13;
}
export interface Object_79 {
  effect: String_281;
  resource: String_282;
  matchCondition?: Object_80;
}
export interface Object_80 {
  resource: String_283;
  integrationId: String_284;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to enable
 */
export type String_288 = string;

export interface API_KEYS_ENABLEInput {
  id: String_288;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_289 = string;
/**
 * The name of the API key
 */
export type String_290 = string;
/**
 * The workspace ID
 */
export type StringNull_14 = String_291 | Null_34;
export type String_291 = string;
export type Null_34 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_24 = boolean;
export type String_292 = "allow" | "deny";
export type String_293 = string;
export type String_294 = "is_integration";
export type String_295 = string;
/**
 * Access policies for the API key
 */
export type Array_35 = Object_81[];
/**
 * Creation timestamp
 */
export type String_296 = string;
/**
 * Last update timestamp
 */
export type String_297 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_15 = String_298 | Null_35;
export type String_298 = string;
export type Null_35 = null;

export interface API_KEYS_ENABLEOutput {
  id: String_289;
  name: String_290;
  workspace: StringNull_14;
  enabled: Boolean_24;
  policies: Array_35;
  createdAt: String_296;
  updatedAt: String_297;
  deletedAt: StringNull_15;
}
export interface Object_81 {
  effect: String_292;
  resource: String_293;
  matchCondition?: Object_82;
}
export interface Object_82 {
  resource: String_294;
  integrationId: String_295;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_299 = string;

export interface API_KEYS_GETInput {
  id: String_299;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_300 = string;
/**
 * The name of the API key
 */
export type String_301 = string;
/**
 * The workspace ID
 */
export type StringNull_16 = String_302 | Null_36;
export type String_302 = string;
export type Null_36 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_25 = boolean;
export type String_303 = "allow" | "deny";
export type String_304 = string;
export type String_305 = "is_integration";
export type String_306 = string;
/**
 * Access policies for the API key
 */
export type Array_36 = Object_83[];
/**
 * Creation timestamp
 */
export type String_307 = string;
/**
 * Last update timestamp
 */
export type String_308 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_17 = String_309 | Null_37;
export type String_309 = string;
export type Null_37 = null;

export interface API_KEYS_GETOutput {
  id: String_300;
  name: String_301;
  workspace: StringNull_16;
  enabled: Boolean_25;
  policies: Array_36;
  createdAt: String_307;
  updatedAt: String_308;
  deletedAt: StringNull_17;
}
export interface Object_83 {
  effect: String_303;
  resource: String_304;
  matchCondition?: Object_84;
}
export interface Object_84 {
  resource: String_305;
  integrationId: String_306;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_310 = string;
/**
 * The name of the API key
 */
export type String_311 = string;
/**
 * The workspace ID
 */
export type StringNull_18 = String_312 | Null_38;
export type String_312 = string;
export type Null_38 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_26 = boolean;
export type String_313 = "allow" | "deny";
export type String_314 = string;
export type String_315 = "is_integration";
export type String_316 = string;
/**
 * Access policies for the API key
 */
export type Array_38 = Object_86[];
/**
 * Creation timestamp
 */
export type String_317 = string;
/**
 * Last update timestamp
 */
export type String_318 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_19 = String_319 | Null_39;
export type String_319 = string;
export type Null_39 = null;
/**
 * List of API keys
 */
export type Array_37 = Object_85[];

export interface API_KEYS_LISTOutput {
  apiKeys: Array_37;
}
export interface Object_85 {
  id: String_310;
  name: String_311;
  workspace: StringNull_18;
  enabled: Boolean_26;
  policies: Array_38;
  createdAt: String_317;
  updatedAt: String_318;
  deletedAt: StringNull_19;
}
export interface Object_86 {
  effect: String_313;
  resource: String_314;
  matchCondition?: Object_87;
}
export interface Object_87 {
  resource: String_315;
  integrationId: String_316;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to reissue
 */
export type String_320 = string;
export type String_321 = "allow" | "deny";
export type String_322 = string;
export type String_323 = "is_integration";
export type String_324 = string;
/**
 * Policies of the API key
 */
export type Array_39 = Object_88[];

export interface API_KEYS_REISSUEInput {
  id: String_320;
  /**
   * New claims to be added to the API key
   */
  claims?: {
    [k: string]: unknown;
  };
  policies?: Array_39;
}
export interface Object_88 {
  effect: String_321;
  resource: String_322;
  matchCondition?: Object_89;
}
export interface Object_89 {
  resource: String_323;
  integrationId: String_324;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_325 = string;
/**
 * The name of the API key
 */
export type String_326 = string;
/**
 * The workspace ID
 */
export type StringNull_20 = String_327 | Null_40;
export type String_327 = string;
export type Null_40 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_27 = boolean;
export type String_328 = "allow" | "deny";
export type String_329 = string;
export type String_330 = "is_integration";
export type String_331 = string;
/**
 * Access policies for the API key
 */
export type Array_40 = Object_90[];
/**
 * Creation timestamp
 */
export type String_332 = string;
/**
 * Last update timestamp
 */
export type String_333 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_21 = String_334 | Null_41;
export type String_334 = string;
export type Null_41 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_335 = string;

export interface API_KEYS_REISSUEOutput {
  id: String_325;
  name: String_326;
  workspace: StringNull_20;
  enabled: Boolean_27;
  policies: Array_40;
  createdAt: String_332;
  updatedAt: String_333;
  deletedAt: StringNull_21;
  value: String_335;
}
export interface Object_90 {
  effect: String_328;
  resource: String_329;
  matchCondition?: Object_91;
}
export interface Object_91 {
  resource: String_330;
  integrationId: String_331;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_336 = string;
/**
 * New name for the API key
 */
export type String_337 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_28 = boolean;
export type String_338 = "allow" | "deny";
export type String_339 = string;
export type String_340 = "is_integration";
export type String_341 = string;
/**
 * Policies for the API key
 */
export type Array_41 = Object_92[];

export interface API_KEYS_UPDATEInput {
  id: String_336;
  name?: String_337;
  enabled?: Boolean_28;
  policies?: Array_41;
}
export interface Object_92 {
  effect: String_338;
  resource: String_339;
  matchCondition?: Object_93;
}
export interface Object_93 {
  resource: String_340;
  integrationId: String_341;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_342 = string;
/**
 * The name of the API key
 */
export type String_343 = string;
/**
 * The workspace ID
 */
export type StringNull_22 = String_344 | Null_42;
export type String_344 = string;
export type Null_42 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_29 = boolean;
export type String_345 = "allow" | "deny";
export type String_346 = string;
export type String_347 = "is_integration";
export type String_348 = string;
/**
 * Access policies for the API key
 */
export type Array_42 = Object_94[];
/**
 * Creation timestamp
 */
export type String_349 = string;
/**
 * Last update timestamp
 */
export type String_350 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_23 = String_351 | Null_43;
export type String_351 = string;
export type Null_43 = null;

export interface API_KEYS_UPDATEOutput {
  id: String_342;
  name: String_343;
  workspace: StringNull_22;
  enabled: Boolean_29;
  policies: Array_42;
  createdAt: String_349;
  updatedAt: String_350;
  deletedAt: StringNull_23;
}
export interface Object_94 {
  effect: String_345;
  resource: String_346;
  matchCondition?: Object_95;
}
export interface Object_95 {
  resource: String_347;
  integrationId: String_348;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to validate
 */
export type String_352 = string;

export interface API_KEYS_VALIDATEInput {
  id: String_352;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_353 = string;
/**
 * The name of the API key
 */
export type String_354 = string;
/**
 * The workspace ID
 */
export type StringNull_24 = String_355 | Null_44;
export type String_355 = string;
export type Null_44 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_30 = boolean;
export type String_356 = "allow" | "deny";
export type String_357 = string;
export type String_358 = "is_integration";
export type String_359 = string;
/**
 * Access policies for the API key
 */
export type Array_43 = Object_96[];
/**
 * Creation timestamp
 */
export type String_360 = string;
/**
 * Last update timestamp
 */
export type String_361 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_25 = String_362 | Null_45;
export type String_362 = string;
export type Null_45 = null;
/**
 * Whether the API key is valid
 */
export type Boolean_31 = boolean;

export interface API_KEYS_VALIDATEOutput {
  id: String_353;
  name: String_354;
  workspace: StringNull_24;
  enabled: Boolean_30;
  policies: Array_43;
  createdAt: String_360;
  updatedAt: String_361;
  deletedAt: StringNull_25;
  valid: Boolean_31;
}
export interface Object_96 {
  effect: String_356;
  resource: String_357;
  matchCondition?: Object_97;
}
export interface Object_97 {
  resource: String_358;
  integrationId: String_359;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The channel discriminator
 */
export type String_363 = string;
/**
 * The ID of the integration to use
 */
export type String_364 = string;
/**
 * The ID of the agent to join the channel.
 */
export type String_365 = string;
/**
 * The name of the channel
 */
export type String_366 = string;

export interface CHANNELS_CREATEInput {
  discriminator: String_363;
  integrationId: String_364;
  agentId?: String_365;
  name?: String_366;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_367 = string;

export interface CHANNELS_DELETEInput {
  id: String_367;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_368 = string;

export interface CHANNELS_GETInput {
  id: String_368;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to join, use only UUIDs.
 */
export type String_369 = string;
/**
 * The ID of the agent to join the channel to, use only UUIDs.
 */
export type String_370 = string;

export interface CHANNELS_JOINInput {
  id: String_369;
  agentId: String_370;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_JOINOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to unlink, use only UUIDs.
 */
export type String_371 = string;
/**
 * The ID of the agent to unlink, use only UUIDs.
 */
export type String_372 = string;

export interface CHANNELS_LEAVEInput {
  id: String_371;
  agentId: String_372;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LEAVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_373 = string;
export type String_374 = string;
export type String_375 = string;
/**
 * The amount (in microdollars) of money to commit. Specified in USD dollars.
 */
export type StringNumber = String_376 | Number_58;
export type String_376 = string;
export type Number_58 = number;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTInput {
  identifier?: String_373;
  contractId: String_374;
  vendorId: String_375;
  amount: StringNumber;
  metadata?: Object_98;
}
export interface Object_98 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_377 = string;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTOutput {
  id: String_377;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_378 = string;
export type String_379 = string;
export type StringNumber_1 = String_380 | Number_59;
export type String_380 = string;
export type Number_59 = number;
export type String_381 = string;
export type String_382 = string;
export type Array_45 = String_382[];
export type Array_44 = Object_100[];
export type String_383 = string;
export type String_384 = string;

export interface CONTRACT_REGISTERInput {
  contract: Object_99;
  author: Object_101;
}
export interface Object_99 {
  body?: String_378;
  clauses?: Array_44;
}
export interface Object_100 {
  id: String_379;
  price: StringNumber_1;
  description?: String_381;
  usedByTools?: Array_45;
}
export interface Object_101 {
  scope: String_383;
  name: String_384;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_385 = string;

export interface CONTRACT_REGISTEROutput {
  appName: String_385;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to create
 */
export type String_386 = string;
/**
 * The source branch to branch from (optional - creates empty branch if not provided)
 */
export type String_387 = string;

export interface CREATE_BRANCHInput {
  branchName: String_386;
  sourceBranch?: String_387;
  metadata?: Object_102;
}
/**
 * Optional metadata for the branch
 */
export interface Object_102 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_388 = string;
export type String_389 = string;
export type Number_60 = number;

export interface CREATE_BRANCHOutput {
  branchName: String_388;
  sourceBranch?: String_389;
  createdAt: Number_60;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_61 = number;
export type String_390 = string;
export type String_391 = string;

export interface CREATE_CHECKOUT_SESSIONInput {
  amountUSDCents: Number_61;
  successUrl: String_390;
  cancelUrl: String_391;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_392 = string;

export interface CREATE_CHECKOUT_SESSIONOutput {
  url: String_392;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount of money to add to the voucher. Specified in USD dollars.
 */
export type Number_62 = number;

export interface CREATE_VOUCHERInput {
  amount: Number_62;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_393 = string;

export interface CREATE_VOUCHEROutput {
  id: String_393;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_32 = boolean;

export interface DATABASES_GET_METAInput {
  _legacy?: Boolean_32;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_63 = number;

export interface DATABASES_GET_METAOutput {
  bytes?: Number_63;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, only shows what would be migrated without executing
 */
export type Boolean_33 = boolean;
export type String_394 = string;
/**
 * Specific tables to migrate. If not provided, all tables will be migrated
 */
export type Array_46 = String_394[];
/**
 * Number of rows to migrate per batch
 */
export type Number_64 = number;

export interface DATABASES_MIGRATEInput {
  dryRun?: Boolean_33;
  tables?: Array_46;
  batchSize?: Number_64;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_34 = boolean;
export type String_395 = string;
export type Number_65 = number;
export type String_396 = "success" | "error" | "skipped";
export type String_397 = string;
export type Array_47 = Object_103[];
export type Number_66 = number;
export type Number_67 = number;

export interface DATABASES_MIGRATEOutput {
  success: Boolean_34;
  migratedTables: Array_47;
  totalRowsMigrated: Number_66;
  executionTimeMs: Number_67;
}
export interface Object_103 {
  tableName: String_395;
  rowCount: Number_65;
  status: String_396;
  error?: String_397;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The date to recover to
 */
export type String_398 = string;
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_35 = boolean;

export interface DATABASES_RECOVERYInput {
  date: String_398;
  _legacy?: Boolean_35;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_36 = boolean;

export interface DATABASES_RECOVERYOutput {
  success: Boolean_36;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The SQL query to run
 */
export type String_399 = string;
/**
 * The parameters to pass to the SQL query
 */
export type Array_48 = unknown[];
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_37 = boolean;

export interface DATABASES_RUN_SQLInput {
  sql: String_399;
  params?: Array_48;
  _legacy?: Boolean_37;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_38 = boolean;
export type Number_68 = number;
export type Number_69 = number;
export type Number_70 = number;
export type Number_71 = number;
export type Number_72 = number;
export type Boolean_39 = boolean;
export type String_400 = "WNAM" | "ENAM" | "WEUR" | "EEUR" | "APAC" | "OC";
export type Number_73 = number;
export type Number_74 = number;
export type Array_50 = unknown[];
export type Boolean_40 = boolean;
export type Array_49 = Object_104[];

export interface DATABASES_RUN_SQLOutput {
  result: Array_49;
}
export interface Object_104 {
  meta?: Object_105;
  results?: Array_50;
  success?: Boolean_40;
}
export interface Object_105 {
  changed_db?: Boolean_38;
  changes?: Number_68;
  duration?: Number_69;
  last_row_id?: Number_70;
  rows_read?: Number_71;
  rows_written?: Number_72;
  served_by_primary?: Boolean_39;
  served_by_region?: String_400;
  size_after?: Number_73;
  timings?: Object_106;
}
export interface Object_106 {
  sql_duration_ms?: Number_74;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_401 = string;
export type String_402 = string;
export type String_403 = string;
export type String_404 = string;
export type String_405 = string;
export type String_406 = string;
export type String_407 = string;
export type String_408 = string;
export type String_409 = string;
export type Array_52 = String_409[];
export type String_410 = string;
export type String_411 = "none" | "open" | "autoPin";
export type Array_51 = Object_107[];

export interface DECO_CHAT_VIEWS_LISTOutput {
  views: Array_51;
}
export interface Object_107 {
  id?: String_401;
  name?: String_402;
  title: String_403;
  description?: String_404;
  icon: String_405;
  url?: String_406;
  mimeTypePattern?: String_407;
  resourceName?: String_408;
  tools?: Array_52;
  prompt?: String_410;
  installBehavior?: String_411;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_412 = string;

export interface DECO_GET_APP_SCHEMAInput {
  appName: String_412;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_413 = string;
export type Array_53 = String_413[];

export interface DECO_GET_APP_SCHEMAOutput {
  schema?: unknown;
  scopes?: Array_53;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_414 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_415 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_416 = string;

export interface DECO_INTEGRATION_INSTALLInput {
  id: String_414;
  provider?: String_415;
  appId?: String_416;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_417 = string;

export interface DECO_INTEGRATION_INSTALLOutput {
  installationId: String_417;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_418 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_419 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_420 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_421 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput {
  appName: String_418;
  returnUrl: String_419;
  installId: String_420;
  provider?: String_421;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_422 = string;
/**
 * Whether to show contracts
 */
export type Boolean_41 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput {
  query?: String_422;
  showContracts?: Boolean_41;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_423 = string;
export type String_424 = string;
export type String_425 = string;
export type String_426 = string;
export type String_427 = string;
export type Null_46 = null;
export type String_428 = string;
export type Null_47 = null;
export type String_429 = string;
export type Null_48 = null;
export type String_430 = "HTTP";
export type String_431 = string;
export type String_432 = string;
export type String_433 = "SSE";
export type String_434 = string;
export type String_435 = string;
export type String_436 = string;
export type String_437 = "Websocket";
export type String_438 = string;
export type String_439 = string;
export type String_440 = "Deco";
export type String_441 = string;
export type String_442 = string;
export type String_443 = "INNATE";
export type String_444 = string;
export type String_445 = string;
export type Null_49 = null;
/**
 * The name of the tool
 */
export type String_446 = string;
/**
 * The description of the tool
 */
export type String_447 = string;
export type Array_55 = (Object_116 & Object_118)[];
export type Null_50 = null;
export type String_448 = string;
export type String_449 = string;
/**
 * The Integrations that match the query
 */
export type Array_54 = (Object_108 & Object_120)[];

export interface DECO_INTEGRATIONS_SEARCHOutput {
  integrations: Array_54;
}
export interface Object_108 {
  id: String_423;
  name: String_424;
  description?: String_425;
  icon?: String_426;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_427
      )
    | Null_46;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_428
      )
    | Null_47;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_429
      )
    | Null_48;
  connection: Object_109 | Object_110 | Object_112 | Object_113 | Object_114;
  metadata?: Object_115 | Null_49;
  tools?: Array_55 | Null_50;
}
export interface Object_109 {
  type: String_430;
  url: String_431;
  token?: String_432;
}
export interface Object_110 {
  type: String_433;
  url: String_434;
  token?: String_435;
  headers?: Object_111;
}
export interface Object_111 {
  [k: string]: String_436;
}
export interface Object_112 {
  type: String_437;
  url: String_438;
  token?: String_439;
}
export interface Object_113 {
  type: String_440;
  tenant: String_441;
  token?: String_442;
}
export interface Object_114 {
  type: String_443;
  name: String_444;
  workspace?: String_445;
}
export interface Object_115 {
  [k: string]: unknown;
}
export interface Object_116 {
  name: String_446;
  inputSchema: Object_117;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_117 {
  [k: string]: unknown;
}
export interface Object_118 {
  description?: String_447;
  outputSchema?: Object_119;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_119 {
  [k: string]: unknown;
}
export interface Object_120 {
  provider: String_448;
  friendlyName?: String_449;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name/title of the document
 */
export type String_450 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_451 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_452 = string;
export type String_453 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_56 = String_453[];

export interface DECO_RESOURCE_DOCUMENT_CREATEInput {
  data: Object_121;
}
/**
 * Resource data to create
 */
export interface Object_121 {
  name: String_450;
  description: String_451;
  content: String_452;
  tags?: Array_56;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_454 = string;
/**
 * The name/title of the document
 */
export type String_455 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_456 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_457 = string;
export type String_458 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_57 = String_458[];
/**
 * Creation timestamp
 */
export type String_459 = string;
/**
 * Last update timestamp
 */
export type String_460 = string;
/**
 * User who created the resource
 */
export type String_461 = string;

export interface DECO_RESOURCE_DOCUMENT_CREATEOutput {
  uri: String_454;
  data: Object_122;
  created_at?: String_459;
  updated_at?: String_460;
  created_by?: String_461;
}
/**
 * Created resource data
 */
export interface Object_122 {
  name: String_455;
  description: String_456;
  content: String_457;
  tags?: Array_57;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_462 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEInput {
  uri: String_462;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_42 = boolean;
/**
 * URI of the deleted resource
 */
export type String_463 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEOutput {
  success: Boolean_42;
  uri: String_463;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_464 = string;

export interface DECO_RESOURCE_DOCUMENT_READInput {
  uri: String_464;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_465 = string;
/**
 * The name/title of the document
 */
export type String_466 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_467 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_468 = string;
export type String_469 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_58 = String_469[];
/**
 * Creation timestamp
 */
export type String_470 = string;
/**
 * Last update timestamp
 */
export type String_471 = string;
/**
 * User who created the resource
 */
export type String_472 = string;
/**
 * User who last updated the resource
 */
export type String_473 = string;

export interface DECO_RESOURCE_DOCUMENT_READOutput {
  uri: String_465;
  data: Object_123;
  created_at?: String_470;
  updated_at?: String_471;
  created_by?: String_472;
  updated_by?: String_473;
}
/**
 * Resource data
 */
export interface Object_123 {
  name: String_466;
  description: String_467;
  content: String_468;
  tags?: Array_58;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_474 = string;
/**
 * Page number (1-based)
 */
export type Integer_3 = number;
/**
 * Number of items per page
 */
export type Integer_4 = number;
/**
 * Field to sort by
 */
export type String_475 = string;
/**
 * Sort order
 */
export type String_476 = "asc" | "desc";

export interface DECO_RESOURCE_DOCUMENT_SEARCHInput {
  term?: String_474;
  page?: Integer_3;
  pageSize?: Integer_4;
  filters?: Object_124;
  sortBy?: String_475;
  sortOrder?: String_476;
}
/**
 * Additional filters to apply
 */
export interface Object_124 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_477 = string;
export type String_478 = string;
/**
 * Description of the resource
 */
export type String_479 = string;
/**
 * URL to the resource icon
 */
export type String_480 = string;
/**
 * The name/title of the document
 */
export type String_481 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_482 = string;
/**
 * Creation timestamp
 */
export type String_483 = string;
/**
 * Last update timestamp
 */
export type String_484 = string;
/**
 * User who created the resource
 */
export type String_485 = string;
/**
 * User who last updated the resource
 */
export type String_486 = string;
/**
 * Array of matching resources
 */
export type Array_59 = Object_125[];
/**
 * Total number of matching resources
 */
export type Integer_5 = number;
/**
 * Current page number
 */
export type Integer_6 = number;
/**
 * Number of items per page
 */
export type Integer_7 = number;
/**
 * Total number of pages
 */
export type Integer_8 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_43 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_44 = boolean;

export interface DECO_RESOURCE_DOCUMENT_SEARCHOutput {
  items: Array_59;
  totalCount: Integer_5;
  page: Integer_6;
  pageSize: Integer_7;
  totalPages: Integer_8;
  hasNextPage: Boolean_43;
  hasPreviousPage: Boolean_44;
}
export interface Object_125 {
  uri: String_477;
  /**
   * Resource data with required name
   */
  data: Object_126 & Object_127;
  created_at?: String_483;
  updated_at?: String_484;
  created_by?: String_485;
  updated_by?: String_486;
}
export interface Object_126 {
  name: String_478;
  description?: String_479;
  icon?: String_480;
}
export interface Object_127 {
  name: String_481;
  description: String_482;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_487 = string;
/**
 * The name/title of the document
 */
export type String_488 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_489 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_490 = string;
export type String_491 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_60 = String_491[];

export interface DECO_RESOURCE_DOCUMENT_UPDATEInput {
  uri: String_487;
  data: Object_128;
}
/**
 * Updated resource data
 */
export interface Object_128 {
  name: String_488;
  description: String_489;
  content: String_490;
  tags?: Array_60;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_492 = string;
/**
 * The name/title of the document
 */
export type String_493 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_494 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_495 = string;
export type String_496 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_61 = String_496[];
/**
 * Original creation timestamp
 */
export type String_497 = string;
/**
 * Last update timestamp
 */
export type String_498 = string;
/**
 * User who originally created the resource
 */
export type String_499 = string;
/**
 * User who last updated the resource
 */
export type String_500 = string;

export interface DECO_RESOURCE_DOCUMENT_UPDATEOutput {
  uri: String_492;
  data: Object_129;
  created_at?: String_497;
  updated_at?: String_498;
  created_by?: String_499;
  updated_by?: String_500;
}
/**
 * Updated resource data
 */
export interface Object_129 {
  name: String_493;
  description: String_494;
  content: String_495;
  tags?: Array_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_501 = string;
/**
 * The description of the tool
 */
export type String_502 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_503 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_504 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_62 = Object_133[];

export interface DECO_RESOURCE_TOOL_CREATEInput {
  data: Object_130;
}
/**
 * Resource data to create
 */
export interface Object_130 {
  name: String_501;
  description: String_502;
  inputSchema: Object_131;
  outputSchema: Object_132;
  execute: String_503;
  dependencies?: Array_62;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_131 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_132 {
  [k: string]: unknown;
}
export interface Object_133 {
  integrationId: String_504;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_505 = string;
/**
 * The name of the tool
 */
export type String_506 = string;
/**
 * The description of the tool
 */
export type String_507 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_508 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_509 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_63 = Object_137[];
/**
 * Creation timestamp
 */
export type String_510 = string;
/**
 * Last update timestamp
 */
export type String_511 = string;
/**
 * User who created the resource
 */
export type String_512 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput {
  uri: String_505;
  data: Object_134;
  created_at?: String_510;
  updated_at?: String_511;
  created_by?: String_512;
}
/**
 * Created resource data
 */
export interface Object_134 {
  name: String_506;
  description: String_507;
  inputSchema: Object_135;
  outputSchema: Object_136;
  execute: String_508;
  dependencies?: Array_63;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_135 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_136 {
  [k: string]: unknown;
}
export interface Object_137 {
  integrationId: String_509;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_513 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput {
  uri: String_513;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_45 = boolean;
/**
 * URI of the deleted resource
 */
export type String_514 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput {
  success: Boolean_45;
  uri: String_514;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_515 = string;

export interface DECO_RESOURCE_TOOL_READInput {
  uri: String_515;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_516 = string;
/**
 * The name of the tool
 */
export type String_517 = string;
/**
 * The description of the tool
 */
export type String_518 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_519 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_520 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_64 = Object_141[];
/**
 * Creation timestamp
 */
export type String_521 = string;
/**
 * Last update timestamp
 */
export type String_522 = string;
/**
 * User who created the resource
 */
export type String_523 = string;
/**
 * User who last updated the resource
 */
export type String_524 = string;

export interface DECO_RESOURCE_TOOL_READOutput {
  uri: String_516;
  data: Object_138;
  created_at?: String_521;
  updated_at?: String_522;
  created_by?: String_523;
  updated_by?: String_524;
}
/**
 * Resource data
 */
export interface Object_138 {
  name: String_517;
  description: String_518;
  inputSchema: Object_139;
  outputSchema: Object_140;
  execute: String_519;
  dependencies?: Array_64;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_139 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_140 {
  [k: string]: unknown;
}
export interface Object_141 {
  integrationId: String_520;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_525 = string;
/**
 * Page number (1-based)
 */
export type Integer_9 = number;
/**
 * Number of items per page
 */
export type Integer_10 = number;
/**
 * Field to sort by
 */
export type String_526 = string;
/**
 * Sort order
 */
export type String_527 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput {
  term?: String_525;
  page?: Integer_9;
  pageSize?: Integer_10;
  filters?: Object_142;
  sortBy?: String_526;
  sortOrder?: String_527;
}
/**
 * Additional filters to apply
 */
export interface Object_142 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_528 = string;
export type String_529 = string;
/**
 * Description of the resource
 */
export type String_530 = string;
/**
 * URL to the resource icon
 */
export type String_531 = string;
/**
 * The name of the tool
 */
export type String_532 = string;
/**
 * The description of the tool
 */
export type String_533 = string;
/**
 * Creation timestamp
 */
export type String_534 = string;
/**
 * Last update timestamp
 */
export type String_535 = string;
/**
 * User who created the resource
 */
export type String_536 = string;
/**
 * User who last updated the resource
 */
export type String_537 = string;
/**
 * Array of matching resources
 */
export type Array_65 = Object_143[];
/**
 * Total number of matching resources
 */
export type Integer_11 = number;
/**
 * Current page number
 */
export type Integer_12 = number;
/**
 * Number of items per page
 */
export type Integer_13 = number;
/**
 * Total number of pages
 */
export type Integer_14 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_46 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_47 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput {
  items: Array_65;
  totalCount: Integer_11;
  page: Integer_12;
  pageSize: Integer_13;
  totalPages: Integer_14;
  hasNextPage: Boolean_46;
  hasPreviousPage: Boolean_47;
}
export interface Object_143 {
  uri: String_528;
  /**
   * Resource data with required name
   */
  data: Object_144 & Object_145;
  created_at?: String_534;
  updated_at?: String_535;
  created_by?: String_536;
  updated_by?: String_537;
}
export interface Object_144 {
  name: String_529;
  description?: String_530;
  icon?: String_531;
}
export interface Object_145 {
  name: String_532;
  description: String_533;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_538 = string;
/**
 * The name of the tool
 */
export type String_539 = string;
/**
 * The description of the tool
 */
export type String_540 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_541 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_542 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_66 = Object_149[];

export interface DECO_RESOURCE_TOOL_UPDATEInput {
  uri: String_538;
  data: Object_146;
}
/**
 * Updated resource data
 */
export interface Object_146 {
  name: String_539;
  description: String_540;
  inputSchema: Object_147;
  outputSchema: Object_148;
  execute: String_541;
  dependencies?: Array_66;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_147 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_148 {
  [k: string]: unknown;
}
export interface Object_149 {
  integrationId: String_542;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_543 = string;
/**
 * The name of the tool
 */
export type String_544 = string;
/**
 * The description of the tool
 */
export type String_545 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_546 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_547 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_67 = Object_153[];
/**
 * Original creation timestamp
 */
export type String_548 = string;
/**
 * Last update timestamp
 */
export type String_549 = string;
/**
 * User who originally created the resource
 */
export type String_550 = string;
/**
 * User who last updated the resource
 */
export type String_551 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput {
  uri: String_543;
  data: Object_150;
  created_at?: String_548;
  updated_at?: String_549;
  created_by?: String_550;
  updated_by?: String_551;
}
/**
 * Updated resource data
 */
export interface Object_150 {
  name: String_544;
  description: String_545;
  inputSchema: Object_151;
  outputSchema: Object_152;
  execute: String_546;
  dependencies?: Array_67;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_151 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_152 {
  [k: string]: unknown;
}
export interface Object_153 {
  integrationId: String_547;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name/title of the view
 */
export type String_552 = string;
/**
 * A brief description of the view's purpose
 */
export type String_553 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_554 = string;
export type String_555 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_556 = string;
export type String_557 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_68 = String_557[];

export interface DECO_RESOURCE_VIEW_CREATEInput {
  data: Object_154;
}
/**
 * Resource data to create
 */
export interface Object_154 {
  name: String_552;
  description: String_553;
  code?: String_554;
  importmap?: Object_155;
  icon?: String_556;
  tags?: Array_68;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_155 {
  [k: string]: String_555;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_558 = string;
/**
 * The name/title of the view
 */
export type String_559 = string;
/**
 * A brief description of the view's purpose
 */
export type String_560 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_561 = string;
export type String_562 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_563 = string;
export type String_564 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_69 = String_564[];
/**
 * Creation timestamp
 */
export type String_565 = string;
/**
 * Last update timestamp
 */
export type String_566 = string;
/**
 * User who created the resource
 */
export type String_567 = string;

export interface DECO_RESOURCE_VIEW_CREATEOutput {
  uri: String_558;
  data: Object_156;
  created_at?: String_565;
  updated_at?: String_566;
  created_by?: String_567;
}
/**
 * Created resource data
 */
export interface Object_156 {
  name: String_559;
  description: String_560;
  code?: String_561;
  importmap?: Object_157;
  icon?: String_563;
  tags?: Array_69;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_157 {
  [k: string]: String_562;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_568 = string;

export interface DECO_RESOURCE_VIEW_DELETEInput {
  uri: String_568;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_48 = boolean;
/**
 * URI of the deleted resource
 */
export type String_569 = string;

export interface DECO_RESOURCE_VIEW_DELETEOutput {
  success: Boolean_48;
  uri: String_569;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_570 = string;

export interface DECO_RESOURCE_VIEW_READInput {
  uri: String_570;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_571 = string;
/**
 * The name/title of the view
 */
export type String_572 = string;
/**
 * A brief description of the view's purpose
 */
export type String_573 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_574 = string;
export type String_575 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_576 = string;
export type String_577 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_70 = String_577[];
/**
 * Creation timestamp
 */
export type String_578 = string;
/**
 * Last update timestamp
 */
export type String_579 = string;
/**
 * User who created the resource
 */
export type String_580 = string;
/**
 * User who last updated the resource
 */
export type String_581 = string;

export interface DECO_RESOURCE_VIEW_READOutput {
  uri: String_571;
  data: Object_158;
  created_at?: String_578;
  updated_at?: String_579;
  created_by?: String_580;
  updated_by?: String_581;
}
/**
 * Resource data
 */
export interface Object_158 {
  name: String_572;
  description: String_573;
  code?: String_574;
  importmap?: Object_159;
  icon?: String_576;
  tags?: Array_70;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_159 {
  [k: string]: String_575;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_582 = string;
/**
 * Page number (1-based)
 */
export type Integer_15 = number;
/**
 * Number of items per page
 */
export type Integer_16 = number;
/**
 * Field to sort by
 */
export type String_583 = string;
/**
 * Sort order
 */
export type String_584 = "asc" | "desc";

export interface DECO_RESOURCE_VIEW_SEARCHInput {
  term?: String_582;
  page?: Integer_15;
  pageSize?: Integer_16;
  filters?: Object_160;
  sortBy?: String_583;
  sortOrder?: String_584;
}
/**
 * Additional filters to apply
 */
export interface Object_160 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_585 = string;
export type String_586 = string;
/**
 * Description of the resource
 */
export type String_587 = string;
/**
 * URL to the resource icon
 */
export type String_588 = string;
/**
 * The name/title of the view
 */
export type String_589 = string;
/**
 * A brief description of the view's purpose
 */
export type String_590 = string;
/**
 * Creation timestamp
 */
export type String_591 = string;
/**
 * Last update timestamp
 */
export type String_592 = string;
/**
 * User who created the resource
 */
export type String_593 = string;
/**
 * User who last updated the resource
 */
export type String_594 = string;
/**
 * Array of matching resources
 */
export type Array_71 = Object_161[];
/**
 * Total number of matching resources
 */
export type Integer_17 = number;
/**
 * Current page number
 */
export type Integer_18 = number;
/**
 * Number of items per page
 */
export type Integer_19 = number;
/**
 * Total number of pages
 */
export type Integer_20 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_49 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_50 = boolean;

export interface DECO_RESOURCE_VIEW_SEARCHOutput {
  items: Array_71;
  totalCount: Integer_17;
  page: Integer_18;
  pageSize: Integer_19;
  totalPages: Integer_20;
  hasNextPage: Boolean_49;
  hasPreviousPage: Boolean_50;
}
export interface Object_161 {
  uri: String_585;
  /**
   * Resource data with required name
   */
  data: Object_162 & Object_163;
  created_at?: String_591;
  updated_at?: String_592;
  created_by?: String_593;
  updated_by?: String_594;
}
export interface Object_162 {
  name: String_586;
  description?: String_587;
  icon?: String_588;
}
export interface Object_163 {
  name: String_589;
  description: String_590;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_595 = string;
/**
 * The name/title of the view
 */
export type String_596 = string;
/**
 * A brief description of the view's purpose
 */
export type String_597 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_598 = string;
export type String_599 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_600 = string;
export type String_601 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_72 = String_601[];

export interface DECO_RESOURCE_VIEW_UPDATEInput {
  uri: String_595;
  data: Object_164;
}
/**
 * Updated resource data
 */
export interface Object_164 {
  name: String_596;
  description: String_597;
  code?: String_598;
  importmap?: Object_165;
  icon?: String_600;
  tags?: Array_72;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_165 {
  [k: string]: String_599;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_602 = string;
/**
 * The name/title of the view
 */
export type String_603 = string;
/**
 * A brief description of the view's purpose
 */
export type String_604 = string;
/**
 * The React component code for the view. Must define 'export const App = () => { ... }'. Import React hooks from 'react'. The code will be rendered using React 19.2.0, has access to Tailwind CSS v4, and can call tools via the global callTool() function.
 */
export type String_605 = string;
export type String_606 = string;
/**
 * Optional icon URL for the view. If not provided, a default icon will be used.
 */
export type String_607 = string;
export type String_608 = string;
/**
 * Optional tags for categorizing and searching views
 */
export type Array_73 = String_608[];
/**
 * Original creation timestamp
 */
export type String_609 = string;
/**
 * Last update timestamp
 */
export type String_610 = string;
/**
 * User who originally created the resource
 */
export type String_611 = string;
/**
 * User who last updated the resource
 */
export type String_612 = string;

export interface DECO_RESOURCE_VIEW_UPDATEOutput {
  uri: String_602;
  data: Object_166;
  created_at?: String_609;
  updated_at?: String_610;
  created_by?: String_611;
  updated_by?: String_612;
}
/**
 * Updated resource data
 */
export interface Object_166 {
  name: String_603;
  description: String_604;
  code?: String_605;
  importmap?: Object_167;
  icon?: String_607;
  tags?: Array_73;
}
/**
 * Optional import map for customizing module resolution. Defaults to React 19.2.0 imports. Example: { 'react': 'https://esm.sh/react@19.2.0', 'lodash': 'https://esm.sh/lodash' }
 */
export interface Object_167 {
  [k: string]: String_606;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_613 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_614 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_74 = [Object_171, ...Object_171[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_615 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_616 = string;
/**
 * A clear description of what this step does
 */
export type String_617 = string;
/**
 * The prompt used to generate the step
 */
export type String_618 = string;
/**
 * Status of the step execution
 */
export type String_619 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_620 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_621 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_75 = Object_176[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_21 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_22 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_622 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_75 = number;
/**
 * The authorization token for the workflow
 */
export type String_623 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput {
  data: Object_168;
}
/**
 * Resource data to create
 */
export interface Object_168 {
  name: String_613;
  description: String_614;
  inputSchema: Object_169;
  outputSchema: Object_170;
  steps: Array_74;
  authorization?: Object_179;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_169 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_170 {
  [k: string]: unknown;
}
export interface Object_171 {
  id: String_615;
  name: String_616;
  description: String_617;
  prompt?: String_618;
  inputSchema: Object_172;
  outputSchema: Object_173;
  input: Object_174;
  output: Object_175;
  status?: String_619;
  execute: String_620;
  dependencies?: Array_75;
  options?: Object_177;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_172 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_173 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_174 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_175 {
  [k: string]: unknown;
}
export interface Object_176 {
  integrationId: String_621;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_177 {
  retries?: Object_178;
  timeout?: Number_75;
}
export interface Object_178 {
  limit?: Integer_21;
  delay?: Integer_22;
  backoff?: String_622;
}
export interface Object_179 {
  token: String_623;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_624 = string;
/**
 * The unique name of the workflow
 */
export type String_625 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_626 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_76 = [Object_183, ...Object_183[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_627 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_628 = string;
/**
 * A clear description of what this step does
 */
export type String_629 = string;
/**
 * The prompt used to generate the step
 */
export type String_630 = string;
/**
 * Status of the step execution
 */
export type String_631 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_632 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_633 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_77 = Object_188[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_23 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_24 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_634 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_76 = number;
/**
 * The authorization token for the workflow
 */
export type String_635 = string;
/**
 * Creation timestamp
 */
export type String_636 = string;
/**
 * Last update timestamp
 */
export type String_637 = string;
/**
 * User who created the resource
 */
export type String_638 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput {
  uri: String_624;
  data: Object_180;
  created_at?: String_636;
  updated_at?: String_637;
  created_by?: String_638;
}
/**
 * Created resource data
 */
export interface Object_180 {
  name: String_625;
  description: String_626;
  inputSchema: Object_181;
  outputSchema: Object_182;
  steps: Array_76;
  authorization?: Object_191;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_181 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_182 {
  [k: string]: unknown;
}
export interface Object_183 {
  id: String_627;
  name: String_628;
  description: String_629;
  prompt?: String_630;
  inputSchema: Object_184;
  outputSchema: Object_185;
  input: Object_186;
  output: Object_187;
  status?: String_631;
  execute: String_632;
  dependencies?: Array_77;
  options?: Object_189;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_184 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_185 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_186 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_187 {
  [k: string]: unknown;
}
export interface Object_188 {
  integrationId: String_633;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_189 {
  retries?: Object_190;
  timeout?: Number_76;
}
export interface Object_190 {
  limit?: Integer_23;
  delay?: Integer_24;
  backoff?: String_634;
}
export interface Object_191 {
  token: String_635;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_639 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput {
  uri: String_639;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_51 = boolean;
/**
 * URI of the deleted resource
 */
export type String_640 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput {
  success: Boolean_51;
  uri: String_640;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_641 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput {
  uri: String_641;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_642 = string;
/**
 * The unique name of the workflow
 */
export type String_643 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_644 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_78 = [Object_195, ...Object_195[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_645 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_646 = string;
/**
 * A clear description of what this step does
 */
export type String_647 = string;
/**
 * The prompt used to generate the step
 */
export type String_648 = string;
/**
 * Status of the step execution
 */
export type String_649 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_650 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_651 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_79 = Object_200[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_25 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_26 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_652 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_77 = number;
/**
 * The authorization token for the workflow
 */
export type String_653 = string;
/**
 * Creation timestamp
 */
export type String_654 = string;
/**
 * Last update timestamp
 */
export type String_655 = string;
/**
 * User who created the resource
 */
export type String_656 = string;
/**
 * User who last updated the resource
 */
export type String_657 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput {
  uri: String_642;
  data: Object_192;
  created_at?: String_654;
  updated_at?: String_655;
  created_by?: String_656;
  updated_by?: String_657;
}
/**
 * Resource data
 */
export interface Object_192 {
  name: String_643;
  description: String_644;
  inputSchema: Object_193;
  outputSchema: Object_194;
  steps: Array_78;
  authorization?: Object_203;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_193 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_194 {
  [k: string]: unknown;
}
export interface Object_195 {
  id: String_645;
  name: String_646;
  description: String_647;
  prompt?: String_648;
  inputSchema: Object_196;
  outputSchema: Object_197;
  input: Object_198;
  output: Object_199;
  status?: String_649;
  execute: String_650;
  dependencies?: Array_79;
  options?: Object_201;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_196 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_197 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_198 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_199 {
  [k: string]: unknown;
}
export interface Object_200 {
  integrationId: String_651;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_201 {
  retries?: Object_202;
  timeout?: Number_77;
}
export interface Object_202 {
  limit?: Integer_25;
  delay?: Integer_26;
  backoff?: String_652;
}
export interface Object_203 {
  token: String_653;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_658 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READInput {
  uri: String_658;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_659 = string;
export type String_660 = string;
export type String_661 = string;
export type String_662 = string;
export type String_663 = string;
export type String_664 = string;
export type String_665 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_666 = string;
/**
 * Error message if the workflow failed
 */
export type String_667 = string;
export type String_668 = "log" | "warn" | "error";
export type String_669 = string;
/**
 * Console logs from the execution
 */
export type Array_80 = Object_206[];
/**
 * When the workflow started (timestamp)
 */
export type Number_78 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_79 = number;
export type Array_81 = unknown[];
export type String_670 = string;
export type String_671 = string;
export type String_672 = string;
export type String_673 = string;
export type String_674 = string;
export type String_675 = string;
export type Null_51 = null;
export type String_676 = string;
export type String_677 = string;
export type String_678 = string;
export type StringNull_26 = String_679 | Null_52;
export type String_679 = string;
export type Null_52 = null;
export type StringNull_27 = String_680 | Null_53;
export type String_680 = string;
export type Null_53 = null;
export type BooleanNull_1 = Boolean_52 | Null_54;
export type Boolean_52 = boolean;
export type Null_54 = null;
export type String_681 = string;
export type String_682 = string;
export type StringNull_28 = String_683 | Null_55;
export type String_683 = string;
export type Null_55 = null;
export type StringNull_29 = String_684 | Null_56;
export type String_684 = string;
export type Null_56 = null;
export type BooleanNull_2 = Boolean_53 | Null_57;
export type Boolean_53 = boolean;
export type Null_57 = null;
export type String_685 = string;
export type String_686 = string;
export type Null_58 = null;
export type StringNull_30 = String_687 | Null_59;
export type String_687 = string;
export type Null_59 = null;
export type StringNull_31 = String_688 | Null_60;
export type String_688 = string;
export type Null_60 = null;
export type BooleanNull_3 = Boolean_54 | Null_61;
export type Boolean_54 = boolean;
export type Null_61 = null;
export type String_689 = string;
export type String_690 = string;
export type Null_62 = null;
export type Array_83 = Object_214[];
export type Array_82 = Object_212[];
export type String_691 = string;
export type String_692 = string;
export type Null_63 = null;
export type String_693 = string;
/**
 * Creation timestamp
 */
export type String_694 = string;
/**
 * Last update timestamp
 */
export type String_695 = string;
/**
 * User who created the resource
 */
export type String_696 = string;
/**
 * User who last updated the resource
 */
export type String_697 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READOutput {
  uri: String_659;
  data: Object_204;
  created_at?: String_694;
  updated_at?: String_695;
  created_by?: String_696;
  updated_by?: String_697;
}
/**
 * Resource data
 */
export interface Object_204 {
  name: String_660;
  description?: String_661;
  icon?: String_662;
  status: String_663;
  runId: String_664;
  workflowURI?: String_665;
  currentStep?: String_666;
  stepResults?: Object_205;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_667;
  logs?: Array_80;
  startTime?: Number_78;
  endTime?: Number_79;
  workflowStatus?: Object_207;
}
/**
 * Results from completed steps
 */
export interface Object_205 {
  [k: string]: unknown;
}
export interface Object_206 {
  type: String_668;
  content: String_669;
}
export interface Object_207 {
  params?: Object_208 | Null_51;
  trigger?: Object_211;
  versionId?: String_677;
  queued?: String_678;
  start?: StringNull_26;
  end?: StringNull_27;
  success?: BooleanNull_1;
  steps?: Array_82;
  error?: Object_216 | Null_63;
  output?: unknown;
  status?: String_693;
  [k: string]: unknown;
}
export interface Object_208 {
  input?: unknown;
  steps?: Array_81;
  name?: String_670;
  context?: Object_209;
  [k: string]: unknown;
}
export interface Object_209 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_671;
  startedBy?: Object_210;
  startedAt?: String_675;
  [k: string]: unknown;
}
export interface Object_210 {
  id: String_672;
  email?: String_673;
  name?: String_674;
}
export interface Object_211 {
  source: String_676;
  [k: string]: unknown;
}
export interface Object_212 {
  name?: String_681;
  type?: String_682;
  start?: StringNull_28;
  end?: StringNull_29;
  success?: BooleanNull_2;
  output?: unknown;
  error?: Object_213 | Null_58;
  attempts?: Array_83;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_213 {
  name?: String_685;
  message?: String_686;
}
export interface Object_214 {
  start?: StringNull_30;
  end?: StringNull_31;
  success?: BooleanNull_3;
  error?: Object_215 | Null_62;
}
export interface Object_215 {
  name?: String_689;
  message?: String_690;
}
export interface Object_216 {
  name?: String_691;
  message?: String_692;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_698 = string;
/**
 * Page number (1-based)
 */
export type Integer_27 = number;
/**
 * Number of items per page
 */
export type Integer_28 = number;
/**
 * Field to sort by
 */
export type String_699 = string;
/**
 * Sort order
 */
export type String_700 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput {
  term?: String_698;
  page?: Integer_27;
  pageSize?: Integer_28;
  filters?: Object_217;
  sortBy?: String_699;
  sortOrder?: String_700;
}
/**
 * Additional filters to apply
 */
export interface Object_217 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_701 = string;
export type String_702 = string;
/**
 * Description of the resource
 */
export type String_703 = string;
/**
 * URL to the resource icon
 */
export type String_704 = string;
export type String_705 = string;
export type String_706 = string;
export type String_707 = string;
export type String_708 = string;
export type String_709 = string;
export type String_710 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_711 = string;
/**
 * Error message if the workflow failed
 */
export type String_712 = string;
export type String_713 = "log" | "warn" | "error";
export type String_714 = string;
/**
 * Console logs from the execution
 */
export type Array_85 = Object_222[];
/**
 * When the workflow started (timestamp)
 */
export type Number_80 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_81 = number;
export type Array_86 = unknown[];
export type String_715 = string;
export type String_716 = string;
export type String_717 = string;
export type String_718 = string;
export type String_719 = string;
export type String_720 = string;
export type Null_64 = null;
export type String_721 = string;
export type String_722 = string;
export type String_723 = string;
export type StringNull_32 = String_724 | Null_65;
export type String_724 = string;
export type Null_65 = null;
export type StringNull_33 = String_725 | Null_66;
export type String_725 = string;
export type Null_66 = null;
export type BooleanNull_4 = Boolean_55 | Null_67;
export type Boolean_55 = boolean;
export type Null_67 = null;
export type String_726 = string;
export type String_727 = string;
export type StringNull_34 = String_728 | Null_68;
export type String_728 = string;
export type Null_68 = null;
export type StringNull_35 = String_729 | Null_69;
export type String_729 = string;
export type Null_69 = null;
export type BooleanNull_5 = Boolean_56 | Null_70;
export type Boolean_56 = boolean;
export type Null_70 = null;
export type String_730 = string;
export type String_731 = string;
export type Null_71 = null;
export type StringNull_36 = String_732 | Null_72;
export type String_732 = string;
export type Null_72 = null;
export type StringNull_37 = String_733 | Null_73;
export type String_733 = string;
export type Null_73 = null;
export type BooleanNull_6 = Boolean_57 | Null_74;
export type Boolean_57 = boolean;
export type Null_74 = null;
export type String_734 = string;
export type String_735 = string;
export type Null_75 = null;
export type Array_88 = Object_230[];
export type Array_87 = Object_228[];
export type String_736 = string;
export type String_737 = string;
export type Null_76 = null;
export type String_738 = string;
/**
 * Creation timestamp
 */
export type String_739 = string;
/**
 * Last update timestamp
 */
export type String_740 = string;
/**
 * User who created the resource
 */
export type String_741 = string;
/**
 * User who last updated the resource
 */
export type String_742 = string;
/**
 * Array of matching resources
 */
export type Array_84 = Object_218[];
/**
 * Total number of matching resources
 */
export type Integer_29 = number;
/**
 * Current page number
 */
export type Integer_30 = number;
/**
 * Number of items per page
 */
export type Integer_31 = number;
/**
 * Total number of pages
 */
export type Integer_32 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_58 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_59 = boolean;

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput {
  items: Array_84;
  totalCount: Integer_29;
  page: Integer_30;
  pageSize: Integer_31;
  totalPages: Integer_32;
  hasNextPage: Boolean_58;
  hasPreviousPage: Boolean_59;
}
export interface Object_218 {
  uri: String_701;
  /**
   * Resource data with required name
   */
  data: Object_219 & Object_220;
  created_at?: String_739;
  updated_at?: String_740;
  created_by?: String_741;
  updated_by?: String_742;
}
export interface Object_219 {
  name: String_702;
  description?: String_703;
  icon?: String_704;
}
export interface Object_220 {
  name: String_705;
  description?: String_706;
  icon?: String_707;
  status: String_708;
  runId: String_709;
  workflowURI?: String_710;
  currentStep?: String_711;
  stepResults?: Object_221;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_712;
  logs?: Array_85;
  startTime?: Number_80;
  endTime?: Number_81;
  workflowStatus?: Object_223;
}
/**
 * Results from completed steps
 */
export interface Object_221 {
  [k: string]: unknown;
}
export interface Object_222 {
  type: String_713;
  content: String_714;
}
export interface Object_223 {
  params?: Object_224 | Null_64;
  trigger?: Object_227;
  versionId?: String_722;
  queued?: String_723;
  start?: StringNull_32;
  end?: StringNull_33;
  success?: BooleanNull_4;
  steps?: Array_87;
  error?: Object_232 | Null_76;
  output?: unknown;
  status?: String_738;
  [k: string]: unknown;
}
export interface Object_224 {
  input?: unknown;
  steps?: Array_86;
  name?: String_715;
  context?: Object_225;
  [k: string]: unknown;
}
export interface Object_225 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_716;
  startedBy?: Object_226;
  startedAt?: String_720;
  [k: string]: unknown;
}
export interface Object_226 {
  id: String_717;
  email?: String_718;
  name?: String_719;
}
export interface Object_227 {
  source: String_721;
  [k: string]: unknown;
}
export interface Object_228 {
  name?: String_726;
  type?: String_727;
  start?: StringNull_34;
  end?: StringNull_35;
  success?: BooleanNull_5;
  output?: unknown;
  error?: Object_229 | Null_71;
  attempts?: Array_88;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_229 {
  name?: String_730;
  message?: String_731;
}
export interface Object_230 {
  start?: StringNull_36;
  end?: StringNull_37;
  success?: BooleanNull_6;
  error?: Object_231 | Null_75;
}
export interface Object_231 {
  name?: String_734;
  message?: String_735;
}
export interface Object_232 {
  name?: String_736;
  message?: String_737;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_743 = string;
/**
 * Page number (1-based)
 */
export type Integer_33 = number;
/**
 * Number of items per page
 */
export type Integer_34 = number;
/**
 * Field to sort by
 */
export type String_744 = string;
/**
 * Sort order
 */
export type String_745 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput {
  term?: String_743;
  page?: Integer_33;
  pageSize?: Integer_34;
  filters?: Object_233;
  sortBy?: String_744;
  sortOrder?: String_745;
}
/**
 * Additional filters to apply
 */
export interface Object_233 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_746 = string;
export type String_747 = string;
/**
 * Description of the resource
 */
export type String_748 = string;
/**
 * URL to the resource icon
 */
export type String_749 = string;
/**
 * The unique name of the workflow
 */
export type String_750 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_751 = string;
/**
 * Creation timestamp
 */
export type String_752 = string;
/**
 * Last update timestamp
 */
export type String_753 = string;
/**
 * User who created the resource
 */
export type String_754 = string;
/**
 * User who last updated the resource
 */
export type String_755 = string;
/**
 * Array of matching resources
 */
export type Array_89 = Object_234[];
/**
 * Total number of matching resources
 */
export type Integer_35 = number;
/**
 * Current page number
 */
export type Integer_36 = number;
/**
 * Number of items per page
 */
export type Integer_37 = number;
/**
 * Total number of pages
 */
export type Integer_38 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_60 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_61 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput {
  items: Array_89;
  totalCount: Integer_35;
  page: Integer_36;
  pageSize: Integer_37;
  totalPages: Integer_38;
  hasNextPage: Boolean_60;
  hasPreviousPage: Boolean_61;
}
export interface Object_234 {
  uri: String_746;
  /**
   * Resource data with required name
   */
  data: Object_235 & Object_236;
  created_at?: String_752;
  updated_at?: String_753;
  created_by?: String_754;
  updated_by?: String_755;
}
export interface Object_235 {
  name: String_747;
  description?: String_748;
  icon?: String_749;
}
export interface Object_236 {
  name: String_750;
  description: String_751;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_756 = string;
/**
 * The unique name of the workflow
 */
export type String_757 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_758 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_90 = [Object_240, ...Object_240[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_759 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_760 = string;
/**
 * A clear description of what this step does
 */
export type String_761 = string;
/**
 * The prompt used to generate the step
 */
export type String_762 = string;
/**
 * Status of the step execution
 */
export type String_763 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_764 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_765 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_91 = Object_245[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_39 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_40 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_766 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_82 = number;
/**
 * The authorization token for the workflow
 */
export type String_767 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput {
  uri: String_756;
  data: Object_237;
}
/**
 * Updated resource data
 */
export interface Object_237 {
  name: String_757;
  description: String_758;
  inputSchema: Object_238;
  outputSchema: Object_239;
  steps: Array_90;
  authorization?: Object_248;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_238 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_239 {
  [k: string]: unknown;
}
export interface Object_240 {
  id: String_759;
  name: String_760;
  description: String_761;
  prompt?: String_762;
  inputSchema: Object_241;
  outputSchema: Object_242;
  input: Object_243;
  output: Object_244;
  status?: String_763;
  execute: String_764;
  dependencies?: Array_91;
  options?: Object_246;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_241 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_242 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_243 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_244 {
  [k: string]: unknown;
}
export interface Object_245 {
  integrationId: String_765;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_246 {
  retries?: Object_247;
  timeout?: Number_82;
}
export interface Object_247 {
  limit?: Integer_39;
  delay?: Integer_40;
  backoff?: String_766;
}
export interface Object_248 {
  token: String_767;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_768 = string;
/**
 * The unique name of the workflow
 */
export type String_769 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_770 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_92 = [Object_252, ...Object_252[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_771 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_772 = string;
/**
 * A clear description of what this step does
 */
export type String_773 = string;
/**
 * The prompt used to generate the step
 */
export type String_774 = string;
/**
 * Status of the step execution
 */
export type String_775 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_776 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_777 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_93 = Object_257[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_41 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_42 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_778 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_83 = number;
/**
 * The authorization token for the workflow
 */
export type String_779 = string;
/**
 * Original creation timestamp
 */
export type String_780 = string;
/**
 * Last update timestamp
 */
export type String_781 = string;
/**
 * User who originally created the resource
 */
export type String_782 = string;
/**
 * User who last updated the resource
 */
export type String_783 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput {
  uri: String_768;
  data: Object_249;
  created_at?: String_780;
  updated_at?: String_781;
  created_by?: String_782;
  updated_by?: String_783;
}
/**
 * Updated resource data
 */
export interface Object_249 {
  name: String_769;
  description: String_770;
  inputSchema: Object_250;
  outputSchema: Object_251;
  steps: Array_92;
  authorization?: Object_260;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_250 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_251 {
  [k: string]: unknown;
}
export interface Object_252 {
  id: String_771;
  name: String_772;
  description: String_773;
  prompt?: String_774;
  inputSchema: Object_253;
  outputSchema: Object_254;
  input: Object_255;
  output: Object_256;
  status?: String_775;
  execute: String_776;
  dependencies?: Array_93;
  options?: Object_258;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_253 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_254 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_255 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_256 {
  [k: string]: unknown;
}
export interface Object_257 {
  integrationId: String_777;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_258 {
  retries?: Object_259;
  timeout?: Number_83;
}
export interface Object_259 {
  limit?: Integer_41;
  delay?: Integer_42;
  backoff?: String_778;
}
export interface Object_260 {
  token: String_779;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_784 = string;
/**
 * The token to use for the tool execution
 */
export type String_785 = string;

export interface DECO_TOOL_CALL_TOOLInput {
  uri: String_784;
  input: Object_261;
  authorization?: String_785;
}
/**
 * The input of the code
 */
export interface Object_261 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_786 = "log" | "warn" | "error";
export type String_787 = string;
/**
 * Console logs from the execution
 */
export type Array_94 = Object_262[];

export interface DECO_TOOL_CALL_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_94;
}
export interface Object_262 {
  type: String_786;
  content: String_787;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_788 = string;
/**
 * The description of the tool
 */
export type String_789 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_790 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_791 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_95 = Object_266[];
/**
 * The token to use for the tool execution
 */
export type String_792 = string;

export interface DECO_TOOL_RUN_TOOLInput {
  tool: Object_263;
  input: Object_267;
  authorization?: String_792;
}
export interface Object_263 {
  name: String_788;
  description: String_789;
  inputSchema: Object_264;
  outputSchema: Object_265;
  execute: String_790;
  dependencies?: Array_95;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_264 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_265 {
  [k: string]: unknown;
}
export interface Object_266 {
  integrationId: String_791;
}
/**
 * The input of the code
 */
export interface Object_267 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_793 = "log" | "warn" | "error";
export type String_794 = string;
/**
 * Console logs from the execution
 */
export type Array_96 = Object_268[];

export interface DECO_TOOL_RUN_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_96;
}
export interface Object_268 {
  type: String_793;
  content: String_794;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_795 = string;

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILInput {
  resource: String_795;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_796 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_797 = string;
export type String_798 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_97 = String_798[];

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILOutput {
  url: String_796;
  prompt?: String_797;
  tools?: Array_97;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_799 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput {
  resource: String_799;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_800 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_801 = string;
export type String_802 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_98 = String_802[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput {
  url: String_800;
  prompt?: String_801;
  tools?: Array_98;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_803 = string;

export interface DECO_VIEW_RENDER_VIEW_DETAILInput {
  resource: String_803;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_804 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_805 = string;
export type String_806 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_99 = String_806[];

export interface DECO_VIEW_RENDER_VIEW_DETAILOutput {
  url: String_804;
  prompt?: String_805;
  tools?: Array_99;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_807 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput {
  resource: String_807;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_808 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_809 = string;
export type String_810 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_100 = String_810[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput {
  url: String_808;
  prompt?: String_809;
  tools?: Array_100;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_811 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_RUNInput {
  resource: String_811;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_812 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_813 = string;
export type String_814 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_101 = String_814[];

export interface DECO_VIEW_RENDER_WORKFLOW_RUNOutput {
  url: String_812;
  prompt?: String_813;
  tools?: Array_101;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_815 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_816 = string;

export interface DECO_WORKFLOW_STARTInput {
  uri: String_815;
  input: Object_269;
  stopAfter?: String_816;
  state?: Object_270;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_269 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_270 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_817 = string;
/**
 * The Resources 2.0 URI of the workflow run (rsc://i:workflows-management/workflow_run/{runId}). Use DECO_RESOURCE_WORKFLOW_RUN_READ to get status and results.
 */
export type String_818 = string;
/**
 * Error message if workflow start failed
 */
export type String_819 = string;

export interface DECO_WORKFLOW_STARTOutput {
  runId?: String_817;
  uri?: String_818;
  error?: String_819;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to delete
 */
export type String_820 = string;

export interface DELETE_BRANCHInput {
  branchName: String_820;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_62 = boolean;
export type String_821 = string;
export type Number_84 = number;

export interface DELETE_BRANCHOutput {
  deleted: Boolean_62;
  branchName: String_821;
  filesDeleted?: Number_84;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_822 = string;
/**
 * The file path within the branch
 */
export type String_823 = string;

export interface DELETE_FILEInput {
  branch?: String_822;
  path: String_823;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_63 = boolean;

export interface DELETE_FILEOutput {
  deleted: Boolean_63;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The base branch to compare from (defaults to 'main')
 */
export type String_824 = string;
/**
 * The branch to compare against
 */
export type String_825 = string;

export interface DIFF_BRANCHInput {
  baseBranch?: String_824;
  compareBranch: String_825;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_826 = string;
export type String_827 = "added" | "modified" | "deleted";
export type String_828 = string;
export type String_829 = string;
export type Array_102 = Object_271[];

export interface DIFF_BRANCHOutput {
  differences: Array_102;
}
export interface Object_271 {
  path: String_826;
  type: String_827;
  baseAddress?: String_828;
  compareAddress?: String_829;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_830 = string;

export interface FS_DELETEInput {
  path: String_830;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The root directory to list files from
 */
export type String_831 = string;

export interface FS_LISTInput {
  prefix: String_831;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_103 = unknown[];

export interface FS_LISTOutput {
  items: Array_103;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_832 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_85 = number;

export interface FS_READInput {
  path: String_832;
  expiresIn?: Number_85;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to read the file from
 */
export type String_833 = string;

export interface FS_READOutput {
  url: String_833;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_834 = string;

export interface FS_READ_METADATAInput {
  path: String_834;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_READ_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_835 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_86 = number;
/**
 * Content-Type for the file. This is required.
 */
export type String_836 = string;

export interface FS_WRITEInput {
  path: String_835;
  expiresIn?: Number_86;
  contentType: String_836;
  metadata?: Object_272;
}
/**
 * Metadata to be added to the file
 */
export interface Object_272 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to upload the file to
 */
export type String_837 = string;

export interface FS_WRITEOutput {
  url: String_837;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_838 = "day" | "week" | "month";

export interface GET_AGENTS_USAGEInput {
  range: String_838;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_839 = string;
export type String_840 = string;
export type StringNull_38 = String_841 | Null_77;
export type String_841 = string;
export type Null_77 = null;
export type Number_87 = number;
export type String_842 = string;
export type String_843 = string;
export type Number_88 = number;
export type StringNull_39 = String_844 | Null_78;
export type String_844 = string;
export type Null_78 = null;
export type StringNull_40 = String_845 | Null_79;
export type String_845 = string;
export type Null_79 = null;
export type Array_105 = Object_274[];
export type Array_104 = Object_273[];

export interface GET_AGENTS_USAGEOutput {
  total: String_839;
  items: Array_104;
}
export interface Object_273 {
  id: String_840;
  label?: StringNull_38;
  total: Number_87;
  transactions: Array_105;
}
export interface Object_274 {
  id: String_842;
  timestamp: String_843;
  amount: Number_88;
  agentId?: StringNull_39;
  generatedBy?: StringNull_40;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_846 = "day" | "week" | "month" | "year";

export interface GET_BILLING_HISTORYInput {
  range: String_846;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_847 = string;
export type String_848 = string;
export type String_849 = string;
export type String_850 = string;
export type StringNull_41 = String_851 | Null_80;
export type String_851 = string;
export type Null_80 = null;
export type StringNull_42 = String_852 | Null_81;
export type String_852 = string;
export type Null_81 = null;
export type Array_106 = Object_275[];

export interface GET_BILLING_HISTORYOutput {
  items: Array_106;
}
export interface Object_275 {
  id: String_847;
  amount: String_848;
  timestamp: String_849;
  type: String_850;
  contractId?: StringNull_41;
  callerApp?: StringNull_42;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_853 = "day" | "week" | "month" | "year";

export interface GET_CONTRACTS_COMMITSInput {
  range: String_853;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_854 = string;
export type Number_89 = number;
export type String_855 = string;
export type StringNull_43 = String_856 | Null_82;
export type String_856 = string;
export type Null_82 = null;
export type String_857 = string;
export type Number_90 = number;
export type Array_108 = Object_277[];
export type String_858 = string;
export type String_859 = string;
export type Array_107 = Object_276[];

export interface GET_CONTRACTS_COMMITSOutput {
  items: Array_107;
}
export interface Object_276 {
  id: String_854;
  amount: Number_89;
  contractId: String_855;
  callerApp?: StringNull_43;
  clauses: Array_108;
  timestamp: String_858;
  type: String_859;
}
export interface Object_277 {
  clauseId: String_857;
  amount: Number_90;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_860 = "day" | "week" | "month";

export interface GET_THREADS_USAGEInput {
  range: String_860;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_THREADS_USAGEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WALLET_ACCOUNTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_861 = string;
export type String_862 = string;

export interface GET_WALLET_ACCOUNTOutput {
  balance: String_861;
  balanceExact: String_862;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_863 = string;

export interface HOSTING_APP_DELETEInput {
  appSlug: String_863;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, force the deployment even if there are breaking changes
 */
export type Boolean_64 = boolean;
/**
 * If true, promotes the deployment to production routes. The deployment will be available at a unique URL but won't replace the production version.
 */
export type Boolean_65 = boolean;
/**
 * The slug identifier for the app, if not provided, you should use the wrangler.toml file to determine the slug (using the name field).
 */
export type String_864 = string;
export type String_865 = string;
export type String_866 = string;
export type Boolean_66 = boolean;
/**
 * An array of files with their paths and contents. Must include main.ts as entrypoint and package.json for dependencies
 */
export type Array_109 = Object_278[];
export type String_867 = string;
/**
 * If false, skip the bundler step and upload the files as-is. Default: true (bundle files)
 */
export type Boolean_67 = boolean;
/**
 * Whether the app should be unlisted in the registry. Default: true (unlisted)
 */
export type Boolean_68 = boolean;

export interface HOSTING_APP_DEPLOYInput {
  force?: Boolean_64;
  promote?: Boolean_65;
  appSlug?: String_864;
  files: Array_109;
  envVars?: Object_279;
  bundle?: Boolean_67;
  unlisted?: Boolean_68;
}
export interface Object_278 {
  path: String_865;
  content: String_866;
  asset?: Boolean_66;
}
/**
 * An optional object of environment variables to be set on the worker
 */
export interface Object_279 {
  [k: string]: String_867;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The entrypoint of the app
 */
export type String_868 = string;
export type String_869 = string;
/**
 * The hosts of the app
 */
export type Array_110 = String_869[];
/**
 * The id of the app
 */
export type String_870 = string;
/**
 * The workspace of the app
 */
export type StringNull_44 = String_871 | Null_83;
export type String_871 = string;
export type Null_83 = null;
/**
 * The deployment id of the app
 */
export type String_872 = string;

export interface HOSTING_APP_DEPLOYOutput {
  entrypoint: String_868;
  hosts: Array_110;
  id: String_870;
  workspace: StringNull_44;
  deploymentId?: String_872;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_873 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTInput {
  appSlug: String_873;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID
 */
export type String_874 = string;
/**
 * The Cloudflare worker ID
 */
export type StringNull_45 = String_875 | Null_84;
export type String_875 = string;
export type Null_84 = null;
/**
 * The deployment entrypoint URL
 */
export type String_876 = string;
/**
 * When the deployment was created
 */
export type String_877 = string;
/**
 * When the deployment was last updated
 */
export type String_878 = string;
export type Array_111 = Object_280[];
export type String_879 = string;
export type String_880 = string;
export type String_881 = string;
export type String_882 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTOutput {
  deployments: Array_111;
  app: Object_281;
}
export interface Object_280 {
  id: String_874;
  cloudflare_deployment_id: StringNull_45;
  entrypoint: String_876;
  created_at: String_877;
  updated_at: String_878;
}
export interface Object_281 {
  id: String_879;
  slug: String_880;
  workspace: String_881;
  project_id: String_882;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_883 = string;

export interface HOSTING_APP_INFOInput {
  appSlug: String_883;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_INFOOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_884 = string;
/**
 * List of unique workflow names
 */
export type Array_112 = String_884[];

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESOutput {
  workflowNames: Array_112;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_91 = number;
export type Number_92 = number;
/**
 * Optional: The name of the workflow to list runs for. If not provided, shows recent runs from any workflow.
 */
export type String_885 = string;
export type String_886 = string;
export type String_887 = string;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSInput {
  page?: Number_91;
  per_page?: Number_92;
  workflowName?: String_885;
  fromDate?: String_886;
  toDate?: String_887;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_888 = string;
export type String_889 = string;
export type Number_93 = number;
export type NumberNull_7 = Number_94 | Null_85;
export type Number_94 = number;
export type Null_85 = null;
export type String_890 = string;
/**
 * The workflow runs
 */
export type Array_113 = Object_282[];
export type Number_95 = number;
export type Number_96 = number;
export type Number_97 = number;
export type Number_98 = number;
export type Number_99 = number;
export type Number_100 = number;
export type Number_101 = number;
export type String_891 = string;
export type Null_86 = null;
export type Number_102 = number;
export type String_892 = string;
export type Null_87 = null;
export type Number_103 = number;
export type Number_104 = number;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSOutput {
  runs: Array_113;
  stats: Object_283;
  pagination: Object_286;
}
export interface Object_282 {
  workflowName: String_888;
  runId: String_889;
  createdAt: Number_93;
  updatedAt?: NumberNull_7;
  status: String_890;
}
/**
 * Workflow statistics
 */
export interface Object_283 {
  totalRuns: Number_95;
  successCount: Number_96;
  errorCount: Number_97;
  runningCount: Number_98;
  pendingCount: Number_99;
  successRate: Number_100;
  firstRun: Object_284 | Null_86;
  lastRun: Object_285 | Null_87;
}
export interface Object_284 {
  date: Number_101;
  status: String_891;
}
export interface Object_285 {
  date: Number_102;
  status: String_892;
}
export interface Object_286 {
  page?: Number_103;
  per_page?: Number_104;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The instance ID of the workflow. To get this, use the HOSTING_APP_WORKFLOWS_INSTANCES_LIST or HOSTING_APP_WORKFLOWS_START tool.
 */
export type String_893 = string;
export type String_894 = string;

export interface HOSTING_APP_WORKFLOWS_STATUSInput {
  instanceId: String_893;
  workflowName: String_894;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_STATUSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APPS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_895 = string;
export type String_896 = string;
export type Array_114 = Object_287[];

export interface HOSTING_APPS_LISTOutput {
  items: Array_114;
}
export interface Object_287 {
  slug?: String_895;
  entrypoint: String_896;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID to promote
 */
export type String_897 = string;
/**
 * Route pattern to promote the deployment to (can be custom domain or .deco.page)
 */
export type String_898 = string;

export interface HOSTING_APPS_PROMOTEInput {
  deploymentId: String_897;
  routePattern: String_898;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the promotion was successful
 */
export type Boolean_69 = boolean;
/**
 * The route pattern that was promoted
 */
export type String_899 = string;

export interface HOSTING_APPS_PROMOTEOutput {
  success: Boolean_69;
  promotedRoute: String_899;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_900 = string;
export type String_901 = "HTTP";
export type String_902 = string;
export type String_903 = string;
export type String_904 = "SSE";
export type String_905 = string;
export type String_906 = string;
export type String_907 = string;
export type String_908 = "Websocket";
export type String_909 = string;
export type String_910 = string;
export type String_911 = "Deco";
export type String_912 = string;
export type String_913 = string;
export type String_914 = "INNATE";
export type String_915 = string;
export type String_916 = string;
export type String_917 = string;
export type Integer_43 = number;
export type String_918 = string;

export interface INTEGRATIONS_CALL_TOOLInput_1 {
  id?: String_900;
  connection?: Object_288 | Object_289 | Object_291 | Object_292 | Object_293;
  params: Object_294;
}
export interface Object_288 {
  type: String_901;
  url: String_902;
  token?: String_903;
}
export interface Object_289 {
  type: String_904;
  url: String_905;
  token?: String_906;
  headers?: Object_290;
}
export interface Object_290 {
  [k: string]: String_907;
}
export interface Object_291 {
  type: String_908;
  url: String_909;
  token?: String_910;
}
export interface Object_292 {
  type: String_911;
  tenant: String_912;
  token?: String_913;
}
export interface Object_293 {
  type: String_914;
  name: String_915;
  workspace?: String_916;
}
export interface Object_294 {
  _meta?: Object_295;
  name: String_918;
  arguments?: Object_296;
  [k: string]: unknown;
}
export interface Object_295 {
  progressToken?: String_917 | Integer_43;
  [k: string]: unknown;
}
export interface Object_296 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_919 = string;
export type String_920 = string;
export type String_921 = string;
export type String_922 = string;
export type String_923 = string;
export type Null_88 = null;
export type String_924 = string;
export type Null_89 = null;
export type String_925 = "HTTP";
export type String_926 = string;
export type String_927 = string;
export type String_928 = "SSE";
export type String_929 = string;
export type String_930 = string;
export type String_931 = string;
export type String_932 = "Websocket";
export type String_933 = string;
export type String_934 = string;
export type String_935 = "Deco";
export type String_936 = string;
export type String_937 = string;
export type String_938 = "INNATE";
export type String_939 = string;
export type String_940 = string;
export type Null_90 = null;
/**
 * The name of the tool
 */
export type String_941 = string;
/**
 * The description of the tool
 */
export type String_942 = string;
export type Array_115 = (Object_304 & Object_306)[];
export type Null_91 = null;
export type String_943 = string;

export interface INTEGRATIONS_CREATEInput {
  id?: String_919;
  name?: String_920;
  description?: String_921;
  icon?: String_922;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_923
      )
    | Null_88;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_924
      )
    | Null_89;
  connection?: Object_297 | Object_298 | Object_300 | Object_301 | Object_302;
  metadata?: Object_303 | Null_90;
  tools?: Array_115 | Null_91;
  clientIdFromApp?: String_943;
}
export interface Object_297 {
  type: String_925;
  url: String_926;
  token?: String_927;
}
export interface Object_298 {
  type: String_928;
  url: String_929;
  token?: String_930;
  headers?: Object_299;
}
export interface Object_299 {
  [k: string]: String_931;
}
export interface Object_300 {
  type: String_932;
  url: String_933;
  token?: String_934;
}
export interface Object_301 {
  type: String_935;
  tenant: String_936;
  token?: String_937;
}
export interface Object_302 {
  type: String_938;
  name: String_939;
  workspace?: String_940;
}
export interface Object_303 {
  [k: string]: unknown;
}
export interface Object_304 {
  name: String_941;
  inputSchema: Object_305;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_305 {
  [k: string]: unknown;
}
export interface Object_306 {
  description?: String_942;
  outputSchema?: Object_307;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_307 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_944 = string;

export interface INTEGRATIONS_DELETEInput {
  id: String_944;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_945 = string;

export interface INTEGRATIONS_GETInput {
  id: String_945;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_946 = string;

export interface INTEGRATIONS_GET_API_KEYInput {
  integrationId: String_946;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GET_API_KEYOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_947 = "Channel" | "View";

export interface INTEGRATIONS_LISTInput {
  binder?: String_947;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_948 = string;
export type String_949 = string;
export type String_950 = string;
export type String_951 = string;
export type String_952 = string;
export type Null_92 = null;
export type String_953 = string;
export type Null_93 = null;
export type String_954 = string;
export type Null_94 = null;
export type String_955 = "HTTP";
export type String_956 = string;
export type String_957 = string;
export type String_958 = "SSE";
export type String_959 = string;
export type String_960 = string;
export type String_961 = string;
export type String_962 = "Websocket";
export type String_963 = string;
export type String_964 = string;
export type String_965 = "Deco";
export type String_966 = string;
export type String_967 = string;
export type String_968 = "INNATE";
export type String_969 = string;
export type String_970 = string;
export type Null_95 = null;
/**
 * The name of the tool
 */
export type String_971 = string;
/**
 * The description of the tool
 */
export type String_972 = string;
export type Array_117 = (Object_316 & Object_318)[];
export type Null_96 = null;
export type Array_116 = Object_308[];

export interface INTEGRATIONS_LISTOutput {
  items: Array_116;
}
export interface Object_308 {
  id: String_948;
  name: String_949;
  description?: String_950;
  icon?: String_951;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_952
      )
    | Null_92;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_953
      )
    | Null_93;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_954
      )
    | Null_94;
  connection: Object_309 | Object_310 | Object_312 | Object_313 | Object_314;
  metadata?: Object_315 | Null_95;
  tools?: Array_117 | Null_96;
}
export interface Object_309 {
  type: String_955;
  url: String_956;
  token?: String_957;
}
export interface Object_310 {
  type: String_958;
  url: String_959;
  token?: String_960;
  headers?: Object_311;
}
export interface Object_311 {
  [k: string]: String_961;
}
export interface Object_312 {
  type: String_962;
  url: String_963;
  token?: String_964;
}
export interface Object_313 {
  type: String_965;
  tenant: String_966;
  token?: String_967;
}
export interface Object_314 {
  type: String_968;
  name: String_969;
  workspace?: String_970;
}
export interface Object_315 {
  [k: string]: unknown;
}
export interface Object_316 {
  name: String_971;
  inputSchema: Object_317;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_317 {
  [k: string]: unknown;
}
export interface Object_318 {
  description?: String_972;
  outputSchema?: Object_319;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_319 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_973 = string;
export type String_974 = string;
export type String_975 = string;
export type String_976 = string;
export type String_977 = string;
export type String_978 = string;
export type Null_97 = null;
export type String_979 = string;
export type Null_98 = null;
export type String_980 = string;
export type Null_99 = null;
export type String_981 = "HTTP";
export type String_982 = string;
export type String_983 = string;
export type String_984 = "SSE";
export type String_985 = string;
export type String_986 = string;
export type String_987 = string;
export type String_988 = "Websocket";
export type String_989 = string;
export type String_990 = string;
export type String_991 = "Deco";
export type String_992 = string;
export type String_993 = string;
export type String_994 = "INNATE";
export type String_995 = string;
export type String_996 = string;
export type Null_100 = null;
/**
 * The name of the tool
 */
export type String_997 = string;
/**
 * The description of the tool
 */
export type String_998 = string;
export type Array_118 = (Object_328 & Object_330)[];
export type Null_101 = null;

export interface INTEGRATIONS_UPDATEInput {
  id: String_973;
  integration: Object_320;
}
export interface Object_320 {
  id: String_974;
  name: String_975;
  description?: String_976;
  icon?: String_977;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_978
      )
    | Null_97;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_979
      )
    | Null_98;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_980
      )
    | Null_99;
  connection: Object_321 | Object_322 | Object_324 | Object_325 | Object_326;
  metadata?: Object_327 | Null_100;
  tools?: Array_118 | Null_101;
}
export interface Object_321 {
  type: String_981;
  url: String_982;
  token?: String_983;
}
export interface Object_322 {
  type: String_984;
  url: String_985;
  token?: String_986;
  headers?: Object_323;
}
export interface Object_323 {
  [k: string]: String_987;
}
export interface Object_324 {
  type: String_988;
  url: String_989;
  token?: String_990;
}
export interface Object_325 {
  type: String_991;
  tenant: String_992;
  token?: String_993;
}
export interface Object_326 {
  type: String_994;
  name: String_995;
  workspace?: String_996;
}
export interface Object_327 {
  [k: string]: unknown;
}
export interface Object_328 {
  name: String_997;
  inputSchema: Object_329;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_329 {
  [k: string]: unknown;
}
export interface Object_330 {
  description?: String_998;
  outputSchema?: Object_331;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_331 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_999 = string;
/**
 * File path from file added using workspace fs_write tool
 */
export type String_1000 = string;
/**
 * The name of the file
 */
export type String_1001 = string;
export type StringBoolean = String_1002 | Boolean_70;
export type String_1002 = string;
export type Boolean_70 = boolean;

export interface KNOWLEDGE_BASE_ADD_FILEInput {
  fileUrl: String_999;
  path?: String_1000;
  filename?: String_1001;
  metadata?: Object_332;
}
export interface Object_332 {
  [k: string]: StringBoolean;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_ADD_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_1003 = string;
/**
 * The dimension of the knowledge base
 */
export type Number_105 = number;

export interface KNOWLEDGE_BASE_CREATEInput {
  name: String_1003;
  dimension?: Number_105;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_1004 = string;

export interface KNOWLEDGE_BASE_DELETEInput {
  name: String_1004;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1005 = string;

export interface KNOWLEDGE_BASE_DELETE_FILEInput {
  fileUrl: String_1005;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETE_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1006 = string;
/**
 * The id of the content to forget
 */
export type Array_119 = String_1006[];

export interface KNOWLEDGE_BASE_FORGETInput {
  docIds: Array_119;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_FORGETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LIST_FILESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_120 = unknown[];

export interface KNOWLEDGE_BASE_LIST_FILESOutput {
  items: Array_120;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the content being remembered
 */
export type String_1007 = string;
/**
 * The content to remember
 */
export type String_1008 = string;
export type String_1009 = string;

export interface KNOWLEDGE_BASE_REMEMBERInput {
  docId?: String_1007;
  content: String_1008;
  metadata?: Object_333;
}
/**
 * The metadata to remember
 */
export interface Object_333 {
  [k: string]: String_1009;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_REMEMBEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search the knowledge base
 */
export type String_1010 = string;
/**
 * The number of results to return
 */
export type Number_106 = number;
/**
 * Whether to return the content
 */
export type Boolean_71 = boolean;

export interface KNOWLEDGE_BASE_SEARCHInput {
  query: String_1010;
  topK?: Number_106;
  content?: Boolean_71;
  filter?: Object_334;
}
/**
 * Filters to match against document metadata and narrow search results. Supports MongoDB-style query operators:
 *         comparison ($eq, $ne, $gt, $gte, $lt, $lte), array ($in, $nin), logical ($and, $or), and existence ($exists).
 *         Only returns documents whose metadata matches the specified filter conditions.
 *         Examples:
 *         { "metadata": {{"category": "documents"}},
 *         { "metadata": {{"priority": {"$gte": 3}}},
 *         { "metadata": {{"status": {"$in": ["active", "pending"]}}},
 *         { "metadata": {{"$and": [{"type": "pdf"}, {"size": {"$lt": 1000}}]}}}
 */
export interface Object_334 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_SEARCHOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Optional prefix to filter branch names
 */
export type String_1011 = string;

export interface LIST_BRANCHESInput {
  prefix?: String_1011;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1012 = string;
export type Number_107 = number;
export type StringNull_46 = String_1013 | Null_102;
export type String_1013 = string;
export type Null_102 = null;
export type Array_121 = Object_335[];
export type Number_108 = number;

export interface LIST_BRANCHESOutput {
  branches: Array_121;
  count: Number_108;
}
export interface Object_335 {
  name: String_1012;
  createdAt: Number_107;
  metadata: Object_336;
  originBranch: StringNull_46;
}
export interface Object_336 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1014 = string;
/**
 * Optional prefix to filter files (use select instead)
 */
export type String_1015 = string;
export type String_1016 = string;
/**
 * Optional list of files to select
 */
export type Array_122 = String_1016[];
/**
 * Include file content as base64 in the response
 */
export type Boolean_72 = boolean;

export interface LIST_FILESInput {
  branch?: String_1014;
  prefix?: String_1015;
  select?: Array_122;
  includeContent?: Boolean_72;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1017 = string;
export type Number_109 = number;
export type Number_110 = number;
export type Number_111 = number;
export type String_1018 = string;
export type Number_112 = number;

export interface LIST_FILESOutput {
  files: Object_337;
  count: Number_112;
}
export interface Object_337 {
  [k: string]: Object_338;
}
export interface Object_338 {
  address: String_1017;
  metadata: Object_339;
  sizeInBytes: Number_109;
  mtime: Number_110;
  ctime: Number_111;
  content?: String_1018;
}
export interface Object_339 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch to merge into (defaults to 'main')
 */
export type String_1019 = string;
/**
 * The branch to merge from
 */
export type String_1020 = string;
/**
 * Merge strategy
 */
export type String_1021 = "OVERRIDE" | "LAST_WRITE_WINS";

export interface MERGE_BRANCHInput {
  targetBranch?: String_1019;
  sourceBranch: String_1020;
  strategy: String_1021;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_113 = number;
export type String_1022 = string;
export type Array_123 = String_1022[];
export type String_1023 = string;
export type Array_124 = String_1023[];
export type String_1024 = string;
export type Array_125 = String_1024[];
export type String_1025 = string;
export type String_1026 = "local" | "remote";
export type Number_114 = number;
export type Number_115 = number;
export type Array_126 = Object_340[];

export interface MERGE_BRANCHOutput {
  filesMerged: Number_113;
  added: Array_123;
  modified: Array_124;
  deleted: Array_125;
  conflicts?: Array_126;
}
export interface Object_340 {
  path: String_1025;
  resolved: String_1026;
  localMtime: Number_114;
  remoteMtime: Number_115;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1027 = string;
export type String_1028 = string;
export type String_1029 = string;
export type String_1030 = string;
export type Boolean_73 = boolean;
export type Boolean_74 = boolean;

export interface MODELS_CREATEInput {
  name: String_1027;
  model: String_1028;
  apiKey?: String_1029;
  description?: String_1030;
  byDeco?: Boolean_73;
  isEnabled?: Boolean_74;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1031 = string;

export interface MODELS_DELETEInput {
  id: String_1031;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1032 = string;

export interface MODELS_GETInput {
  id: String_1032;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_75 = boolean;
export type Boolean_76 = boolean;

export interface MODELS_LISTInput {
  excludeDisabled?: Boolean_75;
  excludeAuto?: Boolean_76;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_127 = unknown[];

export interface MODELS_LISTOutput {
  items: Array_127;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1033 = string;
export type String_1034 = string;
export type String_1035 = string;
export type StringNull_47 = String_1036 | Null_103;
export type String_1036 = string;
export type Null_103 = null;
export type Boolean_77 = boolean;
export type Boolean_78 = boolean;
export type String_1037 = string;

export interface MODELS_UPDATEInput {
  id: String_1033;
  data: Object_341;
}
export interface Object_341 {
  name?: String_1034;
  model?: String_1035;
  apiKey?: StringNull_47;
  isEnabled?: Boolean_77;
  byDeco?: Boolean_78;
  description?: String_1037;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the integration to create an OAuth code for
 */
export type String_1038 = string;

export interface OAUTH_CODE_CREATEInput {
  integrationId: String_1038;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The OAuth code
 */
export type String_1039 = string;

export interface OAUTH_CODE_CREATEOutput {
  code: String_1039;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount (in microdollars) of money to pre-authorize. Specified in USD dollars.
 */
export type StringNumber_2 = String_1040 | Number_116;
export type String_1040 = string;
export type Number_116 = number;

export interface PRE_AUTHORIZE_AMOUNTInput {
  amount: StringNumber_2;
  metadata?: Object_342;
}
export interface Object_342 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1041 = string;

export interface PRE_AUTHORIZE_AMOUNTOutput {
  id: String_1041;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1042 = string;
export type String_1043 = string;
export type String_1044 = string;

export interface PROMPTS_CREATEInput {
  name: String_1042;
  description?: String_1043;
  content: String_1044;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1045 = string;
export type String_1046 = string;
export type StringNull_48 = String_1047 | Null_104;
export type String_1047 = string;
export type Null_104 = null;
export type String_1048 = string;
export type BooleanNull_7 = Boolean_79 | Null_105;
export type Boolean_79 = boolean;
export type Null_105 = null;
export type String_1049 = string;
export type StringNull_49 = String_1050 | Null_106;
export type String_1050 = string;
export type Null_106 = null;

export interface PROMPTS_CREATEOutput {
  id: String_1045;
  name: String_1046;
  description: StringNull_48;
  content: String_1048;
  readonly?: BooleanNull_7;
  created_at: String_1049;
  updated_at?: StringNull_49;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1051 = string;

export interface PROMPTS_DELETEInput {
  id: String_1051;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_80 = boolean;

export interface PROMPTS_DELETEOutput {
  success: Boolean_80;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1052 = string;

export interface PROMPTS_GETInput {
  id: String_1052;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1053 = string;
export type Number_117 = number;
export type Number_118 = number;

export interface PROMPTS_GET_VERSIONSInput {
  id: String_1053;
  limit?: Number_117;
  offset?: Number_118;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull_50 = String_1054 | Null_107;
export type String_1054 = string;
export type Null_107 = null;
export type String_1055 = string;
export type StringNull_51 = String_1056 | Null_108;
export type String_1056 = string;
export type Null_108 = null;
export type String_1057 = string;
export type StringNull_52 = String_1058 | Null_109;
export type String_1058 = string;
export type Null_109 = null;
export type String_1059 = string;
export type StringNull_53 = String_1060 | Null_110;
export type String_1060 = string;
export type Null_110 = null;
export type Array_128 = Object_343[];

export interface PROMPTS_GET_VERSIONSOutput {
  items: Array_128;
}
export interface Object_343 {
  content: StringNull_50;
  created_at: String_1055;
  created_by: StringNull_51;
  id: String_1057;
  name: StringNull_52;
  prompt_id: String_1059;
  version_name: StringNull_53;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1061 = string;
/**
 * Filter prompts by ids
 */
export type Array_129 = String_1061[];
/**
 * Resolve mentions in the prompts
 */
export type Boolean_81 = boolean;
export type String_1062 = string;
/**
 * Exclude prompts by ids
 */
export type Array_130 = String_1062[];

export interface PROMPTS_LISTInput {
  ids?: Array_129;
  resolveMentions?: Boolean_81;
  excludeIds?: Array_130;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1063 = string;
export type String_1064 = string;
export type StringNull_54 = String_1065 | Null_111;
export type String_1065 = string;
export type Null_111 = null;
export type String_1066 = string;
export type BooleanNull_8 = Boolean_82 | Null_112;
export type Boolean_82 = boolean;
export type Null_112 = null;
export type String_1067 = string;
export type StringNull_55 = String_1068 | Null_113;
export type String_1068 = string;
export type Null_113 = null;
export type Array_131 = Object_344[];

export interface PROMPTS_LISTOutput {
  items: Array_131;
}
export interface Object_344 {
  id: String_1063;
  name: String_1064;
  description: StringNull_54;
  content: String_1066;
  readonly?: BooleanNull_8;
  created_at: String_1067;
  updated_at?: StringNull_55;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1069 = string;
export type String_1070 = string;

export interface PROMPTS_RENAME_VERSIONInput {
  id: String_1069;
  versionName: String_1070;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the version
 */
export type String_1071 = string;
/**
 * The id of the prompt
 */
export type String_1072 = string;
/**
 * The name of the version
 */
export type StringNull_56 = String_1073 | Null_114;
export type String_1073 = string;
export type Null_114 = null;
/**
 * The content of the version
 */
export type StringNull_57 = String_1074 | Null_115;
export type String_1074 = string;
export type Null_115 = null;
/**
 * The version name
 */
export type StringNull_58 = String_1075 | Null_116;
export type String_1075 = string;
export type Null_116 = null;
/**
 * The user who created the version
 */
export type StringNull_59 = String_1076 | Null_117;
export type String_1076 = string;
export type Null_117 = null;
/**
 * The date and time the version was created
 */
export type String_1077 = string;

export interface PROMPTS_RENAME_VERSIONOutput {
  id: String_1071;
  prompt_id: String_1072;
  name?: StringNull_56;
  content?: StringNull_57;
  version_name?: StringNull_58;
  created_by?: StringNull_59;
  created_at: String_1077;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1078 = string;
export type String_1079 = string;
export type String_1080 = string;
export type Null_118 = null;
export type String_1081 = string;
export type String_1082 = string;

export interface PROMPTS_UPDATEInput {
  id: String_1078;
  data: Object_345;
  versionName?: String_1082;
}
export interface Object_345 {
  name?: String_1079;
  description?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1080
      )
    | Null_118;
  content?: String_1081;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1083 = string;
export type String_1084 = string;
export type StringNull_60 = String_1085 | Null_119;
export type String_1085 = string;
export type Null_119 = null;
export type String_1086 = string;
export type BooleanNull_9 = Boolean_83 | Null_120;
export type Boolean_83 = boolean;
export type Null_120 = null;
export type String_1087 = string;
export type StringNull_61 = String_1088 | Null_121;
export type String_1088 = string;
export type Null_121 = null;

export interface PROMPTS_UPDATEOutput {
  id: String_1083;
  name: String_1084;
  description: StringNull_60;
  content: String_1086;
  readonly?: BooleanNull_9;
  created_at: String_1087;
  updated_at?: StringNull_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1089 = string;
/**
 * The file path within the branch
 */
export type String_1090 = string;
/**
 * Plain text string content
 */
export type String_1091 = string;
/**
 * Base64 encoded content
 */
export type String_1092 = string;
export type Number_119 = number;
/**
 * Array of bytes (0-255)
 */
export type Array_132 = Number_119[];
/**
 * Expected change time for conflict detection
 */
export type Number_120 = number;

export interface PUT_FILEInput {
  branch?: String_1089;
  path: String_1090;
  /**
   * The file content as plain string, base64 object, or array of bytes
   */
  content: String_1091 | Object_346 | Array_132;
  metadata?: Object_347;
  expectedCtime?: Number_120;
}
export interface Object_346 {
  base64: String_1092;
}
/**
 * Additional metadata key-value pairs
 */
export interface Object_347 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_84 = boolean;

export interface PUT_FILEOutput {
  conflict?: Boolean_84;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1093 = string;
/**
 * The file path within the branch
 */
export type String_1094 = string;
/**
 * Return format: 'base64' (default), 'byteArray', 'plainString', or 'json'
 */
export type String_1095 = "base64" | "byteArray" | "plainString" | "json";

export interface READ_FILEInput {
  branch?: String_1093;
  path: String_1094;
  format?: String_1095;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1096 = string;
export type Number_121 = number;
export type Number_122 = number;

export interface READ_FILEOutput {
  content?: unknown;
  address: String_1096;
  metadata: Object_348;
  mtime: Number_121;
  ctime: Number_122;
}
export interface Object_348 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1097 = string;

export interface REDEEM_VOUCHERInput {
  voucher: String_1097;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1098 = string;

export interface REDEEM_VOUCHEROutput {
  voucherId: String_1098;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1099 = string;
/**
 * Filter apps by scope name
 */
export type String_1100 = string;

export interface REGISTRY_LIST_APPSInput {
  search?: String_1099;
  scopeName?: String_1100;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1101 = string;
export type StringNull_62 = String_1102 | Null_122;
export type String_1102 = string;
export type Null_122 = null;
export type String_1103 = string;
export type String_1104 = string;
export type String_1105 = string;
export type String_1106 = string;
export type String_1107 = string;
export type String_1108 = string;
export type String_1109 = "HTTP";
export type String_1110 = string;
export type String_1111 = string;
export type String_1112 = "SSE";
export type String_1113 = string;
export type String_1114 = string;
export type String_1115 = string;
export type String_1116 = "Websocket";
export type String_1117 = string;
export type String_1118 = string;
export type String_1119 = "Deco";
export type String_1120 = string;
export type String_1121 = string;
export type String_1122 = "INNATE";
export type String_1123 = string;
export type String_1124 = string;
export type String_1125 = string;
export type String_1126 = string;
export type Boolean_85 = boolean;
export type String_1127 = string;
export type Boolean_86 = boolean;
export type String_1128 = string;
export type String_1129 = string;
export type String_1130 = string;
export type Array_134 = Object_356[];
export type Null_123 = null;
export type Array_133 = Object_349[];

export interface REGISTRY_LIST_APPSOutput {
  apps: Array_133;
}
export interface Object_349 {
  id: String_1101;
  workspace: StringNull_62;
  scopeId: String_1103;
  scopeName: String_1104;
  appName: String_1105;
  name: String_1106;
  description?: String_1107;
  icon?: String_1108;
  connection: Object_350 | Object_351 | Object_353 | Object_354 | Object_355;
  createdAt: String_1125;
  updatedAt: String_1126;
  unlisted: Boolean_85;
  friendlyName?: String_1127;
  verified?: Boolean_86;
  tools?: Array_134;
  metadata?: Object_360 | Null_123;
}
export interface Object_350 {
  type: String_1109;
  url: String_1110;
  token?: String_1111;
}
export interface Object_351 {
  type: String_1112;
  url: String_1113;
  token?: String_1114;
  headers?: Object_352;
}
export interface Object_352 {
  [k: string]: String_1115;
}
export interface Object_353 {
  type: String_1116;
  url: String_1117;
  token?: String_1118;
}
export interface Object_354 {
  type: String_1119;
  tenant: String_1120;
  token?: String_1121;
}
export interface Object_355 {
  type: String_1122;
  name: String_1123;
  workspace?: String_1124;
}
export interface Object_356 {
  id: String_1128;
  name: String_1129;
  description?: String_1130;
  inputSchema: Object_357;
  outputSchema?: Object_358;
  metadata?: Object_359;
}
export interface Object_357 {
  [k: string]: unknown;
}
export interface Object_358 {
  [k: string]: unknown;
}
export interface Object_359 {
  [k: string]: unknown;
}
export interface Object_360 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1131 = string;

export interface REGISTRY_LIST_PUBLISHED_APPSInput {
  search?: String_1131;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1132 = string;
export type StringNull_63 = String_1133 | Null_124;
export type String_1133 = string;
export type Null_124 = null;
export type String_1134 = string;
export type String_1135 = string;
export type String_1136 = string;
export type String_1137 = string;
export type String_1138 = string;
export type String_1139 = string;
export type String_1140 = "HTTP";
export type String_1141 = string;
export type String_1142 = string;
export type String_1143 = "SSE";
export type String_1144 = string;
export type String_1145 = string;
export type String_1146 = string;
export type String_1147 = "Websocket";
export type String_1148 = string;
export type String_1149 = string;
export type String_1150 = "Deco";
export type String_1151 = string;
export type String_1152 = string;
export type String_1153 = "INNATE";
export type String_1154 = string;
export type String_1155 = string;
export type String_1156 = string;
export type String_1157 = string;
export type Boolean_87 = boolean;
export type String_1158 = string;
export type Boolean_88 = boolean;
export type String_1159 = string;
export type String_1160 = string;
export type String_1161 = string;
export type Array_136 = Object_368[];
export type Null_125 = null;
export type Array_135 = Object_361[];

export interface REGISTRY_LIST_PUBLISHED_APPSOutput {
  apps: Array_135;
}
export interface Object_361 {
  id: String_1132;
  workspace: StringNull_63;
  scopeId: String_1134;
  scopeName: String_1135;
  appName: String_1136;
  name: String_1137;
  description?: String_1138;
  icon?: String_1139;
  connection: Object_362 | Object_363 | Object_365 | Object_366 | Object_367;
  createdAt: String_1156;
  updatedAt: String_1157;
  unlisted: Boolean_87;
  friendlyName?: String_1158;
  verified?: Boolean_88;
  tools?: Array_136;
  metadata?: Object_372 | Null_125;
}
export interface Object_362 {
  type: String_1140;
  url: String_1141;
  token?: String_1142;
}
export interface Object_363 {
  type: String_1143;
  url: String_1144;
  token?: String_1145;
  headers?: Object_364;
}
export interface Object_364 {
  [k: string]: String_1146;
}
export interface Object_365 {
  type: String_1147;
  url: String_1148;
  token?: String_1149;
}
export interface Object_366 {
  type: String_1150;
  tenant: String_1151;
  token?: String_1152;
}
export interface Object_367 {
  type: String_1153;
  name: String_1154;
  workspace?: String_1155;
}
export interface Object_368 {
  id: String_1159;
  name: String_1160;
  description?: String_1161;
  inputSchema: Object_369;
  outputSchema?: Object_370;
  metadata?: Object_371;
}
export interface Object_369 {
  [k: string]: unknown;
}
export interface Object_370 {
  [k: string]: unknown;
}
export interface Object_371 {
  [k: string]: unknown;
}
export interface Object_372 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter scopes by name
 */
export type String_1162 = string;

export interface REGISTRY_LIST_SCOPESInput {
  search?: String_1162;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1163 = string;
export type String_1164 = string;
export type StringNull_64 = String_1165 | Null_126;
export type String_1165 = string;
export type Null_126 = null;
export type StringNull_65 = String_1166 | Null_127;
export type String_1166 = string;
export type Null_127 = null;
export type String_1167 = string;
export type String_1168 = string;
export type Array_137 = Object_373[];

export interface REGISTRY_LIST_SCOPESOutput {
  scopes: Array_137;
}
export interface Object_373 {
  id: String_1163;
  scopeName: String_1164;
  workspace: StringNull_64;
  projectId: StringNull_65;
  createdAt: String_1167;
  updatedAt: String_1168;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The scope to publish to (defaults to team slug, automatically claimed on first use)
 */
export type String_1169 = string;
/**
 * The name of the app
 */
export type String_1170 = string;
/**
 * A friendly name for the app
 */
export type String_1171 = string;
/**
 * A description of the app
 */
export type String_1172 = string;
/**
 * URL to an icon for the app
 */
export type String_1173 = string;
export type String_1174 = "HTTP";
export type String_1175 = string;
export type String_1176 = string;
export type String_1177 = "SSE";
export type String_1178 = string;
export type String_1179 = string;
export type String_1180 = string;
export type String_1181 = "Websocket";
export type String_1182 = string;
export type String_1183 = string;
export type String_1184 = "Deco";
export type String_1185 = string;
export type String_1186 = string;
export type String_1187 = "INNATE";
export type String_1188 = string;
export type String_1189 = string;
/**
 * Whether the app should be unlisted
 */
export type Boolean_89 = boolean;

export interface REGISTRY_PUBLISH_APPInput {
  scopeName: String_1169;
  name: String_1170;
  friendlyName?: String_1171;
  description?: String_1172;
  icon?: String_1173;
  /**
   * The MCP connection configuration for the app
   */
  connection: Object_374 | Object_375 | Object_377 | Object_378 | Object_379;
  metadata?: Object_380;
  unlisted?: Boolean_89;
}
export interface Object_374 {
  type: String_1174;
  url: String_1175;
  token?: String_1176;
}
export interface Object_375 {
  type: String_1177;
  url: String_1178;
  token?: String_1179;
  headers?: Object_376;
}
export interface Object_376 {
  [k: string]: String_1180;
}
export interface Object_377 {
  type: String_1181;
  url: String_1182;
  token?: String_1183;
}
export interface Object_378 {
  type: String_1184;
  tenant: String_1185;
  token?: String_1186;
}
export interface Object_379 {
  type: String_1187;
  name: String_1188;
  workspace?: String_1189;
}
/**
 * Metadata for the app
 */
export interface Object_380 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_PUBLISH_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1190 = string;
export type String_1191 = string;
export type Number_123 = number;
export type String_1192 = string;
export type Array_139 = Object_382[];
export type Array_138 = Object_381[];

export interface TEAM_MEMBERS_INVITEInput_1 {
  teamId: String_1190;
  invitees: Array_138;
}
export interface Object_381 {
  email: String_1191;
  roles: Array_139;
}
export interface Object_382 {
  id: Number_123;
  name: String_1192;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the view
 */
export type String_1193 = string;
/**
 * Display title for the view
 */
export type String_1194 = string;
/**
 * Icon identifier for the view
 */
export type String_1195 = string;
/**
 * Type of view (custom for views, resource for resources)
 */
export type String_1196 = "custom" | "resource";
/**
 * Integration-specific view name
 */
export type String_1197 = string;
export type String_1198 = string;
/**
 * Optional list of tool names to enable for this view
 */
export type Array_140 = String_1198[];
export type String_1199 = string;
/**
 * Optional list of textual rules to persist in context
 */
export type Array_141 = String_1199[];
/**
 * Integration ID
 */
export type String_1200 = string;
/**
 * Type of resource (for resources only)
 */
export type String_1201 = string;

export interface TEAMS_ADD_VIEWInput {
  view: Object_383;
}
/**
 * View or resource configuration to add
 */
export interface Object_383 {
  id: String_1193;
  title: String_1194;
  icon: String_1195;
  type: String_1196;
  name: String_1197;
  tools?: Array_140;
  rules?: Array_141;
  integration: Object_384;
  resourceType?: String_1201;
}
export interface Object_384 {
  id: String_1200;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_ADD_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the view or resource to remove
 */
export type String_1202 = string;

export interface TEAMS_REMOVE_VIEWInput {
  viewId: String_1202;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_REMOVE_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1203 = string;

export interface THREADS_GETInput {
  id: String_1203;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1204 = string;

export interface THREADS_GET_MESSAGESInput {
  id: String_1204;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GET_MESSAGESOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_124 = number;
export type String_1205 = string;
export type String_1206 = string;
export type String_1207 =
  | "createdAt_desc"
  | "createdAt_asc"
  | "updatedAt_desc"
  | "updatedAt_asc";
export type String_1208 = string;

export interface THREADS_LISTInput {
  limit?: Number_124;
  agentId?: String_1205;
  resourceId?: String_1206;
  orderBy?: String_1207;
  cursor?: String_1208;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1209 = string;

export interface THREADS_UPDATE_METADATAInput {
  threadId: String_1209;
  metadata: Object_385;
}
export interface Object_385 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1210 = string;
export type String_1211 = string;

export interface THREADS_UPDATE_TITLEInput {
  threadId: String_1210;
  title: String_1211;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_TITLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1212 = string;

export interface TRIGGERS_ACTIVATEInput {
  id: String_1212;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_ACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The title of the trigger
 */
export type String_1213 = string;
/**
 * The description of the trigger
 */
export type String_1214 = string;
export type String_1215 = string;
export type String_1216 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1217 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1218 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1219 = string;
export type String_1220 = "user" | "assistant" | "system";
export type String_1221 = string;
/**
 * The messages to send to the LLM
 */
export type Array_142 = Object_388[];
/**
 * The URL of the webhook
 */
export type String_1222 = string;
/**
 * The integration ID
 */
export type String_1223 = string;
/**
 * The tool name
 */
export type String_1224 = string;
/**
 * The title of the trigger
 */
export type String_1225 = string;
/**
 * The description of the trigger
 */
export type String_1226 = string;
export type String_1227 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1228 = string;
/**
 * The passphrase for the webhook
 */
export type String_1229 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1230 = string;

export interface TRIGGERS_CREATEInput {
  trigger: (Object_386 | Object_389) | (Object_392 | Object_394);
}
export interface Object_386 {
  title: String_1213;
  description?: String_1214;
  cronExp: String_1215;
  type: String_1216;
  agentId: String_1217;
  prompt: Object_387;
  url?: String_1222;
}
export interface Object_387 {
  threadId?: String_1218;
  resourceId?: String_1219;
  messages: Array_142;
}
export interface Object_388 {
  role: String_1220;
  content: String_1221;
}
export interface Object_389 {
  title: String_1213;
  description?: String_1214;
  cronExp: String_1215;
  type: String_1216;
  callTool: Object_390;
}
export interface Object_390 {
  integrationId: String_1223;
  toolName: String_1224;
  arguments?: Object_391;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_391 {
  [k: string]: unknown;
}
export interface Object_392 {
  title: String_1225;
  description?: String_1226;
  type: String_1227;
  url?: String_1228;
  passphrase?: String_1229;
  agentId: String_1230;
  schema?: Object_393;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_393 {
  [k: string]: unknown;
}
export interface Object_394 {
  title: String_1225;
  description?: String_1226;
  type: String_1227;
  url?: String_1228;
  passphrase?: String_1229;
  callTool: Object_390;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_WEBHOOKInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1231 = string;
export type String_1232 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1233 = string;
/**
 * The description of the trigger
 */
export type String_1234 = string;
export type String_1235 = string;
export type String_1236 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1237 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1238 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1239 = string;
export type String_1240 = "user" | "assistant" | "system";
export type String_1241 = string;
/**
 * The messages to send to the LLM
 */
export type Array_143 = Object_397[];
/**
 * The URL of the webhook
 */
export type String_1242 = string;
/**
 * The integration ID
 */
export type String_1243 = string;
/**
 * The tool name
 */
export type String_1244 = string;
/**
 * The title of the trigger
 */
export type String_1245 = string;
/**
 * The description of the trigger
 */
export type String_1246 = string;
export type String_1247 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1248 = string;
/**
 * The passphrase for the webhook
 */
export type String_1249 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1250 = string;
/**
 * The creation date
 */
export type String_1251 = string;
/**
 * The update date
 */
export type String_1252 = string;
/**
 * The user ID
 */
export type String_1253 = string;
/**
 * The user name
 */
export type String_1254 = string;
/**
 * The user email
 */
export type String_1255 = string;
/**
 * The user avatar
 */
export type String_1256 = string;
/**
 * The trigger status
 */
export type Boolean_90 = boolean;
/**
 * The workspace ID
 */
export type StringNull_66 = String_1257 | Null_128;
export type String_1257 = string;
export type Null_128 = null;

export interface TRIGGERS_CREATE_WEBHOOKOutput {
  id: String_1231;
  type: String_1232;
  data: (Object_395 | Object_398) | (Object_401 | Object_403);
  createdAt: String_1251;
  updatedAt: String_1252;
  user: Object_404;
  active?: Boolean_90;
  workspace: StringNull_66;
}
export interface Object_395 {
  title: String_1233;
  description?: String_1234;
  cronExp: String_1235;
  type: String_1236;
  agentId: String_1237;
  prompt: Object_396;
  url?: String_1242;
}
export interface Object_396 {
  threadId?: String_1238;
  resourceId?: String_1239;
  messages: Array_143;
}
export interface Object_397 {
  role: String_1240;
  content: String_1241;
}
export interface Object_398 {
  title: String_1233;
  description?: String_1234;
  cronExp: String_1235;
  type: String_1236;
  callTool: Object_399;
}
export interface Object_399 {
  integrationId: String_1243;
  toolName: String_1244;
  arguments?: Object_400;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_400 {
  [k: string]: unknown;
}
export interface Object_401 {
  title: String_1245;
  description?: String_1246;
  type: String_1247;
  url?: String_1248;
  passphrase?: String_1249;
  agentId: String_1250;
  schema?: Object_402;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_402 {
  [k: string]: unknown;
}
export interface Object_403 {
  title: String_1245;
  description?: String_1246;
  type: String_1247;
  url?: String_1248;
  passphrase?: String_1249;
  callTool: Object_399;
}
export interface Object_404 {
  id: String_1253;
  metadata: Object_405;
}
export interface Object_405 {
  full_name: String_1254;
  email: String_1255;
  avatar_url: String_1256;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1258 = string;

export interface TRIGGERS_DEACTIVATEInput {
  id: String_1258;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_DEACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1259 = string;

export interface TRIGGERS_DELETEInput {
  id: String_1259;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1260 = string;

export interface TRIGGERS_DELETEOutput {
  id: String_1260;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1261 = string;

export interface TRIGGERS_GETInput {
  id: String_1261;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1262 = string;

export interface TRIGGERS_GET_WEBHOOK_URLInput {
  id: String_1262;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL of the webhook trigger
 */
export type String_1263 = string;

export interface TRIGGERS_GET_WEBHOOK_URLOutput {
  url?: String_1263;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1264 = string;

export interface TRIGGERS_LISTInput {
  agentId?: String_1264;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1265 = string;
export type String_1266 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1267 = string;
/**
 * The description of the trigger
 */
export type String_1268 = string;
export type String_1269 = string;
export type String_1270 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1271 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1272 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1273 = string;
export type String_1274 = "user" | "assistant" | "system";
export type String_1275 = string;
/**
 * The messages to send to the LLM
 */
export type Array_145 = Object_409[];
/**
 * The URL of the webhook
 */
export type String_1276 = string;
/**
 * The integration ID
 */
export type String_1277 = string;
/**
 * The tool name
 */
export type String_1278 = string;
/**
 * The title of the trigger
 */
export type String_1279 = string;
/**
 * The description of the trigger
 */
export type String_1280 = string;
export type String_1281 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1282 = string;
/**
 * The passphrase for the webhook
 */
export type String_1283 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1284 = string;
/**
 * The creation date
 */
export type String_1285 = string;
/**
 * The update date
 */
export type String_1286 = string;
/**
 * The user ID
 */
export type String_1287 = string;
/**
 * The user name
 */
export type String_1288 = string;
/**
 * The user email
 */
export type String_1289 = string;
/**
 * The user avatar
 */
export type String_1290 = string;
/**
 * The trigger status
 */
export type Boolean_91 = boolean;
/**
 * The workspace ID
 */
export type StringNull_67 = String_1291 | Null_129;
export type String_1291 = string;
export type Null_129 = null;
export type Array_144 = Object_406[];

export interface TRIGGERS_LISTOutput {
  triggers: Array_144;
}
export interface Object_406 {
  id: String_1265;
  type: String_1266;
  data: (Object_407 | Object_410) | (Object_413 | Object_415);
  createdAt: String_1285;
  updatedAt: String_1286;
  user: Object_416;
  active?: Boolean_91;
  workspace: StringNull_67;
}
export interface Object_407 {
  title: String_1267;
  description?: String_1268;
  cronExp: String_1269;
  type: String_1270;
  agentId: String_1271;
  prompt: Object_408;
  url?: String_1276;
}
export interface Object_408 {
  threadId?: String_1272;
  resourceId?: String_1273;
  messages: Array_145;
}
export interface Object_409 {
  role: String_1274;
  content: String_1275;
}
export interface Object_410 {
  title: String_1267;
  description?: String_1268;
  cronExp: String_1269;
  type: String_1270;
  callTool: Object_411;
}
export interface Object_411 {
  integrationId: String_1277;
  toolName: String_1278;
  arguments?: Object_412;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_412 {
  [k: string]: unknown;
}
export interface Object_413 {
  title: String_1279;
  description?: String_1280;
  type: String_1281;
  url?: String_1282;
  passphrase?: String_1283;
  agentId: String_1284;
  schema?: Object_414;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_414 {
  [k: string]: unknown;
}
export interface Object_415 {
  title: String_1279;
  description?: String_1280;
  type: String_1281;
  url?: String_1282;
  passphrase?: String_1283;
  callTool: Object_411;
}
export interface Object_416 {
  id: String_1287;
  metadata: Object_417;
}
export interface Object_417 {
  full_name: String_1288;
  email: String_1289;
  avatar_url: String_1290;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1292 = string;
/**
 * The title of the trigger
 */
export type String_1293 = string;
/**
 * The description of the trigger
 */
export type String_1294 = string;
export type String_1295 = string;
export type String_1296 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1297 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1298 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1299 = string;
export type String_1300 = "user" | "assistant" | "system";
export type String_1301 = string;
/**
 * The messages to send to the LLM
 */
export type Array_146 = Object_420[];
/**
 * The URL of the webhook
 */
export type String_1302 = string;
/**
 * The integration ID
 */
export type String_1303 = string;
/**
 * The tool name
 */
export type String_1304 = string;
/**
 * The title of the trigger
 */
export type String_1305 = string;
/**
 * The description of the trigger
 */
export type String_1306 = string;
export type String_1307 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1308 = string;
/**
 * The passphrase for the webhook
 */
export type String_1309 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1310 = string;

export interface TRIGGERS_UPDATEInput {
  id: String_1292;
  data: (Object_418 | Object_421) | (Object_424 | Object_426);
}
export interface Object_418 {
  title: String_1293;
  description?: String_1294;
  cronExp: String_1295;
  type: String_1296;
  agentId: String_1297;
  prompt: Object_419;
  url?: String_1302;
}
export interface Object_419 {
  threadId?: String_1298;
  resourceId?: String_1299;
  messages: Array_146;
}
export interface Object_420 {
  role: String_1300;
  content: String_1301;
}
export interface Object_421 {
  title: String_1293;
  description?: String_1294;
  cronExp: String_1295;
  type: String_1296;
  callTool: Object_422;
}
export interface Object_422 {
  integrationId: String_1303;
  toolName: String_1304;
  arguments?: Object_423;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_423 {
  [k: string]: unknown;
}
export interface Object_424 {
  title: String_1305;
  description?: String_1306;
  type: String_1307;
  url?: String_1308;
  passphrase?: String_1309;
  agentId: String_1310;
  schema?: Object_425;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_425 {
  [k: string]: unknown;
}
export interface Object_426 {
  title: String_1305;
  description?: String_1306;
  type: String_1307;
  url?: String_1308;
  passphrase?: String_1309;
  callTool: Object_422;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_1311 = string;
/**
 * The description of the tool
 */
export type String_1312 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1313 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1314 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_147 = Object_430[];

export interface DECO_RESOURCE_TOOL_CREATEInput_1 {
  data: Object_427;
}
/**
 * Resource data to create
 */
export interface Object_427 {
  name: String_1311;
  description: String_1312;
  inputSchema: Object_428;
  outputSchema: Object_429;
  execute: String_1313;
  dependencies?: Array_147;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_428 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_429 {
  [k: string]: unknown;
}
export interface Object_430 {
  integrationId: String_1314;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_1315 = string;
/**
 * The name of the tool
 */
export type String_1316 = string;
/**
 * The description of the tool
 */
export type String_1317 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1318 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1319 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_148 = Object_434[];
/**
 * Creation timestamp
 */
export type String_1320 = string;
/**
 * Last update timestamp
 */
export type String_1321 = string;
/**
 * User who created the resource
 */
export type String_1322 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput_1 {
  uri: String_1315;
  data: Object_431;
  created_at?: String_1320;
  updated_at?: String_1321;
  created_by?: String_1322;
}
/**
 * Created resource data
 */
export interface Object_431 {
  name: String_1316;
  description: String_1317;
  inputSchema: Object_432;
  outputSchema: Object_433;
  execute: String_1318;
  dependencies?: Array_148;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_432 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_433 {
  [k: string]: unknown;
}
export interface Object_434 {
  integrationId: String_1319;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_1323 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput_1 {
  uri: String_1323;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_92 = boolean;
/**
 * URI of the deleted resource
 */
export type String_1324 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput_1 {
  success: Boolean_92;
  uri: String_1324;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1325 = string;

export interface DECO_RESOURCE_TOOL_READInput_1 {
  uri: String_1325;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1326 = string;
/**
 * The name of the tool
 */
export type String_1327 = string;
/**
 * The description of the tool
 */
export type String_1328 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1329 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1330 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_149 = Object_438[];
/**
 * Creation timestamp
 */
export type String_1331 = string;
/**
 * Last update timestamp
 */
export type String_1332 = string;
/**
 * User who created the resource
 */
export type String_1333 = string;
/**
 * User who last updated the resource
 */
export type String_1334 = string;

export interface DECO_RESOURCE_TOOL_READOutput_1 {
  uri: String_1326;
  data: Object_435;
  created_at?: String_1331;
  updated_at?: String_1332;
  created_by?: String_1333;
  updated_by?: String_1334;
}
/**
 * Resource data
 */
export interface Object_435 {
  name: String_1327;
  description: String_1328;
  inputSchema: Object_436;
  outputSchema: Object_437;
  execute: String_1329;
  dependencies?: Array_149;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_436 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_437 {
  [k: string]: unknown;
}
export interface Object_438 {
  integrationId: String_1330;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1335 = string;
/**
 * Page number (1-based)
 */
export type Integer_44 = number;
/**
 * Number of items per page
 */
export type Integer_45 = number;
/**
 * Field to sort by
 */
export type String_1336 = string;
/**
 * Sort order
 */
export type String_1337 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput_1 {
  term?: String_1335;
  page?: Integer_44;
  pageSize?: Integer_45;
  filters?: Object_439;
  sortBy?: String_1336;
  sortOrder?: String_1337;
}
/**
 * Additional filters to apply
 */
export interface Object_439 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1338 = string;
export type String_1339 = string;
/**
 * Description of the resource
 */
export type String_1340 = string;
/**
 * URL to the resource icon
 */
export type String_1341 = string;
/**
 * The name of the tool
 */
export type String_1342 = string;
/**
 * The description of the tool
 */
export type String_1343 = string;
/**
 * Creation timestamp
 */
export type String_1344 = string;
/**
 * Last update timestamp
 */
export type String_1345 = string;
/**
 * User who created the resource
 */
export type String_1346 = string;
/**
 * User who last updated the resource
 */
export type String_1347 = string;
/**
 * Array of matching resources
 */
export type Array_150 = Object_440[];
/**
 * Total number of matching resources
 */
export type Integer_46 = number;
/**
 * Current page number
 */
export type Integer_47 = number;
/**
 * Number of items per page
 */
export type Integer_48 = number;
/**
 * Total number of pages
 */
export type Integer_49 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_93 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_94 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput_1 {
  items: Array_150;
  totalCount: Integer_46;
  page: Integer_47;
  pageSize: Integer_48;
  totalPages: Integer_49;
  hasNextPage: Boolean_93;
  hasPreviousPage: Boolean_94;
}
export interface Object_440 {
  uri: String_1338;
  /**
   * Resource data with required name
   */
  data: Object_441 & Object_442;
  created_at?: String_1344;
  updated_at?: String_1345;
  created_by?: String_1346;
  updated_by?: String_1347;
}
export interface Object_441 {
  name: String_1339;
  description?: String_1340;
  icon?: String_1341;
}
export interface Object_442 {
  name: String_1342;
  description: String_1343;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_1348 = string;
/**
 * The name of the tool
 */
export type String_1349 = string;
/**
 * The description of the tool
 */
export type String_1350 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1351 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1352 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_151 = Object_446[];

export interface DECO_RESOURCE_TOOL_UPDATEInput_1 {
  uri: String_1348;
  data: Object_443;
}
/**
 * Updated resource data
 */
export interface Object_443 {
  name: String_1349;
  description: String_1350;
  inputSchema: Object_444;
  outputSchema: Object_445;
  execute: String_1351;
  dependencies?: Array_151;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_444 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_445 {
  [k: string]: unknown;
}
export interface Object_446 {
  integrationId: String_1352;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_1353 = string;
/**
 * The name of the tool
 */
export type String_1354 = string;
/**
 * The description of the tool
 */
export type String_1355 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1356 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1357 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_152 = Object_450[];
/**
 * Original creation timestamp
 */
export type String_1358 = string;
/**
 * Last update timestamp
 */
export type String_1359 = string;
/**
 * User who originally created the resource
 */
export type String_1360 = string;
/**
 * User who last updated the resource
 */
export type String_1361 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput_1 {
  uri: String_1353;
  data: Object_447;
  created_at?: String_1358;
  updated_at?: String_1359;
  created_by?: String_1360;
  updated_by?: String_1361;
}
/**
 * Updated resource data
 */
export interface Object_447 {
  name: String_1354;
  description: String_1355;
  inputSchema: Object_448;
  outputSchema: Object_449;
  execute: String_1356;
  dependencies?: Array_152;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_448 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_449 {
  [k: string]: unknown;
}
export interface Object_450 {
  integrationId: String_1357;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_1362 = string;
/**
 * The token to use for the tool execution
 */
export type String_1363 = string;

export interface DECO_TOOL_CALL_TOOLInput_1 {
  uri: String_1362;
  input: Object_451;
  authorization?: String_1363;
}
/**
 * The input of the code
 */
export interface Object_451 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1364 = "log" | "warn" | "error";
export type String_1365 = string;
/**
 * Console logs from the execution
 */
export type Array_153 = Object_452[];

export interface DECO_TOOL_CALL_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_153;
}
export interface Object_452 {
  type: String_1364;
  content: String_1365;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_1366 = string;
/**
 * The description of the tool
 */
export type String_1367 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1368 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1369 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_154 = Object_456[];
/**
 * The token to use for the tool execution
 */
export type String_1370 = string;

export interface DECO_TOOL_RUN_TOOLInput_1 {
  tool: Object_453;
  input: Object_457;
  authorization?: String_1370;
}
export interface Object_453 {
  name: String_1366;
  description: String_1367;
  inputSchema: Object_454;
  outputSchema: Object_455;
  execute: String_1368;
  dependencies?: Array_154;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_454 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_455 {
  [k: string]: unknown;
}
export interface Object_456 {
  integrationId: String_1369;
}
/**
 * The input of the code
 */
export interface Object_457 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1371 = "log" | "warn" | "error";
export type String_1372 = string;
/**
 * Console logs from the execution
 */
export type Array_155 = Object_458[];

export interface DECO_TOOL_RUN_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_155;
}
export interface Object_458 {
  type: String_1371;
  content: String_1372;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1373 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput_1 {
  resource: String_1373;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1374 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1375 = string;
export type String_1376 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_156 = String_1376[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput_1 {
  url: String_1374;
  prompt?: String_1375;
  tools?: Array_156;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to create
 */
export type String_1377 = string;
/**
 * The source branch to branch from (optional - creates empty branch if not provided)
 */
export type String_1378 = string;

export interface CREATE_BRANCHInput_1 {
  branchName: String_1377;
  sourceBranch?: String_1378;
  metadata?: Object_459;
}
/**
 * Optional metadata for the branch
 */
export interface Object_459 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1379 = string;
export type String_1380 = string;
export type Number_125 = number;

export interface CREATE_BRANCHOutput_1 {
  branchName: String_1379;
  sourceBranch?: String_1380;
  createdAt: Number_125;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to delete
 */
export type String_1381 = string;

export interface DELETE_BRANCHInput_1 {
  branchName: String_1381;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_95 = boolean;
export type String_1382 = string;
export type Number_126 = number;

export interface DELETE_BRANCHOutput_1 {
  deleted: Boolean_95;
  branchName: String_1382;
  filesDeleted?: Number_126;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1383 = string;
/**
 * The file path within the branch
 */
export type String_1384 = string;

export interface DELETE_FILEInput_1 {
  branch?: String_1383;
  path: String_1384;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_96 = boolean;

export interface DELETE_FILEOutput_1 {
  deleted: Boolean_96;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The base branch to compare from (defaults to 'main')
 */
export type String_1385 = string;
/**
 * The branch to compare against
 */
export type String_1386 = string;

export interface DIFF_BRANCHInput_1 {
  baseBranch?: String_1385;
  compareBranch: String_1386;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1387 = string;
export type String_1388 = "added" | "modified" | "deleted";
export type String_1389 = string;
export type String_1390 = string;
export type Array_157 = Object_460[];

export interface DIFF_BRANCHOutput_1 {
  differences: Array_157;
}
export interface Object_460 {
  path: String_1387;
  type: String_1388;
  baseAddress?: String_1389;
  compareAddress?: String_1390;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Optional prefix to filter branch names
 */
export type String_1391 = string;

export interface LIST_BRANCHESInput_1 {
  prefix?: String_1391;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1392 = string;
export type Number_127 = number;
export type StringNull_68 = String_1393 | Null_130;
export type String_1393 = string;
export type Null_130 = null;
export type Array_158 = Object_461[];
export type Number_128 = number;

export interface LIST_BRANCHESOutput_1 {
  branches: Array_158;
  count: Number_128;
}
export interface Object_461 {
  name: String_1392;
  createdAt: Number_127;
  metadata: Object_462;
  originBranch: StringNull_68;
}
export interface Object_462 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1394 = string;
/**
 * Optional prefix to filter files (use select instead)
 */
export type String_1395 = string;
export type String_1396 = string;
/**
 * Optional list of files to select
 */
export type Array_159 = String_1396[];
/**
 * Include file content as base64 in the response
 */
export type Boolean_97 = boolean;

export interface LIST_FILESInput_1 {
  branch?: String_1394;
  prefix?: String_1395;
  select?: Array_159;
  includeContent?: Boolean_97;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1397 = string;
export type Number_129 = number;
export type Number_130 = number;
export type Number_131 = number;
export type String_1398 = string;
export type Number_132 = number;

export interface LIST_FILESOutput_1 {
  files: Object_463;
  count: Number_132;
}
export interface Object_463 {
  [k: string]: Object_464;
}
export interface Object_464 {
  address: String_1397;
  metadata: Object_465;
  sizeInBytes: Number_129;
  mtime: Number_130;
  ctime: Number_131;
  content?: String_1398;
}
export interface Object_465 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch to merge into (defaults to 'main')
 */
export type String_1399 = string;
/**
 * The branch to merge from
 */
export type String_1400 = string;
/**
 * Merge strategy
 */
export type String_1401 = "OVERRIDE" | "LAST_WRITE_WINS";

export interface MERGE_BRANCHInput_1 {
  targetBranch?: String_1399;
  sourceBranch: String_1400;
  strategy: String_1401;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_133 = number;
export type String_1402 = string;
export type Array_160 = String_1402[];
export type String_1403 = string;
export type Array_161 = String_1403[];
export type String_1404 = string;
export type Array_162 = String_1404[];
export type String_1405 = string;
export type String_1406 = "local" | "remote";
export type Number_134 = number;
export type Number_135 = number;
export type Array_163 = Object_466[];

export interface MERGE_BRANCHOutput_1 {
  filesMerged: Number_133;
  added: Array_160;
  modified: Array_161;
  deleted: Array_162;
  conflicts?: Array_163;
}
export interface Object_466 {
  path: String_1405;
  resolved: String_1406;
  localMtime: Number_134;
  remoteMtime: Number_135;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1407 = string;
/**
 * The file path within the branch
 */
export type String_1408 = string;
/**
 * Plain text string content
 */
export type String_1409 = string;
/**
 * Base64 encoded content
 */
export type String_1410 = string;
export type Number_136 = number;
/**
 * Array of bytes (0-255)
 */
export type Array_164 = Number_136[];
/**
 * Expected change time for conflict detection
 */
export type Number_137 = number;

export interface PUT_FILEInput_1 {
  branch?: String_1407;
  path: String_1408;
  /**
   * The file content as plain string, base64 object, or array of bytes
   */
  content: String_1409 | Object_467 | Array_164;
  metadata?: Object_468;
  expectedCtime?: Number_137;
}
export interface Object_467 {
  base64: String_1410;
}
/**
 * Additional metadata key-value pairs
 */
export interface Object_468 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_98 = boolean;

export interface PUT_FILEOutput_1 {
  conflict?: Boolean_98;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1411 = string;
/**
 * The file path within the branch
 */
export type String_1412 = string;
/**
 * Return format: 'base64' (default), 'byteArray', 'plainString', or 'json'
 */
export type String_1413 = "base64" | "byteArray" | "plainString" | "json";

export interface READ_FILEInput_1 {
  branch?: String_1411;
  path: String_1412;
  format?: String_1413;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1414 = string;
export type Number_138 = number;
export type Number_139 = number;

export interface READ_FILEOutput_1 {
  content?: unknown;
  address: String_1414;
  metadata: Object_469;
  mtime: Number_138;
  ctime: Number_139;
}
export interface Object_469 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1415 = string;
export type String_1416 = "user" | "assistant" | "system";
export type String_1417 = string;
export type String_1418 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_1419 = string;
/**
 * Media type of the attachment
 */
export type String_1420 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_1421 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_166 = Object_471[];
/**
 * Array of messages for the conversation
 */
export type Array_165 = Object_470[];
/**
 * Skip transaction creation
 */
export type Boolean_99 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_1422 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_140 = number;
/**
 * Temperature for the generation
 */
export type Number_141 = number;
export type String_1423 = string;
export type Array_167 = String_1423[];

export interface AI_GENERATEInput_1 {
  messages: Array_165;
  skipTransaction?: Boolean_99;
  model?: String_1422;
  maxTokens?: Number_140;
  temperature?: Number_141;
  tools?: Object_472;
}
export interface Object_470 {
  id?: String_1415;
  role: String_1416;
  content: String_1417;
  createdAt?: String_1418;
  experimental_attachments?: Array_166;
}
export interface Object_471 {
  name?: String_1419;
  contentType?: String_1420;
  url: String_1421;
}
/**
 * Tools available for the generation
 */
export interface Object_472 {
  [k: string]: Array_167;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_1424 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_142 = number;
/**
 * Number of tokens in the completion
 */
export type Number_143 = number;
/**
 * Total number of tokens used
 */
export type Number_144 = number;
/**
 * Transaction ID
 */
export type String_1425 = string;
/**
 * Reason why generation finished
 */
export type String_1426 = string;

export interface AI_GENERATEOutput_1 {
  text: String_1424;
  usage: Object_473;
  finishReason?: String_1426;
}
/**
 * Token usage information
 */
export interface Object_473 {
  promptTokens: Number_142;
  completionTokens: Number_143;
  totalTokens: Number_144;
  transactionId?: String_1425;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1427 = string;
export type String_1428 = "user" | "assistant" | "system";
export type String_1429 = string;
export type String_1430 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_1431 = string;
/**
 * Media type of the attachment
 */
export type String_1432 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_1433 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_169 = Object_475[];
/**
 * Array of messages for the conversation
 */
export type Array_168 = Object_474[];
/**
 * Skip transaction creation
 */
export type Boolean_100 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_1434 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_145 = number;
/**
 * Temperature for the generation
 */
export type Number_146 = number;
export type String_1435 = string;
export type Array_170 = String_1435[];

export interface AI_GENERATE_OBJECTInput_1 {
  messages: Array_168;
  schema: Object_476;
  skipTransaction?: Boolean_100;
  model?: String_1434;
  maxTokens?: Number_145;
  temperature?: Number_146;
  tools?: Object_477;
}
export interface Object_474 {
  id?: String_1427;
  role: String_1428;
  content: String_1429;
  createdAt?: String_1430;
  experimental_attachments?: Array_169;
}
export interface Object_475 {
  name?: String_1431;
  contentType?: String_1432;
  url: String_1433;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_476 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_477 {
  [k: string]: Array_170;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_147 = number;
/**
 * Number of tokens in the completion
 */
export type Number_148 = number;
/**
 * Total number of tokens used
 */
export type Number_149 = number;
/**
 * Transaction ID
 */
export type String_1436 = string;
/**
 * Reason why generation finished
 */
export type String_1437 = string;

export interface AI_GENERATE_OBJECTOutput_1 {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_478;
  finishReason?: String_1437;
}
/**
 * Token usage information
 */
export interface Object_478 {
  promptTokens: Number_147;
  completionTokens: Number_148;
  totalTokens: Number_149;
  transactionId?: String_1436;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The API key to check access for, if not provided, the current key from context will be used
 */
export type String_1438 = string;
export type String_1439 = string;
/**
 * All tools that wants to check access
 */
export type Array_171 = String_1439[];

export interface API_KEYS_CHECK_ACCESSInput_1 {
  key?: String_1438;
  tools: Array_171;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_101 = boolean;

export interface API_KEYS_CHECK_ACCESSOutput_1 {
  access: Object_479;
}
export interface Object_479 {
  [k: string]: Boolean_101;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the API key
 */
export type String_1440 = string;
export type String_1441 = "allow" | "deny";
export type String_1442 = string;
export type String_1443 = "is_integration";
export type String_1444 = string;
/**
 * Policies for the API key
 */
export type Array_172 = Object_480[];
export type String_1445 = string;
export type String_1446 = string;

export interface API_KEYS_CREATEInput_1 {
  name: String_1440;
  policies?: Array_172;
  claims?: Object_482;
}
export interface Object_480 {
  effect: String_1441;
  resource: String_1442;
  matchCondition?: Object_481;
}
export interface Object_481 {
  resource: String_1443;
  integrationId: String_1444;
}
/**
 * App Claims to be added to the API key
 */
export interface Object_482 {
  appName: String_1445;
  integrationId: String_1446;
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1447 = string;
/**
 * The name of the API key
 */
export type String_1448 = string;
/**
 * The workspace ID
 */
export type StringNull_69 = String_1449 | Null_131;
export type String_1449 = string;
export type Null_131 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_102 = boolean;
export type String_1450 = "allow" | "deny";
export type String_1451 = string;
export type String_1452 = "is_integration";
export type String_1453 = string;
/**
 * Access policies for the API key
 */
export type Array_173 = Object_483[];
/**
 * Creation timestamp
 */
export type String_1454 = string;
/**
 * Last update timestamp
 */
export type String_1455 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_70 = String_1456 | Null_132;
export type String_1456 = string;
export type Null_132 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_1457 = string;

export interface API_KEYS_CREATEOutput_1 {
  id: String_1447;
  name: String_1448;
  workspace: StringNull_69;
  enabled: Boolean_102;
  policies: Array_173;
  createdAt: String_1454;
  updatedAt: String_1455;
  deletedAt: StringNull_70;
  value: String_1457;
}
export interface Object_483 {
  effect: String_1450;
  resource: String_1451;
  matchCondition?: Object_484;
}
export interface Object_484 {
  resource: String_1452;
  integrationId: String_1453;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to delete
 */
export type String_1458 = string;

export interface API_KEYS_DELETEInput_1 {
  id: String_1458;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the deleted API key
 */
export type String_1459 = string;
/**
 * Confirmation that the key was deleted
 */
export type Boolean_103 = boolean;

export interface API_KEYS_DELETEOutput_1 {
  id: String_1459;
  deleted: Boolean_103;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to disable
 */
export type String_1460 = string;

export interface API_KEYS_DISABLEInput_1 {
  id: String_1460;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1461 = string;
/**
 * The name of the API key
 */
export type String_1462 = string;
/**
 * The workspace ID
 */
export type StringNull_71 = String_1463 | Null_133;
export type String_1463 = string;
export type Null_133 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_104 = boolean;
export type String_1464 = "allow" | "deny";
export type String_1465 = string;
export type String_1466 = "is_integration";
export type String_1467 = string;
/**
 * Access policies for the API key
 */
export type Array_174 = Object_485[];
/**
 * Creation timestamp
 */
export type String_1468 = string;
/**
 * Last update timestamp
 */
export type String_1469 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_72 = String_1470 | Null_134;
export type String_1470 = string;
export type Null_134 = null;

export interface API_KEYS_DISABLEOutput_1 {
  id: String_1461;
  name: String_1462;
  workspace: StringNull_71;
  enabled: Boolean_104;
  policies: Array_174;
  createdAt: String_1468;
  updatedAt: String_1469;
  deletedAt: StringNull_72;
}
export interface Object_485 {
  effect: String_1464;
  resource: String_1465;
  matchCondition?: Object_486;
}
export interface Object_486 {
  resource: String_1466;
  integrationId: String_1467;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to enable
 */
export type String_1471 = string;

export interface API_KEYS_ENABLEInput_1 {
  id: String_1471;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1472 = string;
/**
 * The name of the API key
 */
export type String_1473 = string;
/**
 * The workspace ID
 */
export type StringNull_73 = String_1474 | Null_135;
export type String_1474 = string;
export type Null_135 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_105 = boolean;
export type String_1475 = "allow" | "deny";
export type String_1476 = string;
export type String_1477 = "is_integration";
export type String_1478 = string;
/**
 * Access policies for the API key
 */
export type Array_175 = Object_487[];
/**
 * Creation timestamp
 */
export type String_1479 = string;
/**
 * Last update timestamp
 */
export type String_1480 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_74 = String_1481 | Null_136;
export type String_1481 = string;
export type Null_136 = null;

export interface API_KEYS_ENABLEOutput_1 {
  id: String_1472;
  name: String_1473;
  workspace: StringNull_73;
  enabled: Boolean_105;
  policies: Array_175;
  createdAt: String_1479;
  updatedAt: String_1480;
  deletedAt: StringNull_74;
}
export interface Object_487 {
  effect: String_1475;
  resource: String_1476;
  matchCondition?: Object_488;
}
export interface Object_488 {
  resource: String_1477;
  integrationId: String_1478;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_1482 = string;

export interface API_KEYS_GETInput_1 {
  id: String_1482;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1483 = string;
/**
 * The name of the API key
 */
export type String_1484 = string;
/**
 * The workspace ID
 */
export type StringNull_75 = String_1485 | Null_137;
export type String_1485 = string;
export type Null_137 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_106 = boolean;
export type String_1486 = "allow" | "deny";
export type String_1487 = string;
export type String_1488 = "is_integration";
export type String_1489 = string;
/**
 * Access policies for the API key
 */
export type Array_176 = Object_489[];
/**
 * Creation timestamp
 */
export type String_1490 = string;
/**
 * Last update timestamp
 */
export type String_1491 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_76 = String_1492 | Null_138;
export type String_1492 = string;
export type Null_138 = null;

export interface API_KEYS_GETOutput_1 {
  id: String_1483;
  name: String_1484;
  workspace: StringNull_75;
  enabled: Boolean_106;
  policies: Array_176;
  createdAt: String_1490;
  updatedAt: String_1491;
  deletedAt: StringNull_76;
}
export interface Object_489 {
  effect: String_1486;
  resource: String_1487;
  matchCondition?: Object_490;
}
export interface Object_490 {
  resource: String_1488;
  integrationId: String_1489;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTInput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1493 = string;
/**
 * The name of the API key
 */
export type String_1494 = string;
/**
 * The workspace ID
 */
export type StringNull_77 = String_1495 | Null_139;
export type String_1495 = string;
export type Null_139 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_107 = boolean;
export type String_1496 = "allow" | "deny";
export type String_1497 = string;
export type String_1498 = "is_integration";
export type String_1499 = string;
/**
 * Access policies for the API key
 */
export type Array_178 = Object_492[];
/**
 * Creation timestamp
 */
export type String_1500 = string;
/**
 * Last update timestamp
 */
export type String_1501 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_78 = String_1502 | Null_140;
export type String_1502 = string;
export type Null_140 = null;
/**
 * List of API keys
 */
export type Array_177 = Object_491[];

export interface API_KEYS_LISTOutput_1 {
  apiKeys: Array_177;
}
export interface Object_491 {
  id: String_1493;
  name: String_1494;
  workspace: StringNull_77;
  enabled: Boolean_107;
  policies: Array_178;
  createdAt: String_1500;
  updatedAt: String_1501;
  deletedAt: StringNull_78;
}
export interface Object_492 {
  effect: String_1496;
  resource: String_1497;
  matchCondition?: Object_493;
}
export interface Object_493 {
  resource: String_1498;
  integrationId: String_1499;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to reissue
 */
export type String_1503 = string;
export type String_1504 = "allow" | "deny";
export type String_1505 = string;
export type String_1506 = "is_integration";
export type String_1507 = string;
/**
 * Policies of the API key
 */
export type Array_179 = Object_494[];

export interface API_KEYS_REISSUEInput_1 {
  id: String_1503;
  /**
   * New claims to be added to the API key
   */
  claims?: {
    [k: string]: unknown;
  };
  policies?: Array_179;
}
export interface Object_494 {
  effect: String_1504;
  resource: String_1505;
  matchCondition?: Object_495;
}
export interface Object_495 {
  resource: String_1506;
  integrationId: String_1507;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1508 = string;
/**
 * The name of the API key
 */
export type String_1509 = string;
/**
 * The workspace ID
 */
export type StringNull_79 = String_1510 | Null_141;
export type String_1510 = string;
export type Null_141 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_108 = boolean;
export type String_1511 = "allow" | "deny";
export type String_1512 = string;
export type String_1513 = "is_integration";
export type String_1514 = string;
/**
 * Access policies for the API key
 */
export type Array_180 = Object_496[];
/**
 * Creation timestamp
 */
export type String_1515 = string;
/**
 * Last update timestamp
 */
export type String_1516 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_80 = String_1517 | Null_142;
export type String_1517 = string;
export type Null_142 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_1518 = string;

export interface API_KEYS_REISSUEOutput_1 {
  id: String_1508;
  name: String_1509;
  workspace: StringNull_79;
  enabled: Boolean_108;
  policies: Array_180;
  createdAt: String_1515;
  updatedAt: String_1516;
  deletedAt: StringNull_80;
  value: String_1518;
}
export interface Object_496 {
  effect: String_1511;
  resource: String_1512;
  matchCondition?: Object_497;
}
export interface Object_497 {
  resource: String_1513;
  integrationId: String_1514;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_1519 = string;
/**
 * New name for the API key
 */
export type String_1520 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_109 = boolean;
export type String_1521 = "allow" | "deny";
export type String_1522 = string;
export type String_1523 = "is_integration";
export type String_1524 = string;
/**
 * Policies for the API key
 */
export type Array_181 = Object_498[];

export interface API_KEYS_UPDATEInput_1 {
  id: String_1519;
  name?: String_1520;
  enabled?: Boolean_109;
  policies?: Array_181;
}
export interface Object_498 {
  effect: String_1521;
  resource: String_1522;
  matchCondition?: Object_499;
}
export interface Object_499 {
  resource: String_1523;
  integrationId: String_1524;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1525 = string;
/**
 * The name of the API key
 */
export type String_1526 = string;
/**
 * The workspace ID
 */
export type StringNull_81 = String_1527 | Null_143;
export type String_1527 = string;
export type Null_143 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_110 = boolean;
export type String_1528 = "allow" | "deny";
export type String_1529 = string;
export type String_1530 = "is_integration";
export type String_1531 = string;
/**
 * Access policies for the API key
 */
export type Array_182 = Object_500[];
/**
 * Creation timestamp
 */
export type String_1532 = string;
/**
 * Last update timestamp
 */
export type String_1533 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_82 = String_1534 | Null_144;
export type String_1534 = string;
export type Null_144 = null;

export interface API_KEYS_UPDATEOutput_1 {
  id: String_1525;
  name: String_1526;
  workspace: StringNull_81;
  enabled: Boolean_110;
  policies: Array_182;
  createdAt: String_1532;
  updatedAt: String_1533;
  deletedAt: StringNull_82;
}
export interface Object_500 {
  effect: String_1528;
  resource: String_1529;
  matchCondition?: Object_501;
}
export interface Object_501 {
  resource: String_1530;
  integrationId: String_1531;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to validate
 */
export type String_1535 = string;

export interface API_KEYS_VALIDATEInput_1 {
  id: String_1535;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1536 = string;
/**
 * The name of the API key
 */
export type String_1537 = string;
/**
 * The workspace ID
 */
export type StringNull_83 = String_1538 | Null_145;
export type String_1538 = string;
export type Null_145 = null;
/**
 * Whether the API key is enabled
 */
export type Boolean_111 = boolean;
export type String_1539 = "allow" | "deny";
export type String_1540 = string;
export type String_1541 = "is_integration";
export type String_1542 = string;
/**
 * Access policies for the API key
 */
export type Array_183 = Object_502[];
/**
 * Creation timestamp
 */
export type String_1543 = string;
/**
 * Last update timestamp
 */
export type String_1544 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_84 = String_1545 | Null_146;
export type String_1545 = string;
export type Null_146 = null;
/**
 * Whether the API key is valid
 */
export type Boolean_112 = boolean;

export interface API_KEYS_VALIDATEOutput_1 {
  id: String_1536;
  name: String_1537;
  workspace: StringNull_83;
  enabled: Boolean_111;
  policies: Array_183;
  createdAt: String_1543;
  updatedAt: String_1544;
  deletedAt: StringNull_84;
  valid: Boolean_112;
}
export interface Object_502 {
  effect: String_1539;
  resource: String_1540;
  matchCondition?: Object_503;
}
export interface Object_503 {
  resource: String_1541;
  integrationId: String_1542;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1546 = string;

export interface DECO_GET_APP_SCHEMAInput_1 {
  appName: String_1546;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1547 = string;
export type Array_184 = String_1547[];

export interface DECO_GET_APP_SCHEMAOutput_1 {
  schema?: unknown;
  scopes?: Array_184;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1548 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1549 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1550 = string;

export interface DECO_INTEGRATION_INSTALLInput_1 {
  id: String_1548;
  provider?: String_1549;
  appId?: String_1550;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1551 = string;

export interface DECO_INTEGRATION_INSTALLOutput_1 {
  installationId: String_1551;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_1552 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_1553 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_1554 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_1555 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput_1 {
  appName: String_1552;
  returnUrl: String_1553;
  installId: String_1554;
  provider?: String_1555;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_1556 = string;
/**
 * Whether to show contracts
 */
export type Boolean_113 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput_1 {
  query?: String_1556;
  showContracts?: Boolean_113;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1557 = string;
export type String_1558 = string;
export type String_1559 = string;
export type String_1560 = string;
export type String_1561 = string;
export type Null_147 = null;
export type String_1562 = string;
export type Null_148 = null;
export type String_1563 = string;
export type Null_149 = null;
export type String_1564 = "HTTP";
export type String_1565 = string;
export type String_1566 = string;
export type String_1567 = "SSE";
export type String_1568 = string;
export type String_1569 = string;
export type String_1570 = string;
export type String_1571 = "Websocket";
export type String_1572 = string;
export type String_1573 = string;
export type String_1574 = "Deco";
export type String_1575 = string;
export type String_1576 = string;
export type String_1577 = "INNATE";
export type String_1578 = string;
export type String_1579 = string;
export type Null_150 = null;
/**
 * The name of the tool
 */
export type String_1580 = string;
/**
 * The description of the tool
 */
export type String_1581 = string;
export type Array_186 = (Object_512 & Object_514)[];
export type Null_151 = null;
export type String_1582 = string;
export type String_1583 = string;
/**
 * The Integrations that match the query
 */
export type Array_185 = (Object_504 & Object_516)[];

export interface DECO_INTEGRATIONS_SEARCHOutput_1 {
  integrations: Array_185;
}
export interface Object_504 {
  id: String_1557;
  name: String_1558;
  description?: String_1559;
  icon?: String_1560;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1561
      )
    | Null_147;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1562
      )
    | Null_148;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1563
      )
    | Null_149;
  connection: Object_505 | Object_506 | Object_508 | Object_509 | Object_510;
  metadata?: Object_511 | Null_150;
  tools?: Array_186 | Null_151;
}
export interface Object_505 {
  type: String_1564;
  url: String_1565;
  token?: String_1566;
}
export interface Object_506 {
  type: String_1567;
  url: String_1568;
  token?: String_1569;
  headers?: Object_507;
}
export interface Object_507 {
  [k: string]: String_1570;
}
export interface Object_508 {
  type: String_1571;
  url: String_1572;
  token?: String_1573;
}
export interface Object_509 {
  type: String_1574;
  tenant: String_1575;
  token?: String_1576;
}
export interface Object_510 {
  type: String_1577;
  name: String_1578;
  workspace?: String_1579;
}
export interface Object_511 {
  [k: string]: unknown;
}
export interface Object_512 {
  name: String_1580;
  inputSchema: Object_513;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_513 {
  [k: string]: unknown;
}
export interface Object_514 {
  description?: String_1581;
  outputSchema?: Object_515;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_515 {
  [k: string]: unknown;
}
export interface Object_516 {
  provider: String_1582;
  friendlyName?: String_1583;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1584 = string;
export type String_1585 = "HTTP";
export type String_1586 = string;
export type String_1587 = string;
export type String_1588 = "SSE";
export type String_1589 = string;
export type String_1590 = string;
export type String_1591 = string;
export type String_1592 = "Websocket";
export type String_1593 = string;
export type String_1594 = string;
export type String_1595 = "Deco";
export type String_1596 = string;
export type String_1597 = string;
export type String_1598 = "INNATE";
export type String_1599 = string;
export type String_1600 = string;
export type String_1601 = string;
export type Integer_50 = number;
export type String_1602 = string;

export interface INTEGRATIONS_CALL_TOOLInput_2 {
  id?: String_1584;
  connection?: Object_517 | Object_518 | Object_520 | Object_521 | Object_522;
  params: Object_523;
}
export interface Object_517 {
  type: String_1585;
  url: String_1586;
  token?: String_1587;
}
export interface Object_518 {
  type: String_1588;
  url: String_1589;
  token?: String_1590;
  headers?: Object_519;
}
export interface Object_519 {
  [k: string]: String_1591;
}
export interface Object_520 {
  type: String_1592;
  url: String_1593;
  token?: String_1594;
}
export interface Object_521 {
  type: String_1595;
  tenant: String_1596;
  token?: String_1597;
}
export interface Object_522 {
  type: String_1598;
  name: String_1599;
  workspace?: String_1600;
}
export interface Object_523 {
  _meta?: Object_524;
  name: String_1602;
  arguments?: Object_525;
  [k: string]: unknown;
}
export interface Object_524 {
  progressToken?: String_1601 | Integer_50;
  [k: string]: unknown;
}
export interface Object_525 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_2 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1603 = string;
export type String_1604 = string;
export type String_1605 = string;
export type String_1606 = string;
export type String_1607 = string;
export type Null_152 = null;
export type String_1608 = string;
export type Null_153 = null;
export type String_1609 = "HTTP";
export type String_1610 = string;
export type String_1611 = string;
export type String_1612 = "SSE";
export type String_1613 = string;
export type String_1614 = string;
export type String_1615 = string;
export type String_1616 = "Websocket";
export type String_1617 = string;
export type String_1618 = string;
export type String_1619 = "Deco";
export type String_1620 = string;
export type String_1621 = string;
export type String_1622 = "INNATE";
export type String_1623 = string;
export type String_1624 = string;
export type Null_154 = null;
/**
 * The name of the tool
 */
export type String_1625 = string;
/**
 * The description of the tool
 */
export type String_1626 = string;
export type Array_187 = (Object_533 & Object_535)[];
export type Null_155 = null;
export type String_1627 = string;

export interface INTEGRATIONS_CREATEInput_1 {
  id?: String_1603;
  name?: String_1604;
  description?: String_1605;
  icon?: String_1606;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1607
      )
    | Null_152;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1608
      )
    | Null_153;
  connection?: Object_526 | Object_527 | Object_529 | Object_530 | Object_531;
  metadata?: Object_532 | Null_154;
  tools?: Array_187 | Null_155;
  clientIdFromApp?: String_1627;
}
export interface Object_526 {
  type: String_1609;
  url: String_1610;
  token?: String_1611;
}
export interface Object_527 {
  type: String_1612;
  url: String_1613;
  token?: String_1614;
  headers?: Object_528;
}
export interface Object_528 {
  [k: string]: String_1615;
}
export interface Object_529 {
  type: String_1616;
  url: String_1617;
  token?: String_1618;
}
export interface Object_530 {
  type: String_1619;
  tenant: String_1620;
  token?: String_1621;
}
export interface Object_531 {
  type: String_1622;
  name: String_1623;
  workspace?: String_1624;
}
export interface Object_532 {
  [k: string]: unknown;
}
export interface Object_533 {
  name: String_1625;
  inputSchema: Object_534;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_534 {
  [k: string]: unknown;
}
export interface Object_535 {
  description?: String_1626;
  outputSchema?: Object_536;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_536 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1628 = string;

export interface INTEGRATIONS_DELETEInput_1 {
  id: String_1628;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1629 = string;

export interface INTEGRATIONS_GETInput_1 {
  id: String_1629;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1630 = string;

export interface INTEGRATIONS_GET_API_KEYInput_1 {
  integrationId: String_1630;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GET_API_KEYOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1631 = "Channel" | "View";

export interface INTEGRATIONS_LISTInput_1 {
  binder?: String_1631;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1632 = string;
export type String_1633 = string;
export type String_1634 = string;
export type String_1635 = string;
export type String_1636 = string;
export type Null_156 = null;
export type String_1637 = string;
export type Null_157 = null;
export type String_1638 = string;
export type Null_158 = null;
export type String_1639 = "HTTP";
export type String_1640 = string;
export type String_1641 = string;
export type String_1642 = "SSE";
export type String_1643 = string;
export type String_1644 = string;
export type String_1645 = string;
export type String_1646 = "Websocket";
export type String_1647 = string;
export type String_1648 = string;
export type String_1649 = "Deco";
export type String_1650 = string;
export type String_1651 = string;
export type String_1652 = "INNATE";
export type String_1653 = string;
export type String_1654 = string;
export type Null_159 = null;
/**
 * The name of the tool
 */
export type String_1655 = string;
/**
 * The description of the tool
 */
export type String_1656 = string;
export type Array_189 = (Object_545 & Object_547)[];
export type Null_160 = null;
export type Array_188 = Object_537[];

export interface INTEGRATIONS_LISTOutput_1 {
  items: Array_188;
}
export interface Object_537 {
  id: String_1632;
  name: String_1633;
  description?: String_1634;
  icon?: String_1635;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1636
      )
    | Null_156;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1637
      )
    | Null_157;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1638
      )
    | Null_158;
  connection: Object_538 | Object_539 | Object_541 | Object_542 | Object_543;
  metadata?: Object_544 | Null_159;
  tools?: Array_189 | Null_160;
}
export interface Object_538 {
  type: String_1639;
  url: String_1640;
  token?: String_1641;
}
export interface Object_539 {
  type: String_1642;
  url: String_1643;
  token?: String_1644;
  headers?: Object_540;
}
export interface Object_540 {
  [k: string]: String_1645;
}
export interface Object_541 {
  type: String_1646;
  url: String_1647;
  token?: String_1648;
}
export interface Object_542 {
  type: String_1649;
  tenant: String_1650;
  token?: String_1651;
}
export interface Object_543 {
  type: String_1652;
  name: String_1653;
  workspace?: String_1654;
}
export interface Object_544 {
  [k: string]: unknown;
}
export interface Object_545 {
  name: String_1655;
  inputSchema: Object_546;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_546 {
  [k: string]: unknown;
}
export interface Object_547 {
  description?: String_1656;
  outputSchema?: Object_548;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_548 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1657 = string;
export type String_1658 = string;
export type String_1659 = string;
export type String_1660 = string;
export type String_1661 = string;
export type String_1662 = string;
export type Null_161 = null;
export type String_1663 = string;
export type Null_162 = null;
export type String_1664 = string;
export type Null_163 = null;
export type String_1665 = "HTTP";
export type String_1666 = string;
export type String_1667 = string;
export type String_1668 = "SSE";
export type String_1669 = string;
export type String_1670 = string;
export type String_1671 = string;
export type String_1672 = "Websocket";
export type String_1673 = string;
export type String_1674 = string;
export type String_1675 = "Deco";
export type String_1676 = string;
export type String_1677 = string;
export type String_1678 = "INNATE";
export type String_1679 = string;
export type String_1680 = string;
export type Null_164 = null;
/**
 * The name of the tool
 */
export type String_1681 = string;
/**
 * The description of the tool
 */
export type String_1682 = string;
export type Array_190 = (Object_557 & Object_559)[];
export type Null_165 = null;

export interface INTEGRATIONS_UPDATEInput_1 {
  id: String_1657;
  integration: Object_549;
}
export interface Object_549 {
  id: String_1658;
  name: String_1659;
  description?: String_1660;
  icon?: String_1661;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1662
      )
    | Null_161;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1663
      )
    | Null_162;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1664
      )
    | Null_163;
  connection: Object_550 | Object_551 | Object_553 | Object_554 | Object_555;
  metadata?: Object_556 | Null_164;
  tools?: Array_190 | Null_165;
}
export interface Object_550 {
  type: String_1665;
  url: String_1666;
  token?: String_1667;
}
export interface Object_551 {
  type: String_1668;
  url: String_1669;
  token?: String_1670;
  headers?: Object_552;
}
export interface Object_552 {
  [k: string]: String_1671;
}
export interface Object_553 {
  type: String_1672;
  url: String_1673;
  token?: String_1674;
}
export interface Object_554 {
  type: String_1675;
  tenant: String_1676;
  token?: String_1677;
}
export interface Object_555 {
  type: String_1678;
  name: String_1679;
  workspace?: String_1680;
}
export interface Object_556 {
  [k: string]: unknown;
}
export interface Object_557 {
  name: String_1681;
  inputSchema: Object_558;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_558 {
  [k: string]: unknown;
}
export interface Object_559 {
  description?: String_1682;
  outputSchema?: Object_560;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_560 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1683 = string;
export type String_1684 = string;
export type String_1685 = string;
export type String_1686 = string;
export type String_1687 = string;
export type String_1688 = string;
export type String_1689 = string;
export type String_1690 = string;
export type String_1691 = string;
export type Array_192 = String_1691[];
export type String_1692 = string;
export type String_1693 = "none" | "open" | "autoPin";
export type Array_191 = Object_561[];

export interface DECO_CHAT_VIEWS_LISTOutput_1 {
  views: Array_191;
}
export interface Object_561 {
  id?: String_1683;
  name?: String_1684;
  title: String_1685;
  description?: String_1686;
  icon: String_1687;
  url?: String_1688;
  mimeTypePattern?: String_1689;
  resourceName?: String_1690;
  tools?: Array_192;
  prompt?: String_1692;
  installBehavior?: String_1693;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_1694 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1695 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_193 = [Object_565, ...Object_565[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_1696 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1697 = string;
/**
 * A clear description of what this step does
 */
export type String_1698 = string;
/**
 * The prompt used to generate the step
 */
export type String_1699 = string;
/**
 * Status of the step execution
 */
export type String_1700 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1701 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1702 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_194 = Object_570[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_51 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_52 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1703 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_150 = number;
/**
 * The authorization token for the workflow
 */
export type String_1704 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput_1 {
  data: Object_562;
}
/**
 * Resource data to create
 */
export interface Object_562 {
  name: String_1694;
  description: String_1695;
  inputSchema: Object_563;
  outputSchema: Object_564;
  steps: Array_193;
  authorization?: Object_573;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_563 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_564 {
  [k: string]: unknown;
}
export interface Object_565 {
  id: String_1696;
  name: String_1697;
  description: String_1698;
  prompt?: String_1699;
  inputSchema: Object_566;
  outputSchema: Object_567;
  input: Object_568;
  output: Object_569;
  status?: String_1700;
  execute: String_1701;
  dependencies?: Array_194;
  options?: Object_571;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_566 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_567 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_568 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_569 {
  [k: string]: unknown;
}
export interface Object_570 {
  integrationId: String_1702;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_571 {
  retries?: Object_572;
  timeout?: Number_150;
}
export interface Object_572 {
  limit?: Integer_51;
  delay?: Integer_52;
  backoff?: String_1703;
}
export interface Object_573 {
  token: String_1704;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_1705 = string;
/**
 * The unique name of the workflow
 */
export type String_1706 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1707 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_195 = [Object_577, ...Object_577[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_1708 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1709 = string;
/**
 * A clear description of what this step does
 */
export type String_1710 = string;
/**
 * The prompt used to generate the step
 */
export type String_1711 = string;
/**
 * Status of the step execution
 */
export type String_1712 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1713 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1714 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_196 = Object_582[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_53 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_54 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1715 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_151 = number;
/**
 * The authorization token for the workflow
 */
export type String_1716 = string;
/**
 * Creation timestamp
 */
export type String_1717 = string;
/**
 * Last update timestamp
 */
export type String_1718 = string;
/**
 * User who created the resource
 */
export type String_1719 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput_1 {
  uri: String_1705;
  data: Object_574;
  created_at?: String_1717;
  updated_at?: String_1718;
  created_by?: String_1719;
}
/**
 * Created resource data
 */
export interface Object_574 {
  name: String_1706;
  description: String_1707;
  inputSchema: Object_575;
  outputSchema: Object_576;
  steps: Array_195;
  authorization?: Object_585;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_575 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_576 {
  [k: string]: unknown;
}
export interface Object_577 {
  id: String_1708;
  name: String_1709;
  description: String_1710;
  prompt?: String_1711;
  inputSchema: Object_578;
  outputSchema: Object_579;
  input: Object_580;
  output: Object_581;
  status?: String_1712;
  execute: String_1713;
  dependencies?: Array_196;
  options?: Object_583;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_578 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_579 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_580 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_581 {
  [k: string]: unknown;
}
export interface Object_582 {
  integrationId: String_1714;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_583 {
  retries?: Object_584;
  timeout?: Number_151;
}
export interface Object_584 {
  limit?: Integer_53;
  delay?: Integer_54;
  backoff?: String_1715;
}
export interface Object_585 {
  token: String_1716;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_1720 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput_1 {
  uri: String_1720;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_114 = boolean;
/**
 * URI of the deleted resource
 */
export type String_1721 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput_1 {
  success: Boolean_114;
  uri: String_1721;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1722 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput_1 {
  uri: String_1722;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1723 = string;
/**
 * The unique name of the workflow
 */
export type String_1724 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1725 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_197 = [Object_589, ...Object_589[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_1726 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1727 = string;
/**
 * A clear description of what this step does
 */
export type String_1728 = string;
/**
 * The prompt used to generate the step
 */
export type String_1729 = string;
/**
 * Status of the step execution
 */
export type String_1730 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1731 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1732 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_198 = Object_594[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_55 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_56 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1733 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_152 = number;
/**
 * The authorization token for the workflow
 */
export type String_1734 = string;
/**
 * Creation timestamp
 */
export type String_1735 = string;
/**
 * Last update timestamp
 */
export type String_1736 = string;
/**
 * User who created the resource
 */
export type String_1737 = string;
/**
 * User who last updated the resource
 */
export type String_1738 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput_1 {
  uri: String_1723;
  data: Object_586;
  created_at?: String_1735;
  updated_at?: String_1736;
  created_by?: String_1737;
  updated_by?: String_1738;
}
/**
 * Resource data
 */
export interface Object_586 {
  name: String_1724;
  description: String_1725;
  inputSchema: Object_587;
  outputSchema: Object_588;
  steps: Array_197;
  authorization?: Object_597;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_587 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_588 {
  [k: string]: unknown;
}
export interface Object_589 {
  id: String_1726;
  name: String_1727;
  description: String_1728;
  prompt?: String_1729;
  inputSchema: Object_590;
  outputSchema: Object_591;
  input: Object_592;
  output: Object_593;
  status?: String_1730;
  execute: String_1731;
  dependencies?: Array_198;
  options?: Object_595;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_590 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_591 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_592 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_593 {
  [k: string]: unknown;
}
export interface Object_594 {
  integrationId: String_1732;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_595 {
  retries?: Object_596;
  timeout?: Number_152;
}
export interface Object_596 {
  limit?: Integer_55;
  delay?: Integer_56;
  backoff?: String_1733;
}
export interface Object_597 {
  token: String_1734;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1739 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READInput_1 {
  uri: String_1739;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1740 = string;
export type String_1741 = string;
export type String_1742 = string;
export type String_1743 = string;
export type String_1744 = string;
export type String_1745 = string;
export type String_1746 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_1747 = string;
/**
 * Error message if the workflow failed
 */
export type String_1748 = string;
export type String_1749 = "log" | "warn" | "error";
export type String_1750 = string;
/**
 * Console logs from the execution
 */
export type Array_199 = Object_600[];
/**
 * When the workflow started (timestamp)
 */
export type Number_153 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_154 = number;
export type Array_200 = unknown[];
export type String_1751 = string;
export type String_1752 = string;
export type String_1753 = string;
export type String_1754 = string;
export type String_1755 = string;
export type String_1756 = string;
export type Null_166 = null;
export type String_1757 = string;
export type String_1758 = string;
export type String_1759 = string;
export type StringNull_85 = String_1760 | Null_167;
export type String_1760 = string;
export type Null_167 = null;
export type StringNull_86 = String_1761 | Null_168;
export type String_1761 = string;
export type Null_168 = null;
export type BooleanNull_10 = Boolean_115 | Null_169;
export type Boolean_115 = boolean;
export type Null_169 = null;
export type String_1762 = string;
export type String_1763 = string;
export type StringNull_87 = String_1764 | Null_170;
export type String_1764 = string;
export type Null_170 = null;
export type StringNull_88 = String_1765 | Null_171;
export type String_1765 = string;
export type Null_171 = null;
export type BooleanNull_11 = Boolean_116 | Null_172;
export type Boolean_116 = boolean;
export type Null_172 = null;
export type String_1766 = string;
export type String_1767 = string;
export type Null_173 = null;
export type StringNull_89 = String_1768 | Null_174;
export type String_1768 = string;
export type Null_174 = null;
export type StringNull_90 = String_1769 | Null_175;
export type String_1769 = string;
export type Null_175 = null;
export type BooleanNull_12 = Boolean_117 | Null_176;
export type Boolean_117 = boolean;
export type Null_176 = null;
export type String_1770 = string;
export type String_1771 = string;
export type Null_177 = null;
export type Array_202 = Object_608[];
export type Array_201 = Object_606[];
export type String_1772 = string;
export type String_1773 = string;
export type Null_178 = null;
export type String_1774 = string;
/**
 * Creation timestamp
 */
export type String_1775 = string;
/**
 * Last update timestamp
 */
export type String_1776 = string;
/**
 * User who created the resource
 */
export type String_1777 = string;
/**
 * User who last updated the resource
 */
export type String_1778 = string;

export interface DECO_RESOURCE_WORKFLOW_RUN_READOutput_1 {
  uri: String_1740;
  data: Object_598;
  created_at?: String_1775;
  updated_at?: String_1776;
  created_by?: String_1777;
  updated_by?: String_1778;
}
/**
 * Resource data
 */
export interface Object_598 {
  name: String_1741;
  description?: String_1742;
  icon?: String_1743;
  status: String_1744;
  runId: String_1745;
  workflowURI?: String_1746;
  currentStep?: String_1747;
  stepResults?: Object_599;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_1748;
  logs?: Array_199;
  startTime?: Number_153;
  endTime?: Number_154;
  workflowStatus?: Object_601;
}
/**
 * Results from completed steps
 */
export interface Object_599 {
  [k: string]: unknown;
}
export interface Object_600 {
  type: String_1749;
  content: String_1750;
}
export interface Object_601 {
  params?: Object_602 | Null_166;
  trigger?: Object_605;
  versionId?: String_1758;
  queued?: String_1759;
  start?: StringNull_85;
  end?: StringNull_86;
  success?: BooleanNull_10;
  steps?: Array_201;
  error?: Object_610 | Null_178;
  output?: unknown;
  status?: String_1774;
  [k: string]: unknown;
}
export interface Object_602 {
  input?: unknown;
  steps?: Array_200;
  name?: String_1751;
  context?: Object_603;
  [k: string]: unknown;
}
export interface Object_603 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_1752;
  startedBy?: Object_604;
  startedAt?: String_1756;
  [k: string]: unknown;
}
export interface Object_604 {
  id: String_1753;
  email?: String_1754;
  name?: String_1755;
}
export interface Object_605 {
  source: String_1757;
  [k: string]: unknown;
}
export interface Object_606 {
  name?: String_1762;
  type?: String_1763;
  start?: StringNull_87;
  end?: StringNull_88;
  success?: BooleanNull_11;
  output?: unknown;
  error?: Object_607 | Null_173;
  attempts?: Array_202;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_607 {
  name?: String_1766;
  message?: String_1767;
}
export interface Object_608 {
  start?: StringNull_89;
  end?: StringNull_90;
  success?: BooleanNull_12;
  error?: Object_609 | Null_177;
}
export interface Object_609 {
  name?: String_1770;
  message?: String_1771;
}
export interface Object_610 {
  name?: String_1772;
  message?: String_1773;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1779 = string;
/**
 * Page number (1-based)
 */
export type Integer_57 = number;
/**
 * Number of items per page
 */
export type Integer_58 = number;
/**
 * Field to sort by
 */
export type String_1780 = string;
/**
 * Sort order
 */
export type String_1781 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput_1 {
  term?: String_1779;
  page?: Integer_57;
  pageSize?: Integer_58;
  filters?: Object_611;
  sortBy?: String_1780;
  sortOrder?: String_1781;
}
/**
 * Additional filters to apply
 */
export interface Object_611 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1782 = string;
export type String_1783 = string;
/**
 * Description of the resource
 */
export type String_1784 = string;
/**
 * URL to the resource icon
 */
export type String_1785 = string;
export type String_1786 = string;
export type String_1787 = string;
export type String_1788 = string;
export type String_1789 = string;
export type String_1790 = string;
export type String_1791 = string;
/**
 * The name of the step currently being executed (if running)
 */
export type String_1792 = string;
/**
 * Error message if the workflow failed
 */
export type String_1793 = string;
export type String_1794 = "log" | "warn" | "error";
export type String_1795 = string;
/**
 * Console logs from the execution
 */
export type Array_204 = Object_616[];
/**
 * When the workflow started (timestamp)
 */
export type Number_155 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_156 = number;
export type Array_205 = unknown[];
export type String_1796 = string;
export type String_1797 = string;
export type String_1798 = string;
export type String_1799 = string;
export type String_1800 = string;
export type String_1801 = string;
export type Null_179 = null;
export type String_1802 = string;
export type String_1803 = string;
export type String_1804 = string;
export type StringNull_91 = String_1805 | Null_180;
export type String_1805 = string;
export type Null_180 = null;
export type StringNull_92 = String_1806 | Null_181;
export type String_1806 = string;
export type Null_181 = null;
export type BooleanNull_13 = Boolean_118 | Null_182;
export type Boolean_118 = boolean;
export type Null_182 = null;
export type String_1807 = string;
export type String_1808 = string;
export type StringNull_93 = String_1809 | Null_183;
export type String_1809 = string;
export type Null_183 = null;
export type StringNull_94 = String_1810 | Null_184;
export type String_1810 = string;
export type Null_184 = null;
export type BooleanNull_14 = Boolean_119 | Null_185;
export type Boolean_119 = boolean;
export type Null_185 = null;
export type String_1811 = string;
export type String_1812 = string;
export type Null_186 = null;
export type StringNull_95 = String_1813 | Null_187;
export type String_1813 = string;
export type Null_187 = null;
export type StringNull_96 = String_1814 | Null_188;
export type String_1814 = string;
export type Null_188 = null;
export type BooleanNull_15 = Boolean_120 | Null_189;
export type Boolean_120 = boolean;
export type Null_189 = null;
export type String_1815 = string;
export type String_1816 = string;
export type Null_190 = null;
export type Array_207 = Object_624[];
export type Array_206 = Object_622[];
export type String_1817 = string;
export type String_1818 = string;
export type Null_191 = null;
export type String_1819 = string;
/**
 * Creation timestamp
 */
export type String_1820 = string;
/**
 * Last update timestamp
 */
export type String_1821 = string;
/**
 * User who created the resource
 */
export type String_1822 = string;
/**
 * User who last updated the resource
 */
export type String_1823 = string;
/**
 * Array of matching resources
 */
export type Array_203 = Object_612[];
/**
 * Total number of matching resources
 */
export type Integer_59 = number;
/**
 * Current page number
 */
export type Integer_60 = number;
/**
 * Number of items per page
 */
export type Integer_61 = number;
/**
 * Total number of pages
 */
export type Integer_62 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_121 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_122 = boolean;

export interface DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput_1 {
  items: Array_203;
  totalCount: Integer_59;
  page: Integer_60;
  pageSize: Integer_61;
  totalPages: Integer_62;
  hasNextPage: Boolean_121;
  hasPreviousPage: Boolean_122;
}
export interface Object_612 {
  uri: String_1782;
  /**
   * Resource data with required name
   */
  data: Object_613 & Object_614;
  created_at?: String_1820;
  updated_at?: String_1821;
  created_by?: String_1822;
  updated_by?: String_1823;
}
export interface Object_613 {
  name: String_1783;
  description?: String_1784;
  icon?: String_1785;
}
export interface Object_614 {
  name: String_1786;
  description?: String_1787;
  icon?: String_1788;
  status: String_1789;
  runId: String_1790;
  workflowURI?: String_1791;
  currentStep?: String_1792;
  stepResults?: Object_615;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_1793;
  logs?: Array_204;
  startTime?: Number_155;
  endTime?: Number_156;
  workflowStatus?: Object_617;
}
/**
 * Results from completed steps
 */
export interface Object_615 {
  [k: string]: unknown;
}
export interface Object_616 {
  type: String_1794;
  content: String_1795;
}
export interface Object_617 {
  params?: Object_618 | Null_179;
  trigger?: Object_621;
  versionId?: String_1803;
  queued?: String_1804;
  start?: StringNull_91;
  end?: StringNull_92;
  success?: BooleanNull_13;
  steps?: Array_206;
  error?: Object_626 | Null_191;
  output?: unknown;
  status?: String_1819;
  [k: string]: unknown;
}
export interface Object_618 {
  input?: unknown;
  steps?: Array_205;
  name?: String_1796;
  context?: Object_619;
  [k: string]: unknown;
}
export interface Object_619 {
  workspace?: unknown;
  locator?: unknown;
  workflowURI?: String_1797;
  startedBy?: Object_620;
  startedAt?: String_1801;
  [k: string]: unknown;
}
export interface Object_620 {
  id: String_1798;
  email?: String_1799;
  name?: String_1800;
}
export interface Object_621 {
  source: String_1802;
  [k: string]: unknown;
}
export interface Object_622 {
  name?: String_1807;
  type?: String_1808;
  start?: StringNull_93;
  end?: StringNull_94;
  success?: BooleanNull_14;
  output?: unknown;
  error?: Object_623 | Null_186;
  attempts?: Array_207;
  config?: unknown;
  [k: string]: unknown;
}
export interface Object_623 {
  name?: String_1811;
  message?: String_1812;
}
export interface Object_624 {
  start?: StringNull_95;
  end?: StringNull_96;
  success?: BooleanNull_15;
  error?: Object_625 | Null_190;
}
export interface Object_625 {
  name?: String_1815;
  message?: String_1816;
}
export interface Object_626 {
  name?: String_1817;
  message?: String_1818;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1824 = string;
/**
 * Page number (1-based)
 */
export type Integer_63 = number;
/**
 * Number of items per page
 */
export type Integer_64 = number;
/**
 * Field to sort by
 */
export type String_1825 = string;
/**
 * Sort order
 */
export type String_1826 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput_1 {
  term?: String_1824;
  page?: Integer_63;
  pageSize?: Integer_64;
  filters?: Object_627;
  sortBy?: String_1825;
  sortOrder?: String_1826;
}
/**
 * Additional filters to apply
 */
export interface Object_627 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1827 = string;
export type String_1828 = string;
/**
 * Description of the resource
 */
export type String_1829 = string;
/**
 * URL to the resource icon
 */
export type String_1830 = string;
/**
 * The unique name of the workflow
 */
export type String_1831 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1832 = string;
/**
 * Creation timestamp
 */
export type String_1833 = string;
/**
 * Last update timestamp
 */
export type String_1834 = string;
/**
 * User who created the resource
 */
export type String_1835 = string;
/**
 * User who last updated the resource
 */
export type String_1836 = string;
/**
 * Array of matching resources
 */
export type Array_208 = Object_628[];
/**
 * Total number of matching resources
 */
export type Integer_65 = number;
/**
 * Current page number
 */
export type Integer_66 = number;
/**
 * Number of items per page
 */
export type Integer_67 = number;
/**
 * Total number of pages
 */
export type Integer_68 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_123 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_124 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput_1 {
  items: Array_208;
  totalCount: Integer_65;
  page: Integer_66;
  pageSize: Integer_67;
  totalPages: Integer_68;
  hasNextPage: Boolean_123;
  hasPreviousPage: Boolean_124;
}
export interface Object_628 {
  uri: String_1827;
  /**
   * Resource data with required name
   */
  data: Object_629 & Object_630;
  created_at?: String_1833;
  updated_at?: String_1834;
  created_by?: String_1835;
  updated_by?: String_1836;
}
export interface Object_629 {
  name: String_1828;
  description?: String_1829;
  icon?: String_1830;
}
export interface Object_630 {
  name: String_1831;
  description: String_1832;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_1837 = string;
/**
 * The unique name of the workflow
 */
export type String_1838 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1839 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_209 = [Object_634, ...Object_634[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_1840 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1841 = string;
/**
 * A clear description of what this step does
 */
export type String_1842 = string;
/**
 * The prompt used to generate the step
 */
export type String_1843 = string;
/**
 * Status of the step execution
 */
export type String_1844 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1845 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1846 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_210 = Object_639[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_69 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_70 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1847 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_157 = number;
/**
 * The authorization token for the workflow
 */
export type String_1848 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput_1 {
  uri: String_1837;
  data: Object_631;
}
/**
 * Updated resource data
 */
export interface Object_631 {
  name: String_1838;
  description: String_1839;
  inputSchema: Object_632;
  outputSchema: Object_633;
  steps: Array_209;
  authorization?: Object_642;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_632 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_633 {
  [k: string]: unknown;
}
export interface Object_634 {
  id: String_1840;
  name: String_1841;
  description: String_1842;
  prompt?: String_1843;
  inputSchema: Object_635;
  outputSchema: Object_636;
  input: Object_637;
  output: Object_638;
  status?: String_1844;
  execute: String_1845;
  dependencies?: Array_210;
  options?: Object_640;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_635 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_636 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_637 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_638 {
  [k: string]: unknown;
}
export interface Object_639 {
  integrationId: String_1846;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_640 {
  retries?: Object_641;
  timeout?: Number_157;
}
export interface Object_641 {
  limit?: Integer_69;
  delay?: Integer_70;
  backoff?: String_1847;
}
export interface Object_642 {
  token: String_1848;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_1849 = string;
/**
 * The unique name of the workflow
 */
export type String_1850 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1851 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_211 = [Object_646, ...Object_646[]];
/**
 * The unique ID of the step within the workflow
 */
export type String_1852 = string;
/**
 * The unique name of the step within the workflow
 */
export type String_1853 = string;
/**
 * A clear description of what this step does
 */
export type String_1854 = string;
/**
 * The prompt used to generate the step
 */
export type String_1855 = string;
/**
 * Status of the step execution
 */
export type String_1856 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1857 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1858 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_212 = Object_651[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_71 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_72 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1859 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_158 = number;
/**
 * The authorization token for the workflow
 */
export type String_1860 = string;
/**
 * Original creation timestamp
 */
export type String_1861 = string;
/**
 * Last update timestamp
 */
export type String_1862 = string;
/**
 * User who originally created the resource
 */
export type String_1863 = string;
/**
 * User who last updated the resource
 */
export type String_1864 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput_1 {
  uri: String_1849;
  data: Object_643;
  created_at?: String_1861;
  updated_at?: String_1862;
  created_by?: String_1863;
  updated_by?: String_1864;
}
/**
 * Updated resource data
 */
export interface Object_643 {
  name: String_1850;
  description: String_1851;
  inputSchema: Object_644;
  outputSchema: Object_645;
  steps: Array_211;
  authorization?: Object_654;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_644 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_645 {
  [k: string]: unknown;
}
export interface Object_646 {
  id: String_1852;
  name: String_1853;
  description: String_1854;
  prompt?: String_1855;
  inputSchema: Object_647;
  outputSchema: Object_648;
  input: Object_649;
  output: Object_650;
  status?: String_1856;
  execute: String_1857;
  dependencies?: Array_212;
  options?: Object_652;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_647 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_648 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_649 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_650 {
  [k: string]: unknown;
}
export interface Object_651 {
  integrationId: String_1858;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_652 {
  retries?: Object_653;
  timeout?: Number_158;
}
export interface Object_653 {
  limit?: Integer_71;
  delay?: Integer_72;
  backoff?: String_1859;
}
export interface Object_654 {
  token: String_1860;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1865 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput_1 {
  resource: String_1865;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1866 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1867 = string;
export type String_1868 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_213 = String_1868[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput_1 {
  url: String_1866;
  prompt?: String_1867;
  tools?: Array_213;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1869 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_RUNInput_1 {
  resource: String_1869;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1870 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1871 = string;
export type String_1872 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_214 = String_1872[];

export interface DECO_VIEW_RENDER_WORKFLOW_RUNOutput_1 {
  url: String_1870;
  prompt?: String_1871;
  tools?: Array_214;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_1873 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_1874 = string;

export interface DECO_WORKFLOW_STARTInput_1 {
  uri: String_1873;
  input: Object_655;
  stopAfter?: String_1874;
  state?: Object_656;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_655 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_656 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_1875 = string;
/**
 * The Resources 2.0 URI of the workflow run (rsc://i:workflows-management/workflow_run/{runId}). Use DECO_RESOURCE_WORKFLOW_RUN_READ to get status and results.
 */
export type String_1876 = string;
/**
 * Error message if workflow start failed
 */
export type String_1877 = string;

export interface DECO_WORKFLOW_STARTOutput_1 {
  runId?: String_1875;
  uri?: String_1876;
  error?: String_1877;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1878 = string;

export interface AI_TOOL_EXECUTORInput {
  query: String_1878;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1879 = string;
export type String_1880 = string;
export type String_1881 = string;

export interface AI_TOOL_EXECUTOROutput {
  reasoning: String_1879;
  toolUri: String_1880;
  generatedInput?: unknown;
  result?: unknown;
  error?: String_1881;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1882 = string;
export type String_1883 = string;
export type String_1884 = string;
export type String_1885 = string;
export type String_1886 = string;
export type Array_215 = Object_657[];
export type String_1887 = string;

export interface AUTHORIZE_WORKFLOWInput {
  workflowId: String_1882;
  workflowName: String_1883;
  tools: Array_215;
  existingApiKeyName?: String_1887;
}
export interface Object_657 {
  toolName: String_1884;
  integrationId: String_1885;
  integrationName: String_1886;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_125 = boolean;
export type String_1888 = string;
export type String_1889 = string;
export type Number_159 = number;
export type String_1890 = string;

export interface AUTHORIZE_WORKFLOWOutput {
  success: Boolean_125;
  authToken?: String_1888;
  apiKeyName?: String_1889;
  toolCount: Number_159;
  error?: String_1890;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1891 = string;

export interface CALL_INTEGRATION_TOOLInput {
  id?: String_1891;
  params: Object_658;
}
export interface Object_658 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_126 = boolean;
export type String_1892 = string;

export interface CALL_INTEGRATION_TOOLOutput {
  result?: unknown;
  success: Boolean_126;
  error?: String_1892;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1893 = string;

export interface DECO_CHAT_OAUTH_STARTInput {
  returnUrl: String_1893;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1894 = string;
export type Array_216 = String_1894[];

export interface DECO_CHAT_OAUTH_STARTOutput {
  stateSchema?: unknown;
  scopes?: Array_216;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_STATE_VALIDATIONInput {
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_127 = boolean;

export interface DECO_CHAT_STATE_VALIDATIONOutput {
  valid: Boolean_127;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_2 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1895 = string;
export type String_1896 = string;
export type String_1897 = string;
export type String_1898 = string;
export type String_1899 = string;
export type String_1900 = string;
export type String_1901 = string;
export type String_1902 = string;
export type String_1903 = string;
export type Array_218 = String_1903[];
export type String_1904 = string;
export type String_1905 = "none" | "open" | "autoPin";
export type Array_217 = Object_659[];

export interface DECO_CHAT_VIEWS_LISTOutput_2 {
  views: Array_217;
}
export interface Object_659 {
  id?: String_1895;
  name?: String_1896;
  title: String_1897;
  description?: String_1898;
  icon: String_1899;
  url?: String_1900;
  mimeTypePattern?: String_1901;
  resourceName?: String_1902;
  tools?: Array_218;
  prompt?: String_1904;
  installBehavior?: String_1905;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_128 = boolean;

export interface DISCOVER_WORKSPACE_TOOLSInput {
  includeSchemas?: Boolean_128;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1906 = string;
export type String_1907 = string;
export type String_1908 = string;
export type String_1909 = string;
export type Number_160 = number;
export type String_1910 = string;
export type String_1911 = string;
export type String_1912 = string;
export type Array_220 = Object_661[];
export type Array_219 = Object_660[];
export type Number_161 = number;
export type String_1913 = string;

export interface DISCOVER_WORKSPACE_TOOLSOutput {
  integrations: Array_219;
  totalTools: Number_161;
  summary: String_1913;
}
export interface Object_660 {
  id: String_1906;
  name: String_1907;
  description: String_1908;
  icon?: String_1909;
  toolCount: Number_160;
  tools: Array_220;
}
export interface Object_661 {
  name: String_1910;
  description: String_1911;
  category: String_1912;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1914 = string;
export type String_1915 = string;
export type String_1916 = string;

export interface EXECUTE_TOOL_SPECInput {
  toolSpec: Object_662;
  input: Object_665;
}
export interface Object_662 {
  name: String_1914;
  description: String_1915;
  inputSchema: Object_663;
  outputSchema: Object_664;
  executeCode: String_1916;
}
export interface Object_663 {
  [k: string]: unknown;
}
export interface Object_664 {
  [k: string]: unknown;
}
export interface Object_665 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1917 = string;
export type Boolean_129 = boolean;

export interface EXECUTE_TOOL_SPECOutput {
  result?: unknown;
  error?: String_1917;
  success: Boolean_129;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * What this step should accomplish
 */
export type String_1918 = string;
export type String_1919 = string;
export type String_1920 = string;
/**
 * Previous steps for context and @ref resolution
 */
export type Array_221 = Object_666[];
export type String_1921 = string;
export type String_1922 = string;
export type String_1923 = string;
export type String_1924 = string;
export type Array_223 = Object_669[];
/**
 * Available integrations (if not provided, uses static catalog)
 */
export type Array_222 = Object_668[];
export type String_1925 = string;
export type String_1926 = string;
export type String_1927 = string;
export type String_1928 = string;
/**
 * Tools explicitly mentioned in prompt with @tool-name syntax
 */
export type Array_224 = Object_670[];

export interface GENERATE_STEPInput {
  objective: String_1918;
  previousSteps?: Array_221;
  availableIntegrations?: Array_222;
  selectedTools?: Array_224;
}
export interface Object_666 {
  id: String_1919;
  name: String_1920;
  outputSchema: Object_667;
}
export interface Object_667 {
  [k: string]: unknown;
}
export interface Object_668 {
  id: String_1921;
  name: String_1922;
  tools: Array_223;
}
export interface Object_669 {
  name: String_1923;
  description: String_1924;
}
export interface Object_670 {
  name: String_1925;
  integrationId: String_1926;
  integrationName: String_1927;
  description?: String_1928;
  inputSchema?: Object_671;
  outputSchema?: Object_672;
}
export interface Object_671 {
  [k: string]: unknown;
}
export interface Object_672 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1929 = string;
export type String_1930 = string;
export type String_1931 = string;
export type String_1932 = string;
export type String_1933 = string;
export type String_1934 = string;
export type String_1935 = string;
export type String_1936 = string;

export interface GENERATE_STEPOutput {
  step: Object_673;
  reasoning?: String_1936;
}
export interface Object_673 {
  id: String_1929;
  name: String_1930;
  description: String_1931;
  code: String_1932;
  inputSchema: Object_674;
  outputSchema: Object_675;
  input: Object_676;
  inputDescription?: Object_677;
  primaryIntegration?: String_1934;
  primaryTool?: String_1935;
  inputView?: Object_678;
  outputView?: Object_679;
}
export interface Object_674 {
  [k: string]: unknown;
}
export interface Object_675 {
  [k: string]: unknown;
}
export interface Object_676 {
  [k: string]: unknown;
}
export interface Object_677 {
  [k: string]: String_1933;
}
export interface Object_678 {
  [k: string]: unknown;
}
export interface Object_679 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Step ID
 */
export type String_1937 = string;
/**
 * Field name from input schema
 */
export type String_1938 = string;
/**
 * Optional previous step ID to use its output data
 */
export type String_1939 = string;
/**
 * First 200 chars of previous step output (for context)
 */
export type String_1940 = string;
/**
 * View name (view1, view2, etc)
 */
export type String_1941 = string;
/**
 * What this input view should do (e.g., 'dropdown with search', 'multi-select')
 */
export type String_1942 = string;

export interface GENERATE_STEP_INPUT_VIEWInput {
  stepId: String_1937;
  fieldName: String_1938;
  fieldSchema: Object_680;
  previousStepId?: String_1939;
  previousStepOutput?: String_1940;
  viewName: String_1941;
  purpose: String_1942;
}
/**
 * Field JSON Schema
 */
export interface Object_680 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Complete HTML with inline CSS and JS
 */
export type String_1943 = string;
/**
 * Explanation of design choices
 */
export type String_1944 = string;

export interface GENERATE_STEP_INPUT_VIEWOutput {
  viewCode: String_1943;
  reasoning: String_1944;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Step ID
 */
export type String_1945 = string;
/**
 * Step name for context
 */
export type String_1946 = string;
/**
 * First 100 chars of actual output data
 */
export type String_1947 = string;
/**
 * View name (view1, view2, etc)
 */
export type String_1948 = string;
/**
 * What this view should emphasize or how it should display data
 */
export type String_1949 = string;

export interface GENERATE_STEP_OUTPUT_VIEWInput {
  stepId: String_1945;
  stepName: String_1946;
  outputSchema: Object_681;
  outputSample: String_1947;
  viewName: String_1948;
  purpose: String_1949;
}
/**
 * Output JSON Schema
 */
export interface Object_681 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Complete HTML with inline CSS and JS
 */
export type String_1950 = string;
/**
 * Explanation of design choices
 */
export type String_1951 = string;

export interface GENERATE_STEP_OUTPUT_VIEWOutput {
  viewCode: String_1950;
  reasoning: String_1951;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Natural language description of what the tool should do
 */
export type String_1952 = string;

export interface GENERATE_TOOL_SPECInput {
  description: String_1952;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1953 = string;
export type String_1954 = string;
export type String_1955 = string;
export type String_1956 = string;
export type String_1957 = string;

export interface GENERATE_TOOL_SPECOutput {
  toolSpec: Object_682;
  reasoning: String_1957;
  suggestedInput?: Object_685;
}
export interface Object_682 {
  id: String_1953;
  name: String_1954;
  description: String_1955;
  inputSchema: Object_683;
  outputSchema: Object_684;
  executeCode: String_1956;
}
export interface Object_683 {
  [k: string]: unknown;
}
export interface Object_684 {
  [k: string]: unknown;
}
export interface Object_685 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * What is this view for? (e.g., 'Display payment information', 'Input form for user data')
 */
export type String_1958 = string;
/**
 * Type of view to generate
 */
export type String_1959 = "input" | "output";
/**
 * Any specific design preferences or requirements
 */
export type String_1960 = string;

export interface GENERATE_VIEWInput {
  purpose: String_1958;
  viewType: String_1959;
  dataSchema: Object_686;
  designPreference?: String_1960;
}
/**
 * JSON Schema of the data this view will handle
 */
export interface Object_686 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1961 =
  | "container"
  | "text"
  | "heading"
  | "card"
  | "table"
  | "list"
  | "badge"
  | "button"
  | "input"
  | "select"
  | "file-upload"
  | "code"
  | "divider";
export type String_1962 = string;
export type Array_225 = (Object_687 | String_1962)[];
export type String_1963 = string;
export type String_1964 =
  | "primary"
  | "secondary"
  | "success"
  | "warning"
  | "error"
  | "info";
export type String_1965 = "sm" | "md" | "lg";
export type String_1966 = "vertical" | "horizontal" | "grid";
export type Number_162 = number;
export type Number_163 = number;
export type Boolean_130 = boolean;
export type Boolean_131 = boolean;
export type String_1967 = string;

export interface GENERATE_VIEWOutput {
  view: Object_687;
  reasoning: String_1967;
  exampleData?: Object_690;
}
export interface Object_687 {
  type: String_1961;
  props?: Object_688;
  children?: Array_225;
  data?: String_1963;
  style?: Object_689;
}
export interface Object_688 {
  [k: string]: unknown;
}
export interface Object_689 {
  variant?: String_1964;
  size?: String_1965;
  layout?: String_1966;
  gap?: Number_162;
  padding?: Number_163;
  border?: Boolean_130;
  rounded?: Boolean_131;
}
export interface Object_690 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1968 = string;

export interface GET_INTEGRATION_DETAILSInput {
  integrationId: String_1968;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_132 = boolean;
export type String_1969 = string;

export interface GET_INTEGRATION_DETAILSOutput {
  integration?: unknown;
  success: Boolean_132;
  error?: String_1969;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_USERInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1970 = string;
export type StringNull_97 = String_1971 | Null_192;
export type String_1971 = string;
export type Null_192 = null;
export type StringNull_98 = String_1972 | Null_193;
export type String_1972 = string;
export type Null_193 = null;
export type String_1973 = string;

export interface GET_USEROutput {
  id: String_1970;
  name: StringNull_97;
  avatar: StringNull_98;
  email: String_1973;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1974 = "input" | "output" | "both";

export interface GET_VIEW_EXAMPLESInput {
  viewType?: String_1974;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1975 = string;
export type String_1976 = string;
export type String_1977 = "input" | "output";
export type String_1978 =
  | "container"
  | "text"
  | "heading"
  | "card"
  | "table"
  | "list"
  | "badge"
  | "button"
  | "input"
  | "select"
  | "file-upload"
  | "code"
  | "divider";
export type String_1979 = string;
export type Array_227 = (Object_692 | String_1979)[];
export type String_1980 = string;
export type String_1981 =
  | "primary"
  | "secondary"
  | "success"
  | "warning"
  | "error"
  | "info";
export type String_1982 = "sm" | "md" | "lg";
export type String_1983 = "vertical" | "horizontal" | "grid";
export type Number_164 = number;
export type Number_165 = number;
export type Boolean_133 = boolean;
export type Boolean_134 = boolean;
export type Array_226 = Object_691[];

export interface GET_VIEW_EXAMPLESOutput {
  examples: Array_226;
}
export interface Object_691 {
  name: String_1975;
  description: String_1976;
  viewType: String_1977;
  view: Object_692;
  exampleData?: Object_695;
}
export interface Object_692 {
  type: String_1978;
  props?: Object_693;
  children?: Array_227;
  data?: String_1980;
  style?: Object_694;
}
export interface Object_693 {
  [k: string]: unknown;
}
export interface Object_694 {
  variant?: String_1981;
  size?: String_1982;
  layout?: String_1983;
  gap?: Number_164;
  padding?: Number_165;
  border?: Boolean_133;
  rounded?: Boolean_134;
}
export interface Object_695 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1984 = string;
export type String_1985 = string;
export type String_1986 = string;
export type String_1987 = string;

export interface IMPORT_TOOL_AS_STEPInput {
  toolName: String_1984;
  integrationId: String_1985;
  integrationName: String_1986;
  toolDescription?: String_1987;
  inputSchema?: Object_696;
  outputSchema?: Object_697;
}
export interface Object_696 {
  [k: string]: unknown;
}
export interface Object_697 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1988 = string;
export type String_1989 = string;
export type String_1990 = string;
export type String_1991 = string;
export type String_1992 = string;
export type String_1993 = string;
export type String_1994 = string;

export interface IMPORT_TOOL_AS_STEPOutput {
  step: Object_698;
}
export interface Object_698 {
  id: String_1988;
  name: String_1989;
  description: String_1990;
  code: String_1991;
  inputSchema: Object_699;
  outputSchema: Object_700;
  input: Object_701;
  inputDescription?: Object_702;
  primaryIntegration: String_1993;
  primaryTool: String_1994;
}
export interface Object_699 {
  [k: string]: unknown;
}
export interface Object_700 {
  [k: string]: unknown;
}
export interface Object_701 {
  [k: string]: unknown;
}
export interface Object_702 {
  [k: string]: String_1992;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LIST_AVAILABLE_TOOLSInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1995 = string;
export type String_1996 = string;
export type String_1997 = string;
export type String_1998 = string;
export type Number_166 = number;
export type String_1999 = string;
export type String_2000 = string;
export type Array_229 = Object_704[];
export type Array_228 = Object_703[];
export type Number_167 = number;
export type String_2001 = string;

export interface LIST_AVAILABLE_TOOLSOutput {
  integrations: Array_228;
  totalTools: Number_167;
  summary: String_2001;
}
export interface Object_703 {
  id: String_1995;
  name: String_1996;
  description?: String_1997;
  url?: String_1998;
  toolCount: Number_166;
  tools: Array_229;
}
export interface Object_704 {
  name: String_1999;
  description?: String_2000;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LIST_INSTALLED_INTEGRATIONSInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_2002 = string;
export type String_2003 = string;
export type String_2004 = string;
export type String_2005 = string;
export type Array_230 = Object_705[];
export type Boolean_135 = boolean;

export interface LIST_INSTALLED_INTEGRATIONSOutput {
  integrations: Array_230;
  success: Boolean_135;
}
export interface Object_705 {
  id: String_2002;
  name: String_2003;
  description?: String_2004;
  icon?: String_2005;
  access?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_2006 = string;

export interface LIST_REGISTRY_APPSInput {
  search?: String_2006;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_2007 = string;
export type String_2008 = string;
export type String_2009 = string;
export type String_2010 = string;
export type String_2011 = string;
export type String_2012 = string;
export type String_2013 = string;
export type String_2014 = string;
export type String_2015 = string;
export type Array_231 = Object_706[];
export type Boolean_136 = boolean;

export interface LIST_REGISTRY_APPSOutput {
  apps: Array_231;
  success: Boolean_136;
}
export interface Object_706 {
  id: String_2007;
  workspace: String_2008;
  scopeId: String_2009;
  scopeName: String_2010;
  appName: String_2011;
  name: String_2012;
  description?: String_2013;
  icon?: String_2014;
  createdAt: String_2015;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LIST_REGISTRY_SCOPESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_2016 = string;
export type String_2017 = string;
export type String_2018 = string;
export type String_2019 = string;
export type String_2020 = string;
export type Array_232 = Object_707[];
export type Boolean_137 = boolean;

export interface LIST_REGISTRY_SCOPESOutput {
  scopes: Array_232;
  success: Boolean_137;
}
export interface Object_707 {
  id: String_2016;
  scopeName: String_2017;
  workspace: String_2018;
  createdAt: String_2019;
  updatedAt: String_2020;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Human-readable tool name
 */
export type String_2021 = string;
/**
 * What the tool does
 */
export type String_2022 = string;
/**
 * Complete ES module code string starting with 'export default async function (input, ctx) {'
 */
export type String_2023 = string;

export interface RUN_GENERATED_TOOLInput {
  toolSpec: Object_708;
  input: Object_711;
}
export interface Object_708 {
  name: String_2021;
  description: String_2022;
  inputSchema: Object_709;
  outputSchema: Object_710;
  executeCode: String_2023;
}
/**
 * JSON Schema for input
 */
export interface Object_709 {
  [k: string]: unknown;
}
/**
 * JSON Schema for output
 */
export interface Object_710 {
  [k: string]: unknown;
}
/**
 * Input parameters to pass to the tool
 */
export interface Object_711 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_2024 = string;
export type Boolean_138 = boolean;

export interface RUN_GENERATED_TOOLOutput {
  result?: unknown;
  error?: String_2024;
  success: Boolean_138;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_2025 = string;
export type String_2026 = string;
export type String_2027 = string;
export type String_2028 = string;

export interface RUN_WORKFLOW_STEPInput {
  step: Object_712;
  previousStepResults?: Object_716;
  globalInput?: Object_717;
  authToken?: String_2028;
}
export interface Object_712 {
  id: String_2025;
  name: String_2026;
  code: String_2027;
  inputSchema: Object_713;
  outputSchema: Object_714;
  input: Object_715;
}
export interface Object_713 {
  [k: string]: unknown;
}
export interface Object_714 {
  [k: string]: unknown;
}
export interface Object_715 {
  [k: string]: unknown;
}
export interface Object_716 {
  [k: string]: unknown;
}
export interface Object_717 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_139 = boolean;
export type String_2029 = string;
export type String_2030 = string;
export type Array_233 = Object_718[];
export type String_2031 = string;
export type String_2032 = string;
export type Array_234 = Object_720[];
export type Number_168 = number;

export interface RUN_WORKFLOW_STEPOutput {
  success: Boolean_139;
  output?: unknown;
  error?: unknown;
  logs?: Array_233;
  resolvedInput?: Object_719;
  resolutionErrors?: Array_234;
  duration?: Number_168;
}
export interface Object_718 {
  type: String_2029;
  content: String_2030;
}
export interface Object_719 {
  [k: string]: unknown;
}
export interface Object_720 {
  ref: String_2031;
  error: String_2032;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VALIDATE_VIEWInput {
  view: Object_721;
}
/**
 * View definition to validate
 */
export interface Object_721 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_140 = boolean;
export type String_2033 = string;
export type Array_235 = String_2033[];
export type String_2034 = string;
export type Array_236 = String_2034[];

export interface VALIDATE_VIEWOutput {
  valid: Boolean_140;
  errors?: Array_235;
  warnings?: Array_236;
}

import { z } from "zod";

export type Mcp<T extends Record<string, (input: any) => Promise<any>>> = {
  [K in keyof T]: ((
    input: Parameters<T[K]>[0],
  ) => Promise<Awaited<ReturnType<T[K]>>>) & {
    asTool: () => Promise<{
      inputSchema: z.ZodType<Parameters<T[K]>[0]>;
      outputSchema?: z.ZodType<Awaited<ReturnType<T[K]>>>;
      description: string;
      id: string;
      execute: (
        input: Parameters<T[K]>[0],
      ) => Promise<Awaited<ReturnType<T[K]>>>;
    }>;
  };
};

export const StateSchema = z.object({
  TOOLS: z.object({
    value: z.string(),
    __type: z.literal("@deco/tools").default("@deco/tools"),
  }),
  WORKFLOWS_MANAGEMENT: z.object({
    value: z.string(),
    __type: z.literal("@deco/workflows").default("@deco/workflows"),
  }),
  AI_GATEWAY: z.object({
    value: z.string(),
    __type: z.literal("@deco/ai-gateway").default("@deco/ai-gateway"),
  }),
  DECONFIG: z.object({
    value: z.string(),
    __type: z.literal("@deco/deconfig").default("@deco/deconfig"),
  }),
  INTEGRATIONS: z.object({
    value: z.string(),
    __type: z.literal("@deco/integrations").default("@deco/integrations"),
  }),
  APIKEYS: z.object({
    value: z.string(),
    __type: z.literal("@deco/api-keys").default("@deco/api-keys"),
  }),
});

export interface Env {
  DECO_CHAT_WORKSPACE: string;
  DECO_CHAT_API_JWT_PUBLIC_KEY: string;
  TOOLS: Mcp<{
    /**
     * Create an executable tool with JSON Schema validation.
     * ## Tool Execute Function
     * Tools must export a default async function:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: validated against tool's inputSchema
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return: must match tool's outputSchema
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * **Key Points:**
     * - **inputSchema** defines the `input` parameter type and validation
     * - **outputSchema** defines the return value type and validation
     * - **execute** is the function code as an inline ES module string
     * - **dependencies** (optional): Array of `{ integrationId }` for ctx.env calls
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - System will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition including metadata, schemas, and execute code.
     * Returns:
     * - Tool metadata (name, description)
     * - Input/output JSON schemas
     * - Execute code (inline ES module)
     * - Dependencies (integration IDs used in ctx.env calls)
     * The tool's execute code uses `ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args)` to call integrations.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update a tool's metadata, schemas, or execution code.
     * ## Execute Function API
     * ```javascript
     * export default async function(input, ctx) {
     * // Call integration tools
     * const result = await ctx.env['i:integration'].tool_name({ args });
     * return { output: result };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain function signature** - Keep `async function(input, ctx)` format
     * 2. **Match schemas** - Input/output must match updated schemas
     * 3. **Use placeholder integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` for any ctx.env calls
     * 5. **Test thoroughly** - Input/output are validated automatically
     * **Integration IDs:**
     * - Use placeholders like `i:slack` if you don't know the ID
     * - Validation errors will list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
  }>;
  WORKFLOWS_MANAGEMENT: Mcp<{
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Create a workflow with sequential code steps.
     * ## Execution Pattern
     * Workflows consist of sequential code steps where each step can reference previous step outputs using @ syntax:
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** in the input object to reference previous step outputs or workflow input
     * 3. **@ References** are resolved before step execution
     * 4. **Final step output** must match the workflow's output schema
     * ## Step Structure
     * Each step must define:
     * ```json
     * {
     * "name": "send-notification",
     * "description": "Send a notification using the Slack API",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string" },
     * "message": { "type": "string" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "timestamp": { "type": "string" }
     * }
     * },
     * "input": {
     * "channel": "@input.slackChannel",
     * "message": "@process-data.output.formattedMessage"
     * },
     * "execute": "export default async function(input, ctx) { ... }",
     * "dependencies": [{ "integrationId": "i:slack-123" }]
     * }
     * ```
     * ## @ Reference Syntax
     * Use @ references to declaratively connect step inputs to outputs:
     * - **Workflow input**: `@input.propertyName`
     * - **Previous step output**: `@<step-name>.output.propertyName`
     * - **Nested properties**: `@step-1.output.data.user.name`
     * The system automatically resolves these references before executing each step.
     * ## Execute Function
     * The execute function receives the **resolved input** (with @ references replaced by actual values):
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // No need for ctx.readWorkflowInput() or ctx.readStepResult()
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack-123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return data matching outputSchema
     * return { success: true, timestamp: new Date().toISOString() };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * ## Best Practices
     * 1. **Define clear schemas** - inputSchema and outputSchema should be precise
     * 2. **Use @ references** - Declaratively wire data flow between steps
     * 3. **Keep steps focused** - Each step should do one thing well
     * 4. **Use placeholders for integration IDs** - Validation errors will list available integrations
     * 5. **Test incrementally** - Use stopAfter to test each step individually
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions with @ references for data flow
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Read the status and results of a workflow run using its Resources 2.0 URI.
     * ## Overview
     * This tool retrieves comprehensive information about a workflow execution, including real-time status, step results, logs, and timing information. Use this after starting a workflow with DECO_WORKFLOW_START to monitor progress and retrieve results.
     * ## Input
     * - **uri**: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - This URI is returned by DECO_WORKFLOW_START when you start a workflow
     * - You can also search for workflow runs using DECO_RESOURCE_WORKFLOW_RUN_SEARCH
     * ## Return Value
     * Returns a workflow_run resource object with:
     * ### Core Fields
     * - **status**: Current execution status ("pending", "running", "completed", "failed", "errored")
     * - **runId**: Unique identifier for this execution
     * - **workflowURI**: The URI of the workflow definition that was executed
     * ### Execution Details
     * - **currentStep**: Name of the step currently executing (if status is "running")
     * - **stepResults**: Object mapping step names to their output values (for completed steps)
     * - **finalResult**: The final workflow output (if status is "completed")
     * - **partialResult**: Intermediate results from completed steps (if still running)
     * ### Error Information
     * - **error**: Error message and details (if status is "failed" or "errored")
     * - **logs**: Array of log entries from step execution, including errors and warnings
     * ### Timing
     * - **startTime**: Unix timestamp when the workflow started
     * - **endTime**: Unix timestamp when the workflow finished (if completed/failed)
     * - **created_at**: ISO 8601 timestamp when the run was created
     * - **updated_at**: ISO 8601 timestamp of the last status update
     * ### Raw Data
     * - **workflowStatus**: Complete raw workflow status from Cloudflare Workflows (for advanced use cases)
     * ## Usage Pattern
     * ```javascript
     * // 1. Start a workflow
     * const { uri } = await DECO_WORKFLOW_START({
     * uri: "rsc://workflow/my-workflow",
     * input: { userId: "123" }
     * });
     * // 2. Monitor execution
     * const run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * console.log(run.data.status); // "running"
     * console.log(run.data.currentStep); // "step-2-process-data"
     * // 3. Poll until complete
     * while (run.data.status === "running" || run.data.status === "pending") {
     * await sleep(2000);
     * run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * }
     * // 4. Get results
     * if (run.data.status === "completed") {
     * console.log(run.data.finalResult);
     * } else {
     * console.error(run.data.error);
     * console.log(run.data.logs);
     * }
     * ```
     * ## Common Use Cases
     * - **Monitor Progress**: Poll this tool to track workflow execution in real-time
     * - **Retrieve Results**: Get the final output once a workflow completes
     * - **Debug Failures**: Access error messages and logs when workflows fail
     * - **Inspect Steps**: View intermediate results from each completed step
     * - **Resume Workflows**: Use partialResult to continue from a checkpoint
     */
    DECO_RESOURCE_WORKFLOW_RUN_READ: (
      input: DECO_RESOURCE_WORKFLOW_RUN_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_READOutput>;
    /**
     * Search workflow_run resources
     */
    DECO_RESOURCE_WORKFLOW_RUN_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow with sequential code steps using @ references.
     * ## Execution Pattern Reminder
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** to connect step inputs to previous outputs
     * 3. **@ References are resolved** before step execution
     * 4. **Final step output** must match workflow's output schema
     * ## Update Guidelines
     * 1. **Define clear schemas** - Update inputSchema and outputSchema as needed
     * 2. **Use @ references** - Update the input object to wire data between steps
     * 3. **Update execute code** - Remember that input is already resolved (no ctx.readStepResult needed)
     * 4. **Update dependencies** - Add `{ integrationId }` if using ctx.env
     * 5. **Test incrementally** - Use stopAfter to test each updated step
     * ## @ Reference Examples
     * ```json
     * {
     * "input": {
     * "userId": "@input.userId",
     * "previousResult": "@step-1.output.data",
     * "nestedValue": "@step-2.output.user.email"
     * }
     * }
     * ```
     * ## Execute Function Signature
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // ctx.env contains integration tools
     * const result = await ctx.env['i:integration-id'].tool_name(input);
     * return { success: true, data: result };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Render workflow_run view
     */
    DECO_VIEW_RENDER_WORKFLOW_RUN: (
      input: DECO_VIEW_RENDER_WORKFLOW_RUNInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_RUNOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes consisting of code steps that use @ references to declaratively wire data between steps. Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to steps via `@input.propertyName` references in their input objects
     * - Should match the structure expected by the workflow's input schema
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution (legacy)
     * - `uri`: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     * ## Monitoring Workflow Execution
     * After starting a workflow, use the returned `uri` with **DECO_RESOURCE_WORKFLOW_RUN_READ** to monitor progress and retrieve results:
     * - The workflow_run resource includes status, current step, step results, logs, and timing information
     * - For running workflows, call DECO_RESOURCE_WORKFLOW_RUN_READ repeatedly to poll for updates
     * - The resource automatically refreshes with the latest execution state
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
  }>;
  AI_GATEWAY: Mcp<{
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
  }>;
  DECONFIG: Mcp<{
    /**
     * Create a DECONFIG branch. If sourceBranch is provided, creates a branch from that branch (O(1) operation). Otherwise creates an empty branch.
     */
    CREATE_BRANCH: (input: CREATE_BRANCHInput) => Promise<CREATE_BRANCHOutput>;
    /**
     * Delete a branch and all its files. This operation cannot be undone.
     */
    DELETE_BRANCH: (input: DELETE_BRANCHInput) => Promise<DELETE_BRANCHOutput>;
    /**
     * Delete a file from a DECONFIG branch
     */
    DELETE_FILE: (input: DELETE_FILEInput) => Promise<DELETE_FILEOutput>;
    /**
     * Compare two branches and get the differences
     */
    DIFF_BRANCH: (input: DIFF_BRANCHInput) => Promise<DIFF_BRANCHOutput>;
    /**
     * List all branches in the current workspace
     */
    LIST_BRANCHES: (input: LIST_BRANCHESInput) => Promise<LIST_BRANCHESOutput>;
    /**
     * List files in a DECONFIG branch with optional prefix filtering and content inclusion
     */
    LIST_FILES: (input: LIST_FILESInput) => Promise<LIST_FILESOutput>;
    /**
     * Merge another branch into the current one with configurable strategy
     */
    MERGE_BRANCH: (input: MERGE_BRANCHInput) => Promise<MERGE_BRANCHOutput>;
    /**
     * Put a file in a DECONFIG branch (create or update) with optional conflict detection
     */
    PUT_FILE: (input: PUT_FILEInput) => Promise<PUT_FILEOutput>;
    /**
     * Read a file from a DECONFIG branch
     */
    READ_FILE: (input: READ_FILEInput) => Promise<READ_FILEOutput>;
  }>;
  INTEGRATIONS: Mcp<{
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * Get the API key for an integration
     */
    INTEGRATIONS_GET_API_KEY: (
      input: INTEGRATIONS_GET_API_KEYInput,
    ) => Promise<INTEGRATIONS_GET_API_KEYOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
  }>;
  APIKEYS: Mcp<{
    /**
     * Check if an API key has access to a resource
     */
    API_KEYS_CHECK_ACCESS: (
      input: API_KEYS_CHECK_ACCESSInput,
    ) => Promise<API_KEYS_CHECK_ACCESSOutput>;
    /**
     * Create a new API key
     */
    API_KEYS_CREATE: (
      input: API_KEYS_CREATEInput,
    ) => Promise<API_KEYS_CREATEOutput>;
    /**
     * Delete an API key (soft delete)
     */
    API_KEYS_DELETE: (
      input: API_KEYS_DELETEInput,
    ) => Promise<API_KEYS_DELETEOutput>;
    /**
     * Disable an API key
     */
    API_KEYS_DISABLE: (
      input: API_KEYS_DISABLEInput,
    ) => Promise<API_KEYS_DISABLEOutput>;
    /**
     * Enable an API key
     */
    API_KEYS_ENABLE: (
      input: API_KEYS_ENABLEInput,
    ) => Promise<API_KEYS_ENABLEOutput>;
    /**
     * Get an API key by ID
     */
    API_KEYS_GET: (input: API_KEYS_GETInput) => Promise<API_KEYS_GETOutput>;
    /**
     * List all API keys
     */
    API_KEYS_LIST: (input: API_KEYS_LISTInput) => Promise<API_KEYS_LISTOutput>;
    /**
     * Reissue an existing API key with new claims
     */
    API_KEYS_REISSUE: (
      input: API_KEYS_REISSUEInput,
    ) => Promise<API_KEYS_REISSUEOutput>;
    /**
     * Update an API key metadata
     */
    API_KEYS_UPDATE: (
      input: API_KEYS_UPDATEInput,
    ) => Promise<API_KEYS_UPDATEOutput>;
    /**
     * Validate an API key by ID
     */
    API_KEYS_VALIDATE: (
      input: API_KEYS_VALIDATEInput,
    ) => Promise<API_KEYS_VALIDATEOutput>;
  }>;
  DECO_CHAT_WORKSPACE_API: Mcp<{
    /**
     * Create a new agent
     */
    AGENTS_CREATE: (input: AGENTS_CREATEInput) => Promise<AGENTS_CREATEOutput>;
    /**
     * Delete an agent by id
     */
    AGENTS_DELETE: (input: AGENTS_DELETEInput) => Promise<AGENTS_DELETEOutput>;
    /**
     * Get an agent by id
     */
    AGENTS_GET: (input: AGENTS_GETInput) => Promise<AGENTS_GETOutput>;
    /**
     * List all agents
     */
    AGENTS_LIST: (input: AGENTS_LISTInput) => Promise<AGENTS_LISTOutput>;
    /**
     * Update an existing agent
     */
    AGENTS_UPDATE: (input: AGENTS_UPDATEInput) => Promise<AGENTS_UPDATEOutput>;
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
    /**
     * Check if an API key has access to a resource
     */
    API_KEYS_CHECK_ACCESS: (
      input: API_KEYS_CHECK_ACCESSInput,
    ) => Promise<API_KEYS_CHECK_ACCESSOutput>;
    /**
     * Create a new API key
     */
    API_KEYS_CREATE: (
      input: API_KEYS_CREATEInput,
    ) => Promise<API_KEYS_CREATEOutput>;
    /**
     * Delete an API key (soft delete)
     */
    API_KEYS_DELETE: (
      input: API_KEYS_DELETEInput,
    ) => Promise<API_KEYS_DELETEOutput>;
    /**
     * Disable an API key
     */
    API_KEYS_DISABLE: (
      input: API_KEYS_DISABLEInput,
    ) => Promise<API_KEYS_DISABLEOutput>;
    /**
     * Enable an API key
     */
    API_KEYS_ENABLE: (
      input: API_KEYS_ENABLEInput,
    ) => Promise<API_KEYS_ENABLEOutput>;
    /**
     * Get an API key by ID
     */
    API_KEYS_GET: (input: API_KEYS_GETInput) => Promise<API_KEYS_GETOutput>;
    /**
     * List all API keys
     */
    API_KEYS_LIST: (input: API_KEYS_LISTInput) => Promise<API_KEYS_LISTOutput>;
    /**
     * Reissue an existing API key with new claims
     */
    API_KEYS_REISSUE: (
      input: API_KEYS_REISSUEInput,
    ) => Promise<API_KEYS_REISSUEOutput>;
    /**
     * Update an API key metadata
     */
    API_KEYS_UPDATE: (
      input: API_KEYS_UPDATEInput,
    ) => Promise<API_KEYS_UPDATEOutput>;
    /**
     * Validate an API key by ID
     */
    API_KEYS_VALIDATE: (
      input: API_KEYS_VALIDATEInput,
    ) => Promise<API_KEYS_VALIDATEOutput>;
    /**
     * Create a channel
     */
    CHANNELS_CREATE: (
      input: CHANNELS_CREATEInput,
    ) => Promise<CHANNELS_CREATEOutput>;
    /**
     * Delete a channel
     */
    CHANNELS_DELETE: (
      input: CHANNELS_DELETEInput,
    ) => Promise<CHANNELS_DELETEOutput>;
    /**
     * Get a channel by ID
     */
    CHANNELS_GET: (input: CHANNELS_GETInput) => Promise<CHANNELS_GETOutput>;
    /**
     * Invite an agent to a channel
     */
    CHANNELS_JOIN: (input: CHANNELS_JOINInput) => Promise<CHANNELS_JOINOutput>;
    /**
     * Remove an agent from a channel
     */
    CHANNELS_LEAVE: (
      input: CHANNELS_LEAVEInput,
    ) => Promise<CHANNELS_LEAVEOutput>;
    /**
     * List all channels
     */
    CHANNELS_LIST: (input: CHANNELS_LISTInput) => Promise<CHANNELS_LISTOutput>;
    /**
     * Commit a pre-authorized amount of money for the current tenant's wallet
     */
    COMMIT_PRE_AUTHORIZED_AMOUNT: (
      input: COMMIT_PRE_AUTHORIZED_AMOUNTInput,
    ) => Promise<COMMIT_PRE_AUTHORIZED_AMOUNTOutput>;
    /**
     * Register a contract with the registry.
     */
    CONTRACT_REGISTER: (
      input: CONTRACT_REGISTERInput,
    ) => Promise<CONTRACT_REGISTEROutput>;
    /**
     * Create a DECONFIG branch. If sourceBranch is provided, creates a branch from that branch (O(1) operation). Otherwise creates an empty branch.
     */
    CREATE_BRANCH: (input: CREATE_BRANCHInput) => Promise<CREATE_BRANCHOutput>;
    /**
     * Create a checkout session for the current tenant's wallet
     */
    CREATE_CHECKOUT_SESSION: (
      input: CREATE_CHECKOUT_SESSIONInput,
    ) => Promise<CREATE_CHECKOUT_SESSIONOutput>;
    /**
     * Create a voucher with money from the current tenant's wallet
     */
    CREATE_VOUCHER: (
      input: CREATE_VOUCHERInput,
    ) => Promise<CREATE_VOUCHEROutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_GET_META: (
      input: DATABASES_GET_METAInput,
    ) => Promise<DATABASES_GET_METAOutput>;
    /**
     * Migrate data from Turso database to new database
     */
    DATABASES_MIGRATE: (
      input: DATABASES_MIGRATEInput,
    ) => Promise<DATABASES_MIGRATEOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RECOVERY: (
      input: DATABASES_RECOVERYInput,
    ) => Promise<DATABASES_RECOVERYOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RUN_SQL: (
      input: DATABASES_RUN_SQLInput,
    ) => Promise<DATABASES_RUN_SQLOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Create a new document with markdown content.
     * ## Document Structure
     * Documents consist of:
     * - **name**: A clear, descriptive title for the document
     * - **description** (optional): A brief summary of the document's purpose
     * - **content**: Markdown-formatted text content
     * - **tags** (optional): Array of strings for categorization
     * ## Markdown Support
     * Documents support full markdown syntax:
     * ```markdown
     * # Main Header
     * ## Subheader
     * This is **bold** and this is *italic*.
     * - Bullet point 1
     * - Bullet point 2
     * 1. Numbered item
     * 2. Another item
     * [Link text](https://example.com)
     * ```code
     * Code blocks with syntax highlighting
     * ```
     * > Blockquotes
     * | Table | Headers |
     * |-------|---------|
     * | Data  | Data    |
     * ```
     * ## Best Practices
     * 1. **Use clear names** - Make document titles descriptive and searchable
     * 2. **Add descriptions** - Help others understand the document's purpose
     * 3. **Structure content** - Use headers to organize long documents
     * 4. **Tag appropriately** - Use tags for easier discovery and organization
     * 5. **Keep it readable** - Use markdown formatting to enhance readability
     */
    DECO_RESOURCE_DOCUMENT_CREATE: (
      input: DECO_RESOURCE_DOCUMENT_CREATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_CREATEOutput>;
    /**
     * Delete a document from the workspace.
     * This operation permanently removes the document file from the DECONFIG storage.
     * Use this to clean up obsolete, duplicate, or unwanted documents.
     * Warning: This action cannot be undone. The document will be permanently removed
     * from the workspace.
     */
    DECO_RESOURCE_DOCUMENT_DELETE: (
      input: DECO_RESOURCE_DOCUMENT_DELETEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_DELETEOutput>;
    /**
     * Read a document's content and metadata.
     * Returns:
     * - Document metadata (name, description, tags)
     * - Full markdown content
     * - Creation and modification timestamps
     * Documents support standard markdown syntax including:
     * - Headers (# ## ###)
     * - Lists (ordered and unordered)
     * - Links and images
     * - Code blocks with syntax highlighting
     * - Tables, blockquotes, and more
     */
    DECO_RESOURCE_DOCUMENT_READ: (
      input: DECO_RESOURCE_DOCUMENT_READInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_READOutput>;
    /**
     * Search documents in the workspace.
     * This operation allows you to find documents by name, content, description, or tags.
     * Documents are markdown-formatted text content that can be used for documentation,
     * notes, guides, or any other text-based information.
     * Use this to discover existing documents before creating new ones or to find documents
     * for reading or modification.
     */
    DECO_RESOURCE_DOCUMENT_SEARCH: (
      input: DECO_RESOURCE_DOCUMENT_SEARCHInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_SEARCHOutput>;
    /**
     * Update a document's content or metadata.
     * You can update any of the following:
     * - **name**: Change the document title
     * - **description**: Update the document's summary
     * - **content**: Modify the markdown content
     * - **tags**: Add, remove, or change tags
     * ## Update Guidelines
     * 1. **Preserve formatting** - Maintain markdown structure when editing content
     * 2. **Update incrementally** - Make focused changes rather than rewriting everything
     * 3. **Use clear descriptions** - Keep descriptions concise and informative
     * 4. **Manage tags thoughtfully** - Add relevant tags, remove outdated ones
     * ## Common Update Patterns
     * **Adding content:**
     * - Append new sections to existing content
     * - Insert new information in appropriate locations
     * - Maintain document structure and flow
     * **Fixing content:**
     * - Correct typos and formatting issues
     * - Update outdated information
     * - Improve clarity and readability
     * **Reorganizing:**
     * - Restructure headers and sections
     * - Reorder content for better flow
     * - Split or merge sections as needed
     */
    DECO_RESOURCE_DOCUMENT_UPDATE: (
      input: DECO_RESOURCE_DOCUMENT_UPDATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_UPDATEOutput>;
    /**
     * Create an executable tool with JSON Schema validation.
     * ## Tool Execute Function
     * Tools must export a default async function:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: validated against tool's inputSchema
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return: must match tool's outputSchema
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * **Key Points:**
     * - **inputSchema** defines the `input` parameter type and validation
     * - **outputSchema** defines the return value type and validation
     * - **execute** is the function code as an inline ES module string
     * - **dependencies** (optional): Array of `{ integrationId }` for ctx.env calls
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - System will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition including metadata, schemas, and execute code.
     * Returns:
     * - Tool metadata (name, description)
     * - Input/output JSON schemas
     * - Execute code (inline ES module)
     * - Dependencies (integration IDs used in ctx.env calls)
     * The tool's execute code uses `ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args)` to call integrations.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update a tool's metadata, schemas, or execution code.
     * ## Execute Function API
     * ```javascript
     * export default async function(input, ctx) {
     * // Call integration tools
     * const result = await ctx.env['i:integration'].tool_name({ args });
     * return { output: result };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain function signature** - Keep `async function(input, ctx)` format
     * 2. **Match schemas** - Input/output must match updated schemas
     * 3. **Use placeholder integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` for any ctx.env calls
     * 5. **Test thoroughly** - Input/output are validated automatically
     * **Integration IDs:**
     * - Use placeholders like `i:slack` if you don't know the ID
     * - Validation errors will list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Create a new view with React code.
     * ## View Structure
     * Views consist of:
     * - **name**: A clear, descriptive title for the view
     * - **description** (optional): A brief summary of the view's purpose
     * - **code**: React component code that defines the App component
     * - **icon** (optional): URL to an icon image for the view
     * - **tags** (optional): Array of strings for categorization
     * - **importmap** (optional): Custom import map for additional modules (defaults to React 19.2.0)
     * ## React Component Guidelines
     * **You only need to write the React component code. The system provides:**
     * - ✅ React-compatible runtime with automatic JSX transform (no `import React` needed)
     * - ✅ Tailwind CSS v4 design tokens (already available)
     * - ✅ Global `callTool({ toolName, input })` function (supports regular and resource tools - always available)
     * - ✅ Import maps for React modules
     * **Your code must define an App component and import React hooks:**
     * ```jsx
     * import { useState } from 'react';
     * export const App = () => {
     * const [data, setData] = useState(null);
     * const [loading, setLoading] = useState(false);
     * const fetchData = async () => {
     * setLoading(true);
     * try {
     * const result = await callTool({
     * toolName: 'INTEGRATIONS_LIST',
     * input: {}
     * });
     * setData(result);
     * } catch (error) {
     * console.error(error);
     * } finally {
     * setLoading(false);
     * }
     * };
     * return (
     * <div className="p-6">
     * <h1 className="text-2xl font-bold mb-4">My View</h1>
     * <button
     * onClick={fetchData}
     * className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
     * >
     * Load Data
     * </button>
     * {loading && <p className="mt-4">Loading...</p>}
     * {data && <pre className="mt-4 p-4 bg-gray-100 rounded">{JSON.stringify(data, null, 2)}</pre>}
     * </div>
     * );
     * };
     * ```
     * ## Available Imports
     * Import React hooks and utilities from 'react':
     * ```jsx
     * import { useState, useEffect, useCallback, useMemo, useRef, useContext, createContext } from 'react';
     * ```
     * The following modules are available via import maps by default:
     * - `react` - React 19.2.0
     * - `react-dom` - React DOM 19.2.0
     * - `react-dom/client` - React DOM client APIs
     * ## Custom Import Maps (Advanced)
     * You can optionally provide a custom `importmap` to add additional libraries:
     * ```json
     * {
     * "importmap": {
     * "lodash": "https://esm.sh/lodash@4.17.21",
     * "date-fns": "https://esm.sh/date-fns@3.0.0"
     * }
     * }
     * ```
     * Then use these libraries in your component:
     * ```jsx
     * import { useState } from 'react';
     * import { groupBy } from 'lodash';
     * import { format } from 'date-fns';
     * export const App = () => {
     * // Use imported libraries
     * const formattedDate = format(new Date(), 'yyyy-MM-dd');
     * // ...
     * };
     * ```
     * **Note:** The default React imports are always available and will be merged with your custom imports.
     * ## Calling Tools
     * Use the global `callTool()` function to invoke any tool. This function is **always available** and doesn't need to be imported.
     * ### API Signature
     * ```typescript
     * callTool(params: {
     * toolName: string;  // Required: Tool name or resource URI
     * input: object;     // Required: Parameters for the tool (use {} if none needed)
     * }): Promise<any>
     * ```
     * ### Tool Types
     * Both types of tools are called the same way, but serve different purposes:
     * **Regular Tools** - Standard workspace tools (most common):
     * - Use the tool name directly (e.g., `"INTEGRATIONS_LIST"`)
     * - Workspace-specific tools from installed integrations
     * - Most integration tools fall into this category
     * **Resource Tools** - Tools that operate on resources (advanced):
     * - Use a resource URI starting with `rsc://` (e.g., `"rsc://tools-management/tool/TOOL_SEARCH"`)
     * - Dynamic tools that work with workspace resources
     * - Used for CRUD operations on resources like tools, workflows, documents, etc.
     * ### Usage Examples
     * **Regular tool call (most common):**
     * ```jsx
     * // Call a regular workspace tool
     * const integrations = await callTool({
     * toolName: 'INTEGRATIONS_LIST',
     * input: {}  // Empty object when tool requires no parameters
     * });
     * ```
     * **Regular tool with parameters:**
     * ```jsx
     * const user = await callTool({
     * toolName: 'USER_GET',
     * input: {
     * userId: '123',
     * includeProfile: true
     * }
     * });
     * ```
     * **Resource tool call (advanced):**
     * ```jsx
     * // Call a resource tool using URI
     * const tools = await callTool({
     * toolName: 'rsc://tools-management/tool/TOOL_SEARCH',
     * input: { query: 'database' }
     * });
     * ```
     * **With error handling:**
     * ```jsx
     * try {
     * const result = await callTool({
     * toolName: 'DATA_PROCESS',
     * input: { data: myData }
     * });
     * console.log('Success:', result);
     * } catch (error) {
     * console.error('Tool call failed:', error.message);
     * }
     * ```
     * ### Important Notes
     * - Both `toolName` and `input` are **required** parameters
     * - `toolName` must be a string:
     * - **Regular tools**: Use the tool name directly (e.g., `"INTEGRATIONS_LIST"`)
     * - **Resource tools**: Use a URI starting with `rsc://` (e.g., `"rsc://tools-management/tool/TOOL_SEARCH"`)
     * - `input` must be an object (not an array). Use `{}` if the tool needs no parameters
     * - Both regular and resource tools are called the same way - the API handles routing automatically
     * - The function returns a Promise that resolves with the tool's result
     * - Errors are thrown if parameters are invalid or if the API call fails
     * **For complete tool calling documentation, refer to the TOOL_CALL.md guide.**
     * ## Styling with Tailwind CSS v4
     * Use Tailwind utility classes directly in your JSX:
     * ```jsx
     * <div className="flex items-center gap-4 p-6 bg-white rounded-lg shadow-md">
     * <h2 className="text-xl font-semibold text-gray-800">Hello World</h2>
     * <button className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition">
     * Click me
     * </button>
     * </div>
     * ```
     * ## Best Practices
     * 1. **Import hooks** - Always import React hooks you need: `import { useState, useEffect } from 'react'`
     * 2. **Define App component** - Always define `export const App = () => { ... }`
     * 3. **Use Tailwind classes** - Leverage Tailwind CSS for styling instead of custom CSS
     * 4. **Handle loading states** - Show feedback when calling tools
     * 5. **Error handling** - Use try/catch when calling tools
     * 6. **Clear naming** - Make view titles descriptive and searchable
     * 7. **Add descriptions** - Help others understand the view's purpose
     * 8. **Tag appropriately** - Use tags for easier discovery and organization
     * 9. **Keep it simple** - Focus on the component logic, not boilerplate
     * ## Common Use Cases
     * **Dashboard View:**
     * ```jsx
     * import { useState, useEffect } from 'react';
     * export const App = () => {
     * const [metrics, setMetrics] = useState(null);
     * useEffect(() => {
     * const loadMetrics = async () => {
     * const data = await callTool({
     * toolName: 'GET_METRICS',
     * input: {}
     * });
     * setMetrics(data);
     * };
     * loadMetrics();
     * }, []);
     * return (
     * <div className="p-6 space-y-4">
     * <h1 className="text-3xl font-bold">Dashboard</h1>
     * <div className="grid grid-cols-3 gap-4">
     * {metrics?.map((metric, i) => (
     * <div key={i} className="p-4 bg-white rounded shadow">
     * <div className="text-2xl font-bold">{metric.value}</div>
     * <div className="text-gray-600">{metric.label}</div>
     * </div>
     * ))}
     * </div>
     * </div>
     * );
     * };
     * ```
     * **Interactive Form:**
     * ```jsx
     * import { useState } from 'react';
     * export const App = () => {
     * const [formData, setFormData] = useState({ name: '', email: '' });
     * const [result, setResult] = useState(null);
     * const handleSubmit = async (e) => {
     * e.preventDefault();
     * const res = await callTool({
     * toolName: 'SUBMIT_FORM',
     * input: formData
     * });
     * setResult(res);
     * };
     * return (
     * <div className="p-6 max-w-md">
     * <form onSubmit={handleSubmit} className="space-y-4">
     * <input
     * type="text"
     * value={formData.name}
     * onChange={(e) => setFormData({...formData, name: e.target.value})}
     * className="w-full px-4 py-2 border rounded"
     * placeholder="Name"
     * />
     * <input
     * type="email"
     * value={formData.email}
     * onChange={(e) => setFormData({...formData, email: e.target.value})}
     * className="w-full px-4 py-2 border rounded"
     * placeholder="Email"
     * />
     * <button
     * type="submit"
     * className="w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
     * >
     * Submit
     * </button>
     * </form>
     * {result && <div className="mt-4 p-4 bg-green-100 rounded">{JSON.stringify(result)}</div>}
     * </div>
     * );
     * };
     * ```
     */
    DECO_RESOURCE_VIEW_CREATE: (
      input: DECO_RESOURCE_VIEW_CREATEInput,
    ) => Promise<DECO_RESOURCE_VIEW_CREATEOutput>;
    /**
     * Delete a view from the workspace.
     * This operation permanently removes the view file from the DECONFIG storage.
     * Use this to clean up obsolete, duplicate, or unwanted views.
     * Warning: This action cannot be undone. The view will be permanently removed
     * from the workspace. Make sure you have a backup if needed.
     */
    DECO_RESOURCE_VIEW_DELETE: (
      input: DECO_RESOURCE_VIEW_DELETEInput,
    ) => Promise<DECO_RESOURCE_VIEW_DELETEOutput>;
    /**
     * Read a view's content and metadata.
     * Returns:
     * - View metadata (name, description, icon, tags)
     * - React component code (code field)
     * - Creation and modification timestamps
     * The code contains only the React component definition (e.g., `export const App = () => { ... }`).
     * The frontend will automatically wrap this code in a complete HTML template with:
     * - React-compatible runtime with automatic JSX transform
     * - Tailwind CSS v4 design tokens
     * - Global `callTool(params)` function for invoking tools
     * - Takes an object with `toolName` (string) and `input` (object) properties
     * - Supports both regular tools (e.g., `"INTEGRATIONS_LIST"`) and resource tools (URIs like `"rsc://integration/tool/NAME"`)
     * - Both types are called the same way - the API handles routing
     * - Example: `await callTool({ toolName: 'INTEGRATIONS_LIST', input: {} })`
     * Security Notes:
     * - Views are rendered in isolated iframes with sandbox attributes
     * - External resources are loaded from trusted CDNs
     * - Component code is validated before execution
     */
    DECO_RESOURCE_VIEW_READ: (
      input: DECO_RESOURCE_VIEW_READInput,
    ) => Promise<DECO_RESOURCE_VIEW_READOutput>;
    /**
     * Search views in the workspace.
     * This operation allows you to find views by name, description, or tags.
     * Views are HTML-based UI components that can be rendered in iframes to create
     * custom interfaces, dashboards, reports, or any other web-based visualization.
     * Use this to discover existing views before creating new ones or to find views
     * for reading or modification.
     */
    DECO_RESOURCE_VIEW_SEARCH: (
      input: DECO_RESOURCE_VIEW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_VIEW_SEARCHOutput>;
    /**
     * Update a view's content or metadata.
     * You can update any of the following:
     * - **name**: Change the view title
     * - **description**: Update the view's summary
     * - **code**: Modify the React component code
     * - **icon**: Change the icon URL
     * - **tags**: Add, remove, or change tags
     * - **importmap**: Add or modify custom module imports
     * ## Update Guidelines
     * 1. **Preserve imports** - Ensure necessary React hooks are imported from 'react'
     * 2. **Preserve App component** - Always keep the `export const App = () => { ... }` definition
     * 3. **Update incrementally** - Make focused changes rather than rewriting everything
     * 4. **Test changes** - Verify the component renders correctly after updates
     * 5. **Use Tailwind classes** - Leverage Tailwind CSS for styling
     * 6. **Manage tags thoughtfully** - Add relevant tags, remove outdated ones
     * ## Common Update Patterns
     * **Updating content:**
     * - Modify JSX structure and layout
     * - Add new sections or UI elements
     * - Update data visualizations
     * - Fix styling with Tailwind classes
     * **Adding functionality:**
     * - Import new React hooks if needed: `import { useState, useEffect, ... } from 'react'`
     * - Include new state and effects
     * - Add event handlers and interactivity
     * - Integrate tool calls with `callTool({ toolName: 'TOOL_NAME', input: {} })`
     * - Enhance user interactions
     * **Improving design:**
     * - Update Tailwind utility classes
     * - Modernize component layout
     * - Improve responsiveness with Tailwind breakpoints
     * - Optimize rendering performance
     */
    DECO_RESOURCE_VIEW_UPDATE: (
      input: DECO_RESOURCE_VIEW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_VIEW_UPDATEOutput>;
    /**
     * Create a workflow with sequential code steps.
     * ## Execution Pattern
     * Workflows consist of sequential code steps where each step can reference previous step outputs using @ syntax:
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** in the input object to reference previous step outputs or workflow input
     * 3. **@ References** are resolved before step execution
     * 4. **Final step output** must match the workflow's output schema
     * ## Step Structure
     * Each step must define:
     * ```json
     * {
     * "name": "send-notification",
     * "description": "Send a notification using the Slack API",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string" },
     * "message": { "type": "string" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "timestamp": { "type": "string" }
     * }
     * },
     * "input": {
     * "channel": "@input.slackChannel",
     * "message": "@process-data.output.formattedMessage"
     * },
     * "execute": "export default async function(input, ctx) { ... }",
     * "dependencies": [{ "integrationId": "i:slack-123" }]
     * }
     * ```
     * ## @ Reference Syntax
     * Use @ references to declaratively connect step inputs to outputs:
     * - **Workflow input**: `@input.propertyName`
     * - **Previous step output**: `@<step-name>.output.propertyName`
     * - **Nested properties**: `@step-1.output.data.user.name`
     * The system automatically resolves these references before executing each step.
     * ## Execute Function
     * The execute function receives the **resolved input** (with @ references replaced by actual values):
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // No need for ctx.readWorkflowInput() or ctx.readStepResult()
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack-123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return data matching outputSchema
     * return { success: true, timestamp: new Date().toISOString() };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * ## Best Practices
     * 1. **Define clear schemas** - inputSchema and outputSchema should be precise
     * 2. **Use @ references** - Declaratively wire data flow between steps
     * 3. **Keep steps focused** - Each step should do one thing well
     * 4. **Use placeholders for integration IDs** - Validation errors will list available integrations
     * 5. **Test incrementally** - Use stopAfter to test each step individually
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions with @ references for data flow
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Read the status and results of a workflow run using its Resources 2.0 URI.
     * ## Overview
     * This tool retrieves comprehensive information about a workflow execution, including real-time status, step results, logs, and timing information. Use this after starting a workflow with DECO_WORKFLOW_START to monitor progress and retrieve results.
     * ## Input
     * - **uri**: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - This URI is returned by DECO_WORKFLOW_START when you start a workflow
     * - You can also search for workflow runs using DECO_RESOURCE_WORKFLOW_RUN_SEARCH
     * ## Return Value
     * Returns a workflow_run resource object with:
     * ### Core Fields
     * - **status**: Current execution status ("pending", "running", "completed", "failed", "errored")
     * - **runId**: Unique identifier for this execution
     * - **workflowURI**: The URI of the workflow definition that was executed
     * ### Execution Details
     * - **currentStep**: Name of the step currently executing (if status is "running")
     * - **stepResults**: Object mapping step names to their output values (for completed steps)
     * - **finalResult**: The final workflow output (if status is "completed")
     * - **partialResult**: Intermediate results from completed steps (if still running)
     * ### Error Information
     * - **error**: Error message and details (if status is "failed" or "errored")
     * - **logs**: Array of log entries from step execution, including errors and warnings
     * ### Timing
     * - **startTime**: Unix timestamp when the workflow started
     * - **endTime**: Unix timestamp when the workflow finished (if completed/failed)
     * - **created_at**: ISO 8601 timestamp when the run was created
     * - **updated_at**: ISO 8601 timestamp of the last status update
     * ### Raw Data
     * - **workflowStatus**: Complete raw workflow status from Cloudflare Workflows (for advanced use cases)
     * ## Usage Pattern
     * ```javascript
     * // 1. Start a workflow
     * const { uri } = await DECO_WORKFLOW_START({
     * uri: "rsc://workflow/my-workflow",
     * input: { userId: "123" }
     * });
     * // 2. Monitor execution
     * const run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * console.log(run.data.status); // "running"
     * console.log(run.data.currentStep); // "step-2-process-data"
     * // 3. Poll until complete
     * while (run.data.status === "running" || run.data.status === "pending") {
     * await sleep(2000);
     * run = await DECO_RESOURCE_WORKFLOW_RUN_READ({ uri });
     * }
     * // 4. Get results
     * if (run.data.status === "completed") {
     * console.log(run.data.finalResult);
     * } else {
     * console.error(run.data.error);
     * console.log(run.data.logs);
     * }
     * ```
     * ## Common Use Cases
     * - **Monitor Progress**: Poll this tool to track workflow execution in real-time
     * - **Retrieve Results**: Get the final output once a workflow completes
     * - **Debug Failures**: Access error messages and logs when workflows fail
     * - **Inspect Steps**: View intermediate results from each completed step
     * - **Resume Workflows**: Use partialResult to continue from a checkpoint
     */
    DECO_RESOURCE_WORKFLOW_RUN_READ: (
      input: DECO_RESOURCE_WORKFLOW_RUN_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_READOutput>;
    /**
     * Search workflow_run resources
     */
    DECO_RESOURCE_WORKFLOW_RUN_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_RUN_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_RUN_SEARCHOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow with sequential code steps using @ references.
     * ## Execution Pattern Reminder
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** to connect step inputs to previous outputs
     * 3. **@ References are resolved** before step execution
     * 4. **Final step output** must match workflow's output schema
     * ## Update Guidelines
     * 1. **Define clear schemas** - Update inputSchema and outputSchema as needed
     * 2. **Use @ references** - Update the input object to wire data between steps
     * 3. **Update execute code** - Remember that input is already resolved (no ctx.readStepResult needed)
     * 4. **Update dependencies** - Add `{ integrationId }` if using ctx.env
     * 5. **Test incrementally** - Use stopAfter to test each updated step
     * ## @ Reference Examples
     * ```json
     * {
     * "input": {
     * "userId": "@input.userId",
     * "previousResult": "@step-1.output.data",
     * "nestedValue": "@step-2.output.user.email"
     * }
     * }
     * ```
     * ## Execute Function Signature
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // ctx.env contains integration tools
     * const result = await ctx.env['i:integration-id'].tool_name(input);
     * return { success: true, data: result };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render document_detail view
     */
    DECO_VIEW_RENDER_DOCUMENT_DETAIL: (
      input: DECO_VIEW_RENDER_DOCUMENT_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_DOCUMENT_DETAILOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
    /**
     * Render view_detail view
     */
    DECO_VIEW_RENDER_VIEW_DETAIL: (
      input: DECO_VIEW_RENDER_VIEW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_VIEW_DETAILOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Render workflow_run view
     */
    DECO_VIEW_RENDER_WORKFLOW_RUN: (
      input: DECO_VIEW_RENDER_WORKFLOW_RUNInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_RUNOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes consisting of code steps that use @ references to declaratively wire data between steps. Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to steps via `@input.propertyName` references in their input objects
     * - Should match the structure expected by the workflow's input schema
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution (legacy)
     * - `uri`: The Resources 2.0 URI of the workflow run (format: rsc://i:workflows-management/workflow_run/{runId})
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     * ## Monitoring Workflow Execution
     * After starting a workflow, use the returned `uri` with **DECO_RESOURCE_WORKFLOW_RUN_READ** to monitor progress and retrieve results:
     * - The workflow_run resource includes status, current step, step results, logs, and timing information
     * - For running workflows, call DECO_RESOURCE_WORKFLOW_RUN_READ repeatedly to poll for updates
     * - The resource automatically refreshes with the latest execution state
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
    /**
     * Delete a branch and all its files. This operation cannot be undone.
     */
    DELETE_BRANCH: (input: DELETE_BRANCHInput) => Promise<DELETE_BRANCHOutput>;
    /**
     * Delete a file from a DECONFIG branch
     */
    DELETE_FILE: (input: DELETE_FILEInput) => Promise<DELETE_FILEOutput>;
    /**
     * Compare two branches and get the differences
     */
    DIFF_BRANCH: (input: DIFF_BRANCHInput) => Promise<DIFF_BRANCHOutput>;
    /**
     * Delete a file
     */
    FS_DELETE: (input: FS_DELETEInput) => Promise<FS_DELETEOutput>;
    /**
     * List files from a given bucket given a prefix
     */
    FS_LIST: (input: FS_LISTInput) => Promise<FS_LISTOutput>;
    /**
     * Get a secure temporary link to read a file
     */
    FS_READ: (input: FS_READInput) => Promise<FS_READOutput>;
    /**
     * Get metadata about a file
     */
    FS_READ_METADATA: (
      input: FS_READ_METADATAInput,
    ) => Promise<FS_READ_METADATAOutput>;
    /**
     * Get a secure temporary link to upload a file
     */
    FS_WRITE: (input: FS_WRITEInput) => Promise<FS_WRITEOutput>;
    /**
     * Get the agents usage for the current tenant's wallet
     */
    GET_AGENTS_USAGE: (
      input: GET_AGENTS_USAGEInput,
    ) => Promise<GET_AGENTS_USAGEOutput>;
    /**
     * Get the billing history for the current tenant's wallet
     */
    GET_BILLING_HISTORY: (
      input: GET_BILLING_HISTORYInput,
    ) => Promise<GET_BILLING_HISTORYOutput>;
    /**
     * Get the contracts commits for the current tenant's wallet
     */
    GET_CONTRACTS_COMMITS: (
      input: GET_CONTRACTS_COMMITSInput,
    ) => Promise<GET_CONTRACTS_COMMITSOutput>;
    /**
     * Get the threads usage for the current tenant's wallet
     */
    GET_THREADS_USAGE: (
      input: GET_THREADS_USAGEInput,
    ) => Promise<GET_THREADS_USAGEOutput>;
    /**
     * Get the wallet account for the current tenant
     */
    GET_WALLET_ACCOUNT: (
      input: GET_WALLET_ACCOUNTInput,
    ) => Promise<GET_WALLET_ACCOUNTOutput>;
    /**
     * Get the plan for the current tenant's workspace
     */
    GET_WORKSPACE_PLAN: (
      input: GET_WORKSPACE_PLANInput,
    ) => Promise<GET_WORKSPACE_PLANOutput>;
    /**
     * Delete an app and its worker
     */
    HOSTING_APP_DELETE: (
      input: HOSTING_APP_DELETEInput,
    ) => Promise<HOSTING_APP_DELETEOutput>;
    /**
     * Deploy multiple TypeScript files that use Wrangler for bundling and deployment to Cloudflare Workers. You must provide a package.json file with the necessary dependencies and a wrangler.toml file matching the Workers for Platforms format. Use 'main_module' instead of 'main', and define bindings using the [[bindings]] array, where each binding is a table specifying its type and properties. To add custom Deco bindings, set type = "MCP" in a binding entry (these will be filtered and handled automatically).
     * Set 'preview: true' to create a preview deployment that won't replace the production version. Preview deployments get their own unique URL but are not promoted to production routes.
     * Common patterns:
     * 1. Use a package.json file to manage dependencies:
     * // package.json
     * {
     * "name": "@deco/workers-example",
     * "private": true,
     * "version": "0.0.0",
     * "type": "module",
     * "scripts": {
     * "dev": "deco dev",
     * "gen": "deco gen > env.gen.ts",
     * "setup": "npm i -g deco-cli",
     * "deploy": "wrangler deploy --dry-run --outdir ./dist && deco deploy ./dist"
     * },
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/mcp": "npm:@jsr/deco__mcp@^0.5.6",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.4.0",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }
     * 2. Import dependencies directly in your files:
     * // main.ts
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * 3. Use wrangler.toml to configure your app:
     * // wrangler.toml
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * # You can add any supported binding type as per Workers for Platforms documentation.
     * 4. You should always surround the user fetch with the withRuntime function.
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * You must use the Workers for Platforms TOML format for wrangler.toml. The bindings supports all standard binding types (ai, analytics_engine, assets, browser_rendering, d1, durable_object_namespace, hyperdrive, kv_namespace, mtls_certificate, plain_text, queue, r2_bucket, secret_text, service, tail_consumer, vectorize, version_metadata, etc). For Deco-specific bindings, use type = "MCP".
     * For routes, only custom domains are supported. The user must point their DNS to the script endpoint. $SCRIPT.deco.page using DNS-Only. The user needs to wait for the DNS to propagate before the app will be available.
     * Example of files deployment:
     * [
     * {
     * "path": "package.json",
     * "content": `{
     * "name": "@deco/workers-example",
     * "version": "0.0.0",
     * "type": "module",
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.2.18",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }`
     * },
     * {
     * "path": "main.ts",
     * "content": `
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * `
     * },
     * {
     * "path": "wrangler.toml",
     * "content": `
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * `
     * }
     * ]
     * Important Notes:
     * - You can access the app workspace by accessing env.DECO_CHAT_WORKSPACE
     * - You can access the app script slug by accessing env.DECO_CHAT_APP_SLUG
     * - Token and workspace can be used to make authenticated requests to the Deco API under https://api.decocms.com
     * - Always use Cloudflare Workers syntax with export default and proper fetch handler signature
     * - When using template literals inside content strings, escape backticks with a backslash (\) or use string concatenation (+)
     * - You must include a package.json file with the @deco/workers-runtime dependency
     * - Dependencies are managed through npm packages in package.json, not npm: or jsr: specifiers
     * - Wrangler will handle the bundling process using the dependencies defined in package.json
     */
    HOSTING_APP_DEPLOY: (
      input: HOSTING_APP_DEPLOYInput,
    ) => Promise<HOSTING_APP_DEPLOYOutput>;
    /**
     * List all deployments for a specific app
     */
    HOSTING_APP_DEPLOYMENTS_LIST: (
      input: HOSTING_APP_DEPLOYMENTS_LISTInput,
    ) => Promise<HOSTING_APP_DEPLOYMENTS_LISTOutput>;
    /**
     * Get info/metadata for an app (including endpoint)
     */
    HOSTING_APP_INFO: (
      input: HOSTING_APP_INFOInput,
    ) => Promise<HOSTING_APP_INFOOutput>;
    /**
     * List all unique workflow names in the workspace
     */
    HOSTING_APP_WORKFLOWS_LIST_NAMES: (
      input: HOSTING_APP_WORKFLOWS_LIST_NAMESInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_NAMESOutput>;
    /**
     * List workflow runs. If workflowName is provided, shows runs for that specific workflow. If not provided, shows recent runs from any workflow.
     */
    HOSTING_APP_WORKFLOWS_LIST_RUNS: (
      input: HOSTING_APP_WORKFLOWS_LIST_RUNSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_RUNSOutput>;
    /**
     * Get the status of a workflow instance
     */
    HOSTING_APP_WORKFLOWS_STATUS: (
      input: HOSTING_APP_WORKFLOWS_STATUSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_STATUSOutput>;
    /**
     * List all apps for the current tenant
     */
    HOSTING_APPS_LIST: (
      input: HOSTING_APPS_LISTInput,
    ) => Promise<HOSTING_APPS_LISTOutput>;
    /**
     * Promote a specific deployment to an existing route pattern and update routing cache
     */
    HOSTING_APPS_PROMOTE: (
      input: HOSTING_APPS_PROMOTEInput,
    ) => Promise<HOSTING_APPS_PROMOTEOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * Get the API key for an integration
     */
    INTEGRATIONS_GET_API_KEY: (
      input: INTEGRATIONS_GET_API_KEYInput,
    ) => Promise<INTEGRATIONS_GET_API_KEYOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
    /**
     * Add a file content into knowledge base
     */
    KNOWLEDGE_BASE_ADD_FILE: (
      input: KNOWLEDGE_BASE_ADD_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_ADD_FILEOutput>;
    /**
     * Create a knowledge base
     */
    KNOWLEDGE_BASE_CREATE: (
      input: KNOWLEDGE_BASE_CREATEInput,
    ) => Promise<KNOWLEDGE_BASE_CREATEOutput>;
    /**
     * Delete a knowledge base
     */
    KNOWLEDGE_BASE_DELETE: (
      input: KNOWLEDGE_BASE_DELETEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETEOutput>;
    /**
     * Delete a file from the knowledge base
     */
    KNOWLEDGE_BASE_DELETE_FILE: (
      input: KNOWLEDGE_BASE_DELETE_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETE_FILEOutput>;
    /**
     * Forget something
     */
    KNOWLEDGE_BASE_FORGET: (
      input: KNOWLEDGE_BASE_FORGETInput,
    ) => Promise<KNOWLEDGE_BASE_FORGETOutput>;
    /**
     * List all knowledge bases
     */
    KNOWLEDGE_BASE_LIST: (
      input: KNOWLEDGE_BASE_LISTInput,
    ) => Promise<KNOWLEDGE_BASE_LISTOutput>;
    /**
     * List all files in the knowledge base
     */
    KNOWLEDGE_BASE_LIST_FILES: (
      input: KNOWLEDGE_BASE_LIST_FILESInput,
    ) => Promise<KNOWLEDGE_BASE_LIST_FILESOutput>;
    /**
     * Remember something
     */
    KNOWLEDGE_BASE_REMEMBER: (
      input: KNOWLEDGE_BASE_REMEMBERInput,
    ) => Promise<KNOWLEDGE_BASE_REMEMBEROutput>;
    /**
     * Search the knowledge base
     */
    KNOWLEDGE_BASE_SEARCH: (
      input: KNOWLEDGE_BASE_SEARCHInput,
    ) => Promise<KNOWLEDGE_BASE_SEARCHOutput>;
    /**
     * List all branches in the current workspace
     */
    LIST_BRANCHES: (input: LIST_BRANCHESInput) => Promise<LIST_BRANCHESOutput>;
    /**
     * List files in a DECONFIG branch with optional prefix filtering and content inclusion
     */
    LIST_FILES: (input: LIST_FILESInput) => Promise<LIST_FILESOutput>;
    /**
     * Merge another branch into the current one with configurable strategy
     */
    MERGE_BRANCH: (input: MERGE_BRANCHInput) => Promise<MERGE_BRANCHOutput>;
    /**
     * Create a new model
     */
    MODELS_CREATE: (input: MODELS_CREATEInput) => Promise<MODELS_CREATEOutput>;
    /**
     * Delete a model by id
     */
    MODELS_DELETE: (input: MODELS_DELETEInput) => Promise<MODELS_DELETEOutput>;
    /**
     * Get a model by id
     */
    MODELS_GET: (input: MODELS_GETInput) => Promise<MODELS_GETOutput>;
    /**
     * List models for the current user
     */
    MODELS_LIST: (input: MODELS_LISTInput) => Promise<MODELS_LISTOutput>;
    /**
     * Update an existing model
     */
    MODELS_UPDATE: (input: MODELS_UPDATEInput) => Promise<MODELS_UPDATEOutput>;
    /**
     * Create an OAuth code for a given API key
     */
    OAUTH_CODE_CREATE: (
      input: OAUTH_CODE_CREATEInput,
    ) => Promise<OAUTH_CODE_CREATEOutput>;
    /**
     * Pre-authorize an amount of money for the current tenant's wallet
     */
    PRE_AUTHORIZE_AMOUNT: (
      input: PRE_AUTHORIZE_AMOUNTInput,
    ) => Promise<PRE_AUTHORIZE_AMOUNTOutput>;
    /**
     * Create a new prompt
     */
    PROMPTS_CREATE: (
      input: PROMPTS_CREATEInput,
    ) => Promise<PROMPTS_CREATEOutput>;
    /**
     * Delete a prompt by id
     */
    PROMPTS_DELETE: (
      input: PROMPTS_DELETEInput,
    ) => Promise<PROMPTS_DELETEOutput>;
    /**
     * Get a prompt by id
     */
    PROMPTS_GET: (input: PROMPTS_GETInput) => Promise<PROMPTS_GETOutput>;
    /**
     * Get the versions of a prompt
     */
    PROMPTS_GET_VERSIONS: (
      input: PROMPTS_GET_VERSIONSInput,
    ) => Promise<PROMPTS_GET_VERSIONSOutput>;
    /**
     * List prompts for the current workspace
     */
    PROMPTS_LIST: (input: PROMPTS_LISTInput) => Promise<PROMPTS_LISTOutput>;
    /**
     * Rename a prompt version
     */
    PROMPTS_RENAME_VERSION: (
      input: PROMPTS_RENAME_VERSIONInput,
    ) => Promise<PROMPTS_RENAME_VERSIONOutput>;
    /**
     * Update an existing prompt
     */
    PROMPTS_UPDATE: (
      input: PROMPTS_UPDATEInput,
    ) => Promise<PROMPTS_UPDATEOutput>;
    /**
     * Put a file in a DECONFIG branch (create or update) with optional conflict detection
     */
    PUT_FILE: (input: PUT_FILEInput) => Promise<PUT_FILEOutput>;
    /**
     * Read a file from a DECONFIG branch
     */
    READ_FILE: (input: READ_FILEInput) => Promise<READ_FILEOutput>;
    /**
     * Redeem a voucher for the current tenant's wallet
     */
    REDEEM_VOUCHER: (
      input: REDEEM_VOUCHERInput,
    ) => Promise<REDEEM_VOUCHEROutput>;
    /**
     * List all apps in the registry for the current workspace
     */
    REGISTRY_LIST_APPS: (
      input: REGISTRY_LIST_APPSInput,
    ) => Promise<REGISTRY_LIST_APPSOutput>;
    /**
     * List published apps by the current workspace
     */
    REGISTRY_LIST_PUBLISHED_APPS: (
      input: REGISTRY_LIST_PUBLISHED_APPSInput,
    ) => Promise<REGISTRY_LIST_PUBLISHED_APPSOutput>;
    /**
     * List all registry scopes
     */
    REGISTRY_LIST_SCOPES: (
      input: REGISTRY_LIST_SCOPESInput,
    ) => Promise<REGISTRY_LIST_SCOPESOutput>;
    /**
     * Publish an app to the registry (automatically claims scope on first use)
     */
    REGISTRY_PUBLISH_APP: (
      input: REGISTRY_PUBLISH_APPInput,
    ) => Promise<REGISTRY_PUBLISH_APPOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Add a custom view or resource to a team
     */
    TEAMS_ADD_VIEW: (
      input: TEAMS_ADD_VIEWInput,
    ) => Promise<TEAMS_ADD_VIEWOutput>;
    /**
     * Remove a custom view or resource from a team
     */
    TEAMS_REMOVE_VIEW: (
      input: TEAMS_REMOVE_VIEWInput,
    ) => Promise<TEAMS_REMOVE_VIEWOutput>;
    /**
     * Get a thread by thread id (without messages)
     */
    THREADS_GET: (input: THREADS_GETInput) => Promise<THREADS_GETOutput>;
    /**
     * Get only the messages for a thread by thread id
     */
    THREADS_GET_MESSAGES: (
      input: THREADS_GET_MESSAGESInput,
    ) => Promise<THREADS_GET_MESSAGESOutput>;
    /**
     * List all threads in a workspace with cursor-based pagination and filtering
     */
    THREADS_LIST: (input: THREADS_LISTInput) => Promise<THREADS_LISTOutput>;
    /**
     * Update a thread's metadata
     */
    THREADS_UPDATE_METADATA: (
      input: THREADS_UPDATE_METADATAInput,
    ) => Promise<THREADS_UPDATE_METADATAOutput>;
    /**
     * Update a thread's title
     */
    THREADS_UPDATE_TITLE: (
      input: THREADS_UPDATE_TITLEInput,
    ) => Promise<THREADS_UPDATE_TITLEOutput>;
    /**
     * Activate a trigger
     */
    TRIGGERS_ACTIVATE: (
      input: TRIGGERS_ACTIVATEInput,
    ) => Promise<TRIGGERS_ACTIVATEOutput>;
    /**
     * Create a trigger
     */
    TRIGGERS_CREATE: (
      input: TRIGGERS_CREATEInput,
    ) => Promise<TRIGGERS_CREATEOutput>;
    /**
     * Create a cron trigger
     */
    TRIGGERS_CREATE_CRON: (
      input: TRIGGERS_CREATE_CRONInput,
    ) => Promise<TRIGGERS_CREATE_CRONOutput>;
    /**
     * Create a webhook trigger
     */
    TRIGGERS_CREATE_WEBHOOK: (
      input: TRIGGERS_CREATE_WEBHOOKInput,
    ) => Promise<TRIGGERS_CREATE_WEBHOOKOutput>;
    /**
     * Deactivate a trigger
     */
    TRIGGERS_DEACTIVATE: (
      input: TRIGGERS_DEACTIVATEInput,
    ) => Promise<TRIGGERS_DEACTIVATEOutput>;
    /**
     * Delete a trigger
     */
    TRIGGERS_DELETE: (
      input: TRIGGERS_DELETEInput,
    ) => Promise<TRIGGERS_DELETEOutput>;
    /**
     * Get a trigger by ID
     */
    TRIGGERS_GET: (input: TRIGGERS_GETInput) => Promise<TRIGGERS_GETOutput>;
    /**
     * Get the webhook URL for a trigger
     */
    TRIGGERS_GET_WEBHOOK_URL: (
      input: TRIGGERS_GET_WEBHOOK_URLInput,
    ) => Promise<TRIGGERS_GET_WEBHOOK_URLOutput>;
    /**
     * List all triggers
     */
    TRIGGERS_LIST: (input: TRIGGERS_LISTInput) => Promise<TRIGGERS_LISTOutput>;
    /**
     * Update a trigger
     */
    TRIGGERS_UPDATE: (
      input: TRIGGERS_UPDATEInput,
    ) => Promise<TRIGGERS_UPDATEOutput>;
  }>;
  DECO_CHAT_API: Mcp<{
    /**
     * Make HTTP requests to any URL. Supports multiple HTTP methods (GET, POST, PUT, DELETE, PATCH, HEAD), custom headers, request body, and response parsing. Use this when you need to fetch data from external APIs or make HTTP calls that don't have a specific integration available. Supports both text and JSON response parsing.
     */
    HTTP_FETCH: (input: HTTP_FETCHInput) => Promise<HTTP_FETCHOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * List tools of a given integration
     */
    INTEGRATIONS_LIST_TOOLS: (
      input: INTEGRATIONS_LIST_TOOLSInput,
    ) => Promise<INTEGRATIONS_LIST_TOOLSOutput>;
    /**
     * List all team invites for the current logged in user
     */
    MY_INVITES_LIST: (
      input: MY_INVITES_LISTInput,
    ) => Promise<MY_INVITES_LISTOutput>;
    /**
     * Get the current user's profile
     */
    PROFILES_GET: (input: PROFILES_GETInput) => Promise<PROFILES_GETOutput>;
    /**
     * Update the current user's profile
     */
    PROFILES_UPDATE: (
      input: PROFILES_UPDATEInput,
    ) => Promise<PROFILES_UPDATEOutput>;
    /**
     * Register that the user accessed a project
     */
    PROJECT_ACTIVITY_REGISTER: (
      input: PROJECT_ACTIVITY_REGISTERInput,
    ) => Promise<PROJECT_ACTIVITY_REGISTEROutput>;
    /**
     * Create a new project in an organization
     */
    PROJECTS_CREATE: (
      input: PROJECTS_CREATEInput,
    ) => Promise<PROJECTS_CREATEOutput>;
    /**
     * List projects for an organization
     */
    PROJECTS_LIST: (input: PROJECTS_LISTInput) => Promise<PROJECTS_LISTOutput>;
    /**
     * List recent projects for the current user based on activity
     */
    PROJECTS_RECENT: (
      input: PROJECTS_RECENTInput,
    ) => Promise<PROJECTS_RECENTOutput>;
    /**
     * Update an existing project's properties
     */
    PROJECTS_UPDATE: (
      input: PROJECTS_UPDATEInput,
    ) => Promise<PROJECTS_UPDATEOutput>;
    /**
     * Get an app from the registry
     */
    REGISTRY_GET_APP: (
      input: REGISTRY_GET_APPInput,
    ) => Promise<REGISTRY_GET_APPOutput>;
    /**
     * Accept a team invitation
     */
    TEAM_INVITE_ACCEPT: (
      input: TEAM_INVITE_ACCEPTInput,
    ) => Promise<TEAM_INVITE_ACCEPTOutput>;
    /**
     * Delete a team invitation
     */
    TEAM_INVITE_DELETE: (
      input: TEAM_INVITE_DELETEInput,
    ) => Promise<TEAM_INVITE_DELETEOutput>;
    /**
     * Register that the user accessed a team
     */
    TEAM_MEMBER_ACTIVITY_REGISTER: (
      input: TEAM_MEMBER_ACTIVITY_REGISTERInput,
    ) => Promise<TEAM_MEMBER_ACTIVITY_REGISTEROutput>;
    /**
     * Get all members of a team
     */
    TEAM_MEMBERS_GET: (
      input: TEAM_MEMBERS_GETInput,
    ) => Promise<TEAM_MEMBERS_GETOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Remove a member from a team
     */
    TEAM_MEMBERS_REMOVE: (
      input: TEAM_MEMBERS_REMOVEInput,
    ) => Promise<TEAM_MEMBERS_REMOVEOutput>;
    /**
     * Update a team member. Usefull for updating admin status.
     */
    TEAM_MEMBERS_UPDATE: (
      input: TEAM_MEMBERS_UPDATEInput,
    ) => Promise<TEAM_MEMBERS_UPDATEOutput>;
    /**
     * Update a member's role in a team
     */
    TEAM_MEMBERS_UPDATE_ROLE: (
      input: TEAM_MEMBERS_UPDATE_ROLEInput,
    ) => Promise<TEAM_MEMBERS_UPDATE_ROLEOutput>;
    /**
     * Report a bug or idea within a team/project context
     */
    TEAM_REPORT_ISSUE_CREATE: (
      input: TEAM_REPORT_ISSUE_CREATEInput,
    ) => Promise<TEAM_REPORT_ISSUE_CREATEOutput>;
    /**
     * Create a new team role with associated policies and permissions
     */
    TEAM_ROLE_CREATE: (
      input: TEAM_ROLE_CREATEInput,
    ) => Promise<TEAM_ROLE_CREATEOutput>;
    /**
     * Delete a team role and its associated policies (only team-specific roles)
     */
    TEAM_ROLE_DELETE: (
      input: TEAM_ROLE_DELETEInput,
    ) => Promise<TEAM_ROLE_DELETEOutput>;
    /**
     * Get detailed information about a specific team role
     */
    TEAM_ROLE_GET: (input: TEAM_ROLE_GETInput) => Promise<TEAM_ROLE_GETOutput>;
    /**
     * Update a team role and its associated policies
     */
    TEAM_ROLE_UPDATE: (
      input: TEAM_ROLE_UPDATEInput,
    ) => Promise<TEAM_ROLE_UPDATEOutput>;
    /**
     * Get all roles available for a team, including basic deco roles
     */
    TEAM_ROLES_LIST: (
      input: TEAM_ROLES_LISTInput,
    ) => Promise<TEAM_ROLES_LISTOutput>;
    /**
     * Create a new team
     */
    TEAMS_CREATE: (input: TEAMS_CREATEInput) => Promise<TEAMS_CREATEOutput>;
    /**
     * Delete a team by id
     */
    TEAMS_DELETE: (input: TEAMS_DELETEInput) => Promise<TEAMS_DELETEOutput>;
    /**
     * Get a team by slug
     */
    TEAMS_GET: (input: TEAMS_GETInput) => Promise<TEAMS_GETOutput>;
    /**
     * Get the theme for a workspace
     */
    TEAMS_GET_THEME: (
      input: TEAMS_GET_THEMEInput,
    ) => Promise<TEAMS_GET_THEMEOutput>;
    /**
     * List teams for the current user
     */
    TEAMS_LIST: (input: TEAMS_LISTInput) => Promise<TEAMS_LISTOutput>;
    /**
     * Update an existing team including theme customization
     */
    TEAMS_UPDATE: (input: TEAMS_UPDATEInput) => Promise<TEAMS_UPDATEOutput>;
  }>;
  SELF: Mcp<{
    /**
     * Use AI to determine which tool to call and generate its input based on a natural language query
     */
    AI_TOOL_EXECUTOR: (
      input: AI_TOOL_EXECUTORInput,
    ) => Promise<AI_TOOL_EXECUTOROutput>;
    /**
     * Create or update API key with authorization for all tools used in workflow
     */
    AUTHORIZE_WORKFLOW: (
      input: AUTHORIZE_WORKFLOWInput,
    ) => Promise<AUTHORIZE_WORKFLOWOutput>;
    /**
     * Call a specific tool from an installed integration
     */
    CALL_INTEGRATION_TOOL: (
      input: CALL_INTEGRATION_TOOLInput,
    ) => Promise<CALL_INTEGRATION_TOOLOutput>;
    /**
     * OAuth for Deco Chat
     */
    DECO_CHAT_OAUTH_START: (
      input: DECO_CHAT_OAUTH_STARTInput,
    ) => Promise<DECO_CHAT_OAUTH_STARTOutput>;
    /**
     * Validate the state of the OAuth flow
     */
    DECO_CHAT_STATE_VALIDATION: (
      input: DECO_CHAT_STATE_VALIDATIONInput,
    ) => Promise<DECO_CHAT_STATE_VALIDATIONOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Get catalog of top workspace tools available for code generation
     */
    DISCOVER_WORKSPACE_TOOLS: (
      input: DISCOVER_WORKSPACE_TOOLSInput,
    ) => Promise<DISCOVER_WORKSPACE_TOOLSOutput>;
    /**
     * Execute a previously generated tool specification with provided input
     */
    EXECUTE_TOOL_SPEC: (
      input: EXECUTE_TOOL_SPECInput,
    ) => Promise<EXECUTE_TOOL_SPECOutput>;
    /**
     * Generate a workflow step using AI based on objective
     */
    GENERATE_STEP: (input: GENERATE_STEPInput) => Promise<GENERATE_STEPOutput>;
    /**
     * Generate a custom input view for a specific workflow step field using AI
     */
    GENERATE_STEP_INPUT_VIEW: (
      input: GENERATE_STEP_INPUT_VIEWInput,
    ) => Promise<GENERATE_STEP_INPUT_VIEWOutput>;
    /**
     * Generate a custom output view for a specific workflow step using AI
     */
    GENERATE_STEP_OUTPUT_VIEW: (
      input: GENERATE_STEP_OUTPUT_VIEWInput,
    ) => Promise<GENERATE_STEP_OUTPUT_VIEWOutput>;
    /**
     * Generate a complete tool specification using AI based on a natural language description
     */
    GENERATE_TOOL_SPEC: (
      input: GENERATE_TOOL_SPECInput,
    ) => Promise<GENERATE_TOOL_SPECOutput>;
    /**
     * Generate a custom input or output view definition using AI. Returns a JSON structure that can be rendered as UI components.
     */
    GENERATE_VIEW: (input: GENERATE_VIEWInput) => Promise<GENERATE_VIEWOutput>;
    /**
     * Get detailed information about a specific installed integration
     */
    GET_INTEGRATION_DETAILS: (
      input: GET_INTEGRATION_DETAILSInput,
    ) => Promise<GET_INTEGRATION_DETAILSOutput>;
    /**
     * Get the current logged in user
     */
    GET_USER: (input: GET_USERInput) => Promise<GET_USEROutput>;
    /**
     * Get example view definitions for different use cases
     */
    GET_VIEW_EXAMPLES: (
      input: GET_VIEW_EXAMPLESInput,
    ) => Promise<GET_VIEW_EXAMPLESOutput>;
    /**
     * Generate a workflow step that directly calls a specific tool (without AI)
     */
    IMPORT_TOOL_AS_STEP: (
      input: IMPORT_TOOL_AS_STEPInput,
    ) => Promise<IMPORT_TOOL_AS_STEPOutput>;
    /**
     * List all available tools from all integrations in the workspace for use in generated code
     */
    LIST_AVAILABLE_TOOLS: (
      input: LIST_AVAILABLE_TOOLSInput,
    ) => Promise<LIST_AVAILABLE_TOOLSOutput>;
    /**
     * List all installed integrations and tools available in the current workspace
     */
    LIST_INSTALLED_INTEGRATIONS: (
      input: LIST_INSTALLED_INTEGRATIONSInput,
    ) => Promise<LIST_INSTALLED_INTEGRATIONSOutput>;
    /**
     * List all available tools and integrations that can be installed from the registry
     */
    LIST_REGISTRY_APPS: (
      input: LIST_REGISTRY_APPSInput,
    ) => Promise<LIST_REGISTRY_APPSOutput>;
    /**
     * List all available scopes in the registry
     */
    LIST_REGISTRY_SCOPES: (
      input: LIST_REGISTRY_SCOPESInput,
    ) => Promise<LIST_REGISTRY_SCOPESOutput>;
    /**
     * Execute a dynamically generated tool with provided specification and input
     */
    RUN_GENERATED_TOOL: (
      input: RUN_GENERATED_TOOLInput,
    ) => Promise<RUN_GENERATED_TOOLOutput>;
    /**
     * Execute a workflow step with @ref resolution and optional authorization
     */
    RUN_WORKFLOW_STEP: (
      input: RUN_WORKFLOW_STEPInput,
    ) => Promise<RUN_WORKFLOW_STEPOutput>;
    /**
     * Validate a view definition structure and provide feedback
     */
    VALIDATE_VIEW: (input: VALIDATE_VIEWInput) => Promise<VALIDATE_VIEWOutput>;
  }>;
}

export const Scopes = {
  TOOLS: {
    DECO_RESOURCE_TOOL_CREATE: "TOOLS::DECO_RESOURCE_TOOL_CREATE",
    DECO_RESOURCE_TOOL_DELETE: "TOOLS::DECO_RESOURCE_TOOL_DELETE",
    DECO_RESOURCE_TOOL_READ: "TOOLS::DECO_RESOURCE_TOOL_READ",
    DECO_RESOURCE_TOOL_SEARCH: "TOOLS::DECO_RESOURCE_TOOL_SEARCH",
    DECO_RESOURCE_TOOL_UPDATE: "TOOLS::DECO_RESOURCE_TOOL_UPDATE",
    DECO_TOOL_CALL_TOOL: "TOOLS::DECO_TOOL_CALL_TOOL",
    DECO_TOOL_RUN_TOOL: "TOOLS::DECO_TOOL_RUN_TOOL",
    DECO_VIEW_RENDER_TOOL_DETAIL: "TOOLS::DECO_VIEW_RENDER_TOOL_DETAIL",
  },
  DECONFIG: {
    CREATE_BRANCH: "DECONFIG::CREATE_BRANCH",
    DELETE_BRANCH: "DECONFIG::DELETE_BRANCH",
    DELETE_FILE: "DECONFIG::DELETE_FILE",
    DIFF_BRANCH: "DECONFIG::DIFF_BRANCH",
    LIST_BRANCHES: "DECONFIG::LIST_BRANCHES",
    LIST_FILES: "DECONFIG::LIST_FILES",
    MERGE_BRANCH: "DECONFIG::MERGE_BRANCH",
    PUT_FILE: "DECONFIG::PUT_FILE",
    READ_FILE: "DECONFIG::READ_FILE",
  },
  AI_GATEWAY: {
    AI_GENERATE: "AI_GATEWAY::AI_GENERATE",
    AI_GENERATE_OBJECT: "AI_GATEWAY::AI_GENERATE_OBJECT",
  },
  APIKEYS: {
    API_KEYS_CHECK_ACCESS: "APIKEYS::API_KEYS_CHECK_ACCESS",
    API_KEYS_CREATE: "APIKEYS::API_KEYS_CREATE",
    API_KEYS_DELETE: "APIKEYS::API_KEYS_DELETE",
    API_KEYS_DISABLE: "APIKEYS::API_KEYS_DISABLE",
    API_KEYS_ENABLE: "APIKEYS::API_KEYS_ENABLE",
    API_KEYS_GET: "APIKEYS::API_KEYS_GET",
    API_KEYS_LIST: "APIKEYS::API_KEYS_LIST",
    API_KEYS_REISSUE: "APIKEYS::API_KEYS_REISSUE",
    API_KEYS_UPDATE: "APIKEYS::API_KEYS_UPDATE",
    API_KEYS_VALIDATE: "APIKEYS::API_KEYS_VALIDATE",
  },
  INTEGRATIONS: {
    DECO_GET_APP_SCHEMA: "INTEGRATIONS::DECO_GET_APP_SCHEMA",
    DECO_INTEGRATION_INSTALL: "INTEGRATIONS::DECO_INTEGRATION_INSTALL",
    DECO_INTEGRATION_OAUTH_START: "INTEGRATIONS::DECO_INTEGRATION_OAUTH_START",
    DECO_INTEGRATIONS_SEARCH: "INTEGRATIONS::DECO_INTEGRATIONS_SEARCH",
    INTEGRATIONS_CALL_TOOL: "INTEGRATIONS::INTEGRATIONS_CALL_TOOL",
    INTEGRATIONS_CREATE: "INTEGRATIONS::INTEGRATIONS_CREATE",
    INTEGRATIONS_DELETE: "INTEGRATIONS::INTEGRATIONS_DELETE",
    INTEGRATIONS_GET: "INTEGRATIONS::INTEGRATIONS_GET",
    INTEGRATIONS_GET_API_KEY: "INTEGRATIONS::INTEGRATIONS_GET_API_KEY",
    INTEGRATIONS_LIST: "INTEGRATIONS::INTEGRATIONS_LIST",
    INTEGRATIONS_UPDATE: "INTEGRATIONS::INTEGRATIONS_UPDATE",
  },
  WORKFLOWS_MANAGEMENT: {
    DECO_CHAT_VIEWS_LIST: "WORKFLOWS_MANAGEMENT::DECO_CHAT_VIEWS_LIST",
    DECO_RESOURCE_WORKFLOW_CREATE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_CREATE",
    DECO_RESOURCE_WORKFLOW_DELETE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_DELETE",
    DECO_RESOURCE_WORKFLOW_READ:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_READ",
    DECO_RESOURCE_WORKFLOW_RUN_READ:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_RUN_READ",
    DECO_RESOURCE_WORKFLOW_RUN_SEARCH:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_RUN_SEARCH",
    DECO_RESOURCE_WORKFLOW_SEARCH:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_SEARCH",
    DECO_RESOURCE_WORKFLOW_UPDATE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_UPDATE",
    DECO_VIEW_RENDER_WORKFLOW_DETAIL:
      "WORKFLOWS_MANAGEMENT::DECO_VIEW_RENDER_WORKFLOW_DETAIL",
    DECO_VIEW_RENDER_WORKFLOW_RUN:
      "WORKFLOWS_MANAGEMENT::DECO_VIEW_RENDER_WORKFLOW_RUN",
    DECO_WORKFLOW_START: "WORKFLOWS_MANAGEMENT::DECO_WORKFLOW_START",
  },
};
