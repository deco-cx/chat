// Generated types - do not edit manually

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to fetch content from
 */
export type String = string;
/**
 * The HTTP method to use for the request
 */
export type String_1 = "GET" | "PUT" | "POST" | "DELETE" | "PATCH" | "HEAD";
export type String_2 = string;
/**
 * How to parse the response body: 'text' returns the raw text, 'json' parses and returns JSON
 */
export type String_3 = "text" | "json";
/**
 * Request timeout in milliseconds (1000-30000)
 */
export type Integer = number;

export interface HTTP_FETCHInput {
  url: String;
  method?: String_1;
  headers?: Object;
  /**
   * Optional body to send with the request
   */
  body?: {
    [k: string]: unknown;
  };
  responseType?: String_3;
  timeout?: Integer;
}
/**
 * Optional headers to include with the request
 */
export interface Object {
  [k: string]: String_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_4 = string;
/**
 * The HTTP status code of the response
 */
export type Number = number;
/**
 * The HTTP status text of the response
 */
export type String_5 = string;
export type String_6 = string;
/**
 * Whether the request was successful (status in 200-299 range)
 */
export type Boolean = boolean;

export interface HTTP_FETCHOutput {
  /**
   * The response body (string for text, parsed object for JSON)
   */
  body?: String_4;
  status: Number;
  statusText: String_5;
  headers: Object_1;
  ok: Boolean;
}
/**
 * The response headers
 */
export interface Object_1 {
  [k: string]: String_6;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_7 = string;
export type String_8 = "HTTP";
export type String_9 = string;
export type String_10 = string;
export type String_11 = "SSE";
export type String_12 = string;
export type String_13 = string;
export type String_14 = string;
export type String_15 = "Websocket";
export type String_16 = string;
export type String_17 = string;
export type String_18 = "Deco";
export type String_19 = string;
export type String_20 = string;
export type String_21 = "INNATE";
export type String_22 = string;
export type String_23 = string;
export type String_24 = string;
export type Integer_1 = number;
export type String_25 = string;

export interface INTEGRATIONS_CALL_TOOLInput {
  id?: String_7;
  connection?: Object_2 | Object_3 | Object_5 | Object_6 | Object_7;
  params: Object_8;
}
export interface Object_2 {
  type: String_8;
  url: String_9;
  token?: String_10;
}
export interface Object_3 {
  type: String_11;
  url: String_12;
  token?: String_13;
  headers?: Object_4;
}
export interface Object_4 {
  [k: string]: String_14;
}
export interface Object_5 {
  type: String_15;
  url: String_16;
  token?: String_17;
}
export interface Object_6 {
  type: String_18;
  tenant: String_19;
  token?: String_20;
}
export interface Object_7 {
  type: String_21;
  name: String_22;
  workspace?: String_23;
}
export interface Object_8 {
  _meta?: Object_9;
  name: String_25;
  arguments?: Object_10;
  [k: string]: unknown;
}
export interface Object_9 {
  progressToken?: String_24 | Integer_1;
  [k: string]: unknown;
}
export interface Object_10 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_26 = "HTTP";
export type String_27 = string;
export type String_28 = string;
export type String_29 = "SSE";
export type String_30 = string;
export type String_31 = string;
export type String_32 = string;
export type String_33 = "Websocket";
export type String_34 = string;
export type String_35 = string;
export type String_36 = "Deco";
export type String_37 = string;
export type String_38 = string;
export type String_39 = "INNATE";
export type String_40 = string;
export type String_41 = string;
/**
 * Whether to ignore the cache when listing tools
 */
export type Boolean_1 = boolean;

export interface INTEGRATIONS_LIST_TOOLSInput {
  connection: Object_11 | Object_12 | Object_14 | Object_15 | Object_16;
  ignoreCache?: Boolean_1;
}
export interface Object_11 {
  type: String_26;
  url: String_27;
  token?: String_28;
}
export interface Object_12 {
  type: String_29;
  url: String_30;
  token?: String_31;
  headers?: Object_13;
}
export interface Object_13 {
  [k: string]: String_32;
}
export interface Object_14 {
  type: String_33;
  url: String_34;
  token?: String_35;
}
export interface Object_15 {
  type: String_36;
  tenant: String_37;
  token?: String_38;
}
export interface Object_16 {
  type: String_39;
  name: String_40;
  workspace?: String_41;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_LIST_TOOLSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MY_INVITES_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array = unknown[];

export interface MY_INVITES_LISTOutput {
  items: Array;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull = String_42 | Null;
export type String_42 = string;
export type Null = null;
export type String_43 = string;
export type NumberNull = Number_1 | Null_1;
export type Number_1 = number;
export type Null_1 = null;
export type BooleanNull = Boolean_2 | Null_2;
export type Boolean_2 = boolean;
export type Null_2 = null;
export type StringNull_1 = String_44 | Null_3;
export type String_44 = string;
export type Null_3 = null;

export interface PROFILES_UPDATEInput {
  name?: StringNull;
  email?: String_43;
  deco_user_id?: NumberNull;
  is_new_user?: BooleanNull;
  phone?: StringNull_1;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_45 = string;
export type String_46 = string;

export interface PROJECT_ACTIVITY_REGISTERInput {
  org: String_45;
  project: String_46;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECT_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_47 = string;

export interface PROJECTS_LISTInput {
  org: String_47;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECTS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Integer_2 = number;

export interface PROJECTS_RECENTInput {
  limit?: Integer_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_48 = string;
export type String_49 = string;
export type String_50 = string;
export type StringNull_2 = String_51 | Null_4;
export type String_51 = string;
export type Null_4 = null;
export type Number_2 = number;
export type String_52 = string;
export type StringNull_3 = String_53 | Null_5;
export type String_53 = string;
export type Null_5 = null;
export type String_54 = string;
export type Array_1 = Object_17[];

export interface PROJECTS_RECENTOutput {
  items: Array_1;
}
export interface Object_17 {
  id: String_48;
  title: String_49;
  slug: String_50;
  avatar_url: StringNull_2;
  org: Object_18;
  last_accessed_at?: String_54;
}
export interface Object_18 {
  id: Number_2;
  slug: String_52;
  avatar_url?: StringNull_3;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The organization slug
 */
export type String_55 = string;
/**
 * The project slug
 */
export type String_56 = string;
/**
 * The new title for the project
 */
export type String_57 = string;

export interface PROJECTS_UPDATEInput {
  org: String_55;
  project: String_56;
  data: Object_19;
}
export interface Object_19 {
  title?: String_57;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_58 = string;
export type String_59 = string;
export type String_60 = string;
export type StringNull_4 = String_61 | Null_6;
export type String_61 = string;
export type Null_6 = null;
export type Number_3 = number;
export type String_62 = string;
export type StringNull_5 = String_63 | Null_7;
export type String_63 = string;
export type Null_7 = null;

export interface PROJECTS_UPDATEOutput {
  id: String_58;
  title: String_59;
  slug: String_60;
  avatar_url: StringNull_4;
  org: Object_20;
}
export interface Object_20 {
  id: Number_3;
  slug: String_62;
  avatar_url?: StringNull_5;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the app to get
 */
export type String_64 = string;
/**
 * The id of the app to get
 */
export type String_65 = string;

export interface REGISTRY_GET_APPInput {
  name?: String_64;
  id?: String_65;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_GET_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_66 = string;

export interface TEAM_INVITE_ACCEPTInput {
  id: String_66;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_ACCEPTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_67 = string;

export interface TEAM_INVITE_DELETEInput {
  id: String_67;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_4 = number;

export interface TEAM_MEMBER_ACTIVITY_REGISTERInput {
  teamId: Number_4;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBER_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_5 = number;
export type Boolean_3 = boolean;

export interface TEAM_MEMBERS_GETInput {
  teamId: Number_5;
  withActivity?: Boolean_3;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_68 = string;
export type String_69 = string;
export type Number_6 = number;
export type String_70 = string;
export type Array_3 = Object_22[];
export type Array_2 = Object_21[];

export interface TEAM_MEMBERS_INVITEInput {
  teamId: String_68;
  invitees: Array_2;
}
export interface Object_21 {
  email: String_69;
  roles: Array_3;
}
export interface Object_22 {
  id: Number_6;
  name: String_70;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_7 = number;
export type Number_8 = number;

export interface TEAM_MEMBERS_REMOVEInput {
  teamId: Number_7;
  memberId: Number_8;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_REMOVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_9 = number;
export type Number_10 = number;
export type Boolean_4 = boolean;

export interface TEAM_MEMBERS_UPDATEInput {
  teamId: Number_9;
  memberId: Number_10;
  data: Object_23;
}
export interface Object_23 {
  admin?: Boolean_4;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_11 = number;
export type String_71 = string;
export type Number_12 = number;
export type String_72 = "grant" | "revoke";

export interface TEAM_MEMBERS_UPDATE_ROLEInput {
  teamId: Number_11;
  userId: String_71;
  roleId: Number_12;
  action: String_72;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATE_ROLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_73 = string;
export type String_74 = string;
export type String_75 = "Bug" | "Idea";
export type String_76 = string;
export type String_77 = string;
export type String_78 = string;

export interface TEAM_REPORT_ISSUE_CREATEInput {
  orgSlug?: String_73;
  projectSlug?: String_74;
  type: String_75;
  content: String_76;
  url?: String_77;
  path?: String_78;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_REPORT_ISSUE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_13 = number;
export type String_79 = string;
export type String_80 = string;
export type String_81 = string;
export type String_82 = "allow" | "deny";
export type String_83 = string;
export type Array_4 = Object_26[];
export type String_84 = string;
export type Array_5 = String_84[];
export type String_85 = string;
export type String_86 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_6 = Object_27[];

export interface TEAM_ROLE_CREATEInput {
  teamId: Number_13;
  roleData: Object_24;
}
export interface Object_24 {
  name: String_79;
  description?: String_80;
  tools: Object_25;
  agents?: Array_5;
  members?: Array_6;
}
export interface Object_25 {
  [k: string]: Array_4;
}
export interface Object_26 {
  toolName: String_81;
  effect: String_82;
  policyId?: String_83;
}
export interface Object_27 {
  user_id: String_85;
  action: String_86;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_14 = number;
export type Number_15 = number;

export interface TEAM_ROLE_DELETEInput {
  teamId: Number_14;
  roleId: Number_15;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_16 = number;
export type Number_17 = number;

export interface TEAM_ROLE_GETInput {
  teamId: Number_16;
  roleId: Number_17;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_18 = number;
export type Number_19 = number;
export type String_87 = string;
export type String_88 = string;
export type String_89 = string;
export type String_90 = "allow" | "deny";
export type String_91 = string;
export type Array_7 = Object_30[];
export type String_92 = string;
export type Array_8 = String_92[];
export type String_93 = string;
export type String_94 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_9 = Object_31[];

export interface TEAM_ROLE_UPDATEInput {
  teamId: Number_18;
  roleId: Number_19;
  roleData: Object_28;
}
export interface Object_28 {
  name: String_87;
  description?: String_88;
  tools: Object_29;
  agents?: Array_8;
  members?: Array_9;
}
export interface Object_29 {
  [k: string]: Array_7;
}
export interface Object_30 {
  toolName: String_89;
  effect: String_90;
  policyId?: String_91;
}
export interface Object_31 {
  user_id: String_93;
  action: String_94;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_20 = number;

export interface TEAM_ROLES_LISTInput {
  teamId: Number_20;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_10 = unknown[];

export interface TEAM_ROLES_LISTOutput {
  items: Array_10;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_95 = string;
export type String_96 = string;

export interface TEAMS_CREATEInput {
  name: String_95;
  slug?: String_96;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_21 = number;

export interface TEAMS_DELETEInput {
  teamId: Number_21;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_97 = string;

export interface TEAMS_GETInput {
  slug: String_97;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_98 = string;

export interface TEAMS_GET_THEMEInput {
  slug: String_98;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GET_THEMEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_11 = unknown[];

export interface TEAMS_LISTOutput {
  items: Array_11;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the team to update
 */
export type Number_22 = number;
/**
 * Team name
 */
export type String_99 = string;
/**
 * Team URL slug
 */
export type String_100 = string;
/**
 * Main background color of the application (OKLCH/hex format)
 */
export type String_101 = string;
/**
 * Main text color on background (OKLCH/hex format)
 */
export type String_102 = string;
/**
 * Background color for cards and panels (OKLCH/hex format)
 */
export type String_103 = string;
/**
 * Text color on cards and panels (OKLCH/hex format)
 */
export type String_104 = string;
/**
 * Background color for popovers and dropdowns (OKLCH/hex format)
 */
export type String_105 = string;
/**
 * Text color in popovers and dropdowns (OKLCH/hex format)
 */
export type String_106 = string;
/**
 * Primary brand color for buttons and highlights (OKLCH/hex format)
 */
export type String_107 = string;
/**
 * Text color on primary elements (OKLCH/hex format)
 */
export type String_108 = string;
/**
 * Lighter variant of primary color (OKLCH/hex format)
 */
export type String_109 = string;
/**
 * Darker variant of primary color (OKLCH/hex format)
 */
export type String_110 = string;
/**
 * Secondary color for less prominent elements (OKLCH/hex format)
 */
export type String_111 = string;
/**
 * Text color on secondary elements (OKLCH/hex format)
 */
export type String_112 = string;
/**
 * Muted background color for subtle elements (OKLCH/hex format)
 */
export type String_113 = string;
/**
 * Muted text color for secondary text (OKLCH/hex format)
 */
export type String_114 = string;
/**
 * Accent color for interactive elements (OKLCH/hex format)
 */
export type String_115 = string;
/**
 * Text color on accent elements (OKLCH/hex format)
 */
export type String_116 = string;
/**
 * Color for destructive actions and errors (OKLCH/hex format)
 */
export type String_117 = string;
/**
 * Text color on destructive elements (OKLCH/hex format)
 */
export type String_118 = string;
/**
 * Color for success states and positive actions (OKLCH/hex format)
 */
export type String_119 = string;
/**
 * Text color on success elements (OKLCH/hex format)
 */
export type String_120 = string;
/**
 * Color for warning states and caution indicators (OKLCH/hex format)
 */
export type String_121 = string;
/**
 * Text color on warning elements (OKLCH/hex format)
 */
export type String_122 = string;
/**
 * Border color for elements (OKLCH/hex format)
 */
export type String_123 = string;
/**
 * Border color for input fields (OKLCH/hex format)
 */
export type String_124 = string;
/**
 * Background color for sidebar navigation (OKLCH/hex format)
 */
export type String_125 = string;
/**
 * Text color in sidebar navigation (OKLCH/hex format)
 */
export type String_126 = string;
/**
 * Accent background color for sidebar elements (OKLCH/hex format)
 */
export type String_127 = string;
/**
 * Text color on sidebar accent elements (OKLCH/hex format)
 */
export type String_128 = string;
/**
 * Border color for sidebar elements (OKLCH/hex format)
 */
export type String_129 = string;
/**
 * Focus ring color for sidebar elements (OKLCH/hex format)
 */
export type String_130 = string;
/**
 * Background color for splash screen animation (OKLCH/hex format)
 */
export type String_131 = string;
/**
 * URL to team avatar/logo image
 */
export type String_132 = string;
/**
 * Use a Google Fonts font
 */
export type String_133 = "Google Fonts";
/**
 * Name of the Google Font (e.g., 'Inter', 'Roboto', 'Open Sans')
 */
export type String_134 = string;
/**
 * Use a custom uploaded font
 */
export type String_135 = "Custom";
/**
 * Display name for the custom font
 */
export type String_136 = string;
/**
 * URL to the custom font file
 */
export type String_137 = string;

export interface TEAMS_UPDATEInput {
  id: Number_22;
  data: Object_32;
}
export interface Object_32 {
  name?: String_99;
  slug?: String_100;
  theme?: Object_33;
}
/**
 * Theme configuration for the workspace. Only include the properties you want to change - existing values will be preserved.
 */
export interface Object_33 {
  variables?: Object_34;
  picture?: String_132;
  /**
   * Font configuration for the workspace
   */
  font?: Object_35 | Object_36;
}
/**
 * CSS custom properties for theme colors. Use OKLCH format (preferred) or hex colors.
 */
export interface Object_34 {
  "--background"?: String_101;
  "--foreground"?: String_102;
  "--card"?: String_103;
  "--card-foreground"?: String_104;
  "--popover"?: String_105;
  "--popover-foreground"?: String_106;
  "--primary"?: String_107;
  "--primary-foreground"?: String_108;
  "--primary-light"?: String_109;
  "--primary-dark"?: String_110;
  "--secondary"?: String_111;
  "--secondary-foreground"?: String_112;
  "--muted"?: String_113;
  "--muted-foreground"?: String_114;
  "--accent"?: String_115;
  "--accent-foreground"?: String_116;
  "--destructive"?: String_117;
  "--destructive-foreground"?: String_118;
  "--success"?: String_119;
  "--success-foreground"?: String_120;
  "--warning"?: String_121;
  "--warning-foreground"?: String_122;
  "--border"?: String_123;
  "--input"?: String_124;
  "--sidebar"?: String_125;
  "--sidebar-foreground"?: String_126;
  "--sidebar-accent"?: String_127;
  "--sidebar-accent-foreground"?: String_128;
  "--sidebar-border"?: String_129;
  "--sidebar-ring"?: String_130;
  "--splash"?: String_131;
}
export interface Object_35 {
  type: String_133;
  name: String_134;
}
export interface Object_36 {
  type: String_135;
  name: String_136;
  url: String_137;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_138 = string;
/**
 * Human-readable name of the agent
 */
export type String_139 = string;
/**
 * URL to the agent's avatar image
 */
export type String_140 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_141 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_142 = string;
export type String_143 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_12 = String_143[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_23 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_1 = Number_24 | Null_8;
export type Number_24 = number;
export type Null_8 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_144 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_145 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_25 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_5 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_6 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_146 = string;
/**
 * URL for the view
 */
export type String_147 = string;
/**
 * Name of the view
 */
export type String_148 = string;
/**
 * Views where the agent can be used
 */
export type Array_13 = Object_40[];
/**
 * Visibility of the agent
 */
export type String_149 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_150 = string;
export type Null_9 = null;
export type Number_26 = number;
export type Null_10 = null;

export interface AGENTS_CREATEInput {
  id?: String_138;
  name?: String_139;
  avatar?: String_140;
  instructions?: String_141;
  description?: String_142;
  tools_set?: Object_37;
  max_steps?: Number_23;
  max_tokens?: NumberNull_1;
  model?: String_144;
  memory?: Object_38;
  views?: Array_13;
  visibility?: String_149;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_150
      )
    | Null_9;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_26
      )
    | Null_10;
}
/**
 * Tools available to the agent
 */
export interface Object_37 {
  [k: string]: Array_12;
}
/**
 * Memory to use for the agent
 */
export interface Object_38 {
  discriminator?: String_145;
  last_messages?: Number_25;
  semantic_recall?: Boolean_5;
  working_memory?: Object_39;
}
/**
 * Working memory to use for the agent
 */
export interface Object_39 {
  enabled?: Boolean_6;
  template?: String_146;
}
export interface Object_40 {
  url: String_147;
  name: String_148;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_151 = string;
/**
 * Human-readable name of the agent
 */
export type String_152 = string;
/**
 * URL to the agent's avatar image
 */
export type String_153 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_154 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_155 = string;
export type String_156 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_14 = String_156[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_27 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_2 = Number_28 | Null_11;
export type Number_28 = number;
export type Null_11 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_157 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_158 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_29 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_7 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_8 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_159 = string;
/**
 * URL for the view
 */
export type String_160 = string;
/**
 * Name of the view
 */
export type String_161 = string;
/**
 * Views where the agent can be used
 */
export type Array_15 = Object_44[];
/**
 * Visibility of the agent
 */
export type String_162 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_163 = string;
export type Null_12 = null;
export type Number_30 = number;
export type Null_13 = null;

export interface AGENTS_CREATEOutput {
  id: String_151;
  name: String_152;
  avatar: String_153;
  instructions: String_154;
  description?: String_155;
  tools_set: Object_41;
  max_steps?: Number_27;
  max_tokens?: NumberNull_2;
  model?: String_157;
  memory?: Object_42;
  views: Array_15;
  visibility: String_162;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_163
      )
    | Null_12;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_30
      )
    | Null_13;
}
/**
 * Tools available to the agent
 */
export interface Object_41 {
  [k: string]: Array_14;
}
/**
 * Memory to use for the agent
 */
export interface Object_42 {
  discriminator?: String_158;
  last_messages?: Number_29;
  semantic_recall?: Boolean_7;
  working_memory?: Object_43;
}
/**
 * Working memory to use for the agent
 */
export interface Object_43 {
  enabled?: Boolean_8;
  template?: String_159;
}
export interface Object_44 {
  url: String_160;
  name: String_161;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_164 = string;

export interface AGENTS_DELETEInput {
  id: String_164;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_9 = boolean;

export interface AGENTS_DELETEOutput {
  deleted: Boolean_9;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_165 = string;

export interface AGENTS_GETInput {
  id: String_165;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_166 = string;
/**
 * Human-readable name of the agent
 */
export type String_167 = string;
/**
 * URL to the agent's avatar image
 */
export type String_168 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_169 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_170 = string;
export type String_171 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_16 = String_171[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_31 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_3 = Number_32 | Null_14;
export type Number_32 = number;
export type Null_14 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_172 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_173 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_33 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_10 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_11 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_174 = string;
/**
 * URL for the view
 */
export type String_175 = string;
/**
 * Name of the view
 */
export type String_176 = string;
/**
 * Views where the agent can be used
 */
export type Array_17 = Object_48[];
/**
 * Visibility of the agent
 */
export type String_177 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_178 = string;
export type Null_15 = null;
export type Number_34 = number;
export type Null_16 = null;

export interface AGENTS_GETOutput {
  id: String_166;
  name: String_167;
  avatar: String_168;
  instructions: String_169;
  description?: String_170;
  tools_set: Object_45;
  max_steps?: Number_31;
  max_tokens?: NumberNull_3;
  model?: String_172;
  memory?: Object_46;
  views: Array_17;
  visibility: String_177;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_178
      )
    | Null_15;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_34
      )
    | Null_16;
}
/**
 * Tools available to the agent
 */
export interface Object_45 {
  [k: string]: Array_16;
}
/**
 * Memory to use for the agent
 */
export interface Object_46 {
  discriminator?: String_173;
  last_messages?: Number_33;
  semantic_recall?: Boolean_10;
  working_memory?: Object_47;
}
/**
 * Working memory to use for the agent
 */
export interface Object_47 {
  enabled?: Boolean_11;
  template?: String_174;
}
export interface Object_48 {
  url: String_175;
  name: String_176;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AGENTS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_179 = string;
/**
 * Human-readable name of the agent
 */
export type String_180 = string;
/**
 * URL to the agent's avatar image
 */
export type String_181 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_182 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_183 = string;
export type String_184 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_19 = String_184[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_35 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_4 = Number_36 | Null_17;
export type Number_36 = number;
export type Null_17 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_185 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_186 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_37 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_12 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_13 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_187 = string;
/**
 * URL for the view
 */
export type String_188 = string;
/**
 * Name of the view
 */
export type String_189 = string;
/**
 * Views where the agent can be used
 */
export type Array_20 = Object_53[];
/**
 * Visibility of the agent
 */
export type String_190 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_191 = string;
export type Null_18 = null;
export type Number_38 = number;
export type Null_19 = null;
export type StringNull_6 = String_192 | Null_20;
export type String_192 = string;
export type Null_20 = null;
export type StringNull_7 = String_193 | Null_21;
export type String_193 = string;
export type Null_21 = null;
export type Array_18 = Object_49[];

export interface AGENTS_LISTOutput {
  items: Array_18;
}
export interface Object_49 {
  id: String_179;
  name: String_180;
  avatar: String_181;
  instructions: String_182;
  description?: String_183;
  tools_set: Object_50;
  max_steps?: Number_35;
  max_tokens?: NumberNull_4;
  model?: String_185;
  memory?: Object_51;
  views: Array_20;
  visibility: String_190;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_191
      )
    | Null_18;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_38
      )
    | Null_19;
  lastAccess?: StringNull_6;
  lastAccessor?: StringNull_7;
}
/**
 * Tools available to the agent
 */
export interface Object_50 {
  [k: string]: Array_19;
}
/**
 * Memory to use for the agent
 */
export interface Object_51 {
  discriminator?: String_186;
  last_messages?: Number_37;
  semantic_recall?: Boolean_12;
  working_memory?: Object_52;
}
/**
 * Working memory to use for the agent
 */
export interface Object_52 {
  enabled?: Boolean_13;
  template?: String_187;
}
export interface Object_53 {
  url: String_188;
  name: String_189;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_194 = string;
/**
 * Unique identifier for the agent
 */
export type String_195 = string;
/**
 * Human-readable name of the agent
 */
export type String_196 = string;
/**
 * URL to the agent's avatar image
 */
export type String_197 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_198 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_199 = string;
export type String_200 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_21 = String_200[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_39 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_5 = Number_40 | Null_22;
export type Number_40 = number;
export type Null_22 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_201 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_202 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_41 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_14 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_15 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_203 = string;
/**
 * URL for the view
 */
export type String_204 = string;
/**
 * Name of the view
 */
export type String_205 = string;
/**
 * Views where the agent can be used
 */
export type Array_22 = Object_58[];
/**
 * Visibility of the agent
 */
export type String_206 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_207 = string;
export type Null_23 = null;
export type Number_42 = number;
export type Null_24 = null;

export interface AGENTS_UPDATEInput {
  id: String_194;
  agent: Object_54;
}
export interface Object_54 {
  id?: String_195;
  name?: String_196;
  avatar?: String_197;
  instructions?: String_198;
  description?: String_199;
  tools_set?: Object_55;
  max_steps?: Number_39;
  max_tokens?: NumberNull_5;
  model?: String_201;
  memory?: Object_56;
  views?: Array_22;
  visibility?: String_206;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_207
      )
    | Null_23;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_42
      )
    | Null_24;
}
/**
 * Tools available to the agent
 */
export interface Object_55 {
  [k: string]: Array_21;
}
/**
 * Memory to use for the agent
 */
export interface Object_56 {
  discriminator?: String_202;
  last_messages?: Number_41;
  semantic_recall?: Boolean_14;
  working_memory?: Object_57;
}
/**
 * Working memory to use for the agent
 */
export interface Object_57 {
  enabled?: Boolean_15;
  template?: String_203;
}
export interface Object_58 {
  url: String_204;
  name: String_205;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_208 = string;
/**
 * Human-readable name of the agent
 */
export type String_209 = string;
/**
 * URL to the agent's avatar image
 */
export type String_210 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_211 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_212 = string;
export type String_213 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_23 = String_213[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_43 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_6 = Number_44 | Null_25;
export type Number_44 = number;
export type Null_25 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_214 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_215 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_45 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_16 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_17 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_216 = string;
/**
 * URL for the view
 */
export type String_217 = string;
/**
 * Name of the view
 */
export type String_218 = string;
/**
 * Views where the agent can be used
 */
export type Array_24 = Object_62[];
/**
 * Visibility of the agent
 */
export type String_219 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_220 = string;
export type Null_26 = null;
export type Number_46 = number;
export type Null_27 = null;

export interface AGENTS_UPDATEOutput {
  id: String_208;
  name: String_209;
  avatar: String_210;
  instructions: String_211;
  description?: String_212;
  tools_set: Object_59;
  max_steps?: Number_43;
  max_tokens?: NumberNull_6;
  model?: String_214;
  memory?: Object_60;
  views: Array_24;
  visibility: String_219;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_220
      )
    | Null_26;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_46
      )
    | Null_27;
}
/**
 * Tools available to the agent
 */
export interface Object_59 {
  [k: string]: Array_23;
}
/**
 * Memory to use for the agent
 */
export interface Object_60 {
  discriminator?: String_215;
  last_messages?: Number_45;
  semantic_recall?: Boolean_16;
  working_memory?: Object_61;
}
/**
 * Working memory to use for the agent
 */
export interface Object_61 {
  enabled?: Boolean_17;
  template?: String_216;
}
export interface Object_62 {
  url: String_217;
  name: String_218;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_221 = string;
export type String_222 = "user" | "assistant" | "system";
export type String_223 = string;
export type String_224 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_225 = string;
/**
 * Media type of the attachment
 */
export type String_226 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_227 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_26 = Object_64[];
/**
 * Array of messages for the conversation
 */
export type Array_25 = Object_63[];
/**
 * Skip transaction creation
 */
export type Boolean_18 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_228 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_47 = number;
/**
 * Temperature for the generation
 */
export type Number_48 = number;
export type String_229 = string;
export type Array_27 = String_229[];

export interface AI_GENERATEInput {
  messages: Array_25;
  skipTransaction?: Boolean_18;
  model?: String_228;
  maxTokens?: Number_47;
  temperature?: Number_48;
  tools?: Object_65;
}
export interface Object_63 {
  id?: String_221;
  role: String_222;
  content: String_223;
  createdAt?: String_224;
  experimental_attachments?: Array_26;
}
export interface Object_64 {
  name?: String_225;
  contentType?: String_226;
  url: String_227;
}
/**
 * Tools available for the generation
 */
export interface Object_65 {
  [k: string]: Array_27;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_230 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_49 = number;
/**
 * Number of tokens in the completion
 */
export type Number_50 = number;
/**
 * Total number of tokens used
 */
export type Number_51 = number;
/**
 * Transaction ID
 */
export type String_231 = string;
/**
 * Reason why generation finished
 */
export type String_232 = string;

export interface AI_GENERATEOutput {
  text: String_230;
  usage: Object_66;
  finishReason?: String_232;
}
/**
 * Token usage information
 */
export interface Object_66 {
  promptTokens: Number_49;
  completionTokens: Number_50;
  totalTokens: Number_51;
  transactionId?: String_231;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_233 = string;
export type String_234 = "user" | "assistant" | "system";
export type String_235 = string;
export type String_236 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_237 = string;
/**
 * Media type of the attachment
 */
export type String_238 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_239 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_29 = Object_68[];
/**
 * Array of messages for the conversation
 */
export type Array_28 = Object_67[];
/**
 * Skip transaction creation
 */
export type Boolean_19 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_240 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_52 = number;
/**
 * Temperature for the generation
 */
export type Number_53 = number;
export type String_241 = string;
export type Array_30 = String_241[];

export interface AI_GENERATE_OBJECTInput {
  messages: Array_28;
  schema: Object_69;
  skipTransaction?: Boolean_19;
  model?: String_240;
  maxTokens?: Number_52;
  temperature?: Number_53;
  tools?: Object_70;
}
export interface Object_67 {
  id?: String_233;
  role: String_234;
  content: String_235;
  createdAt?: String_236;
  experimental_attachments?: Array_29;
}
export interface Object_68 {
  name?: String_237;
  contentType?: String_238;
  url: String_239;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_69 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_70 {
  [k: string]: Array_30;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_54 = number;
/**
 * Number of tokens in the completion
 */
export type Number_55 = number;
/**
 * Total number of tokens used
 */
export type Number_56 = number;
/**
 * Transaction ID
 */
export type String_242 = string;
/**
 * Reason why generation finished
 */
export type String_243 = string;

export interface AI_GENERATE_OBJECTOutput {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_71;
  finishReason?: String_243;
}
/**
 * Token usage information
 */
export interface Object_71 {
  promptTokens: Number_54;
  completionTokens: Number_55;
  totalTokens: Number_56;
  transactionId?: String_242;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The API key to check access for, if not provided, the current key from context will be used
 */
export type String_244 = string;
export type String_245 = string;
/**
 * All tools that wants to check access
 */
export type Array_31 = String_245[];

export interface API_KEYS_CHECK_ACCESSInput {
  key?: String_244;
  tools: Array_31;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_20 = boolean;

export interface API_KEYS_CHECK_ACCESSOutput {
  access: Object_72;
}
export interface Object_72 {
  [k: string]: Boolean_20;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the API key
 */
export type String_246 = string;
export type String_247 = "allow" | "deny";
export type String_248 = string;
export type String_249 = "is_integration";
export type String_250 = string;
/**
 * Policies for the API key
 */
export type Array_32 = Object_73[];
export type String_251 = string;
export type String_252 = string;

export interface API_KEYS_CREATEInput {
  name: String_246;
  policies?: Array_32;
  claims?: Object_75;
}
export interface Object_73 {
  effect: String_247;
  resource: String_248;
  matchCondition?: Object_74;
}
export interface Object_74 {
  resource: String_249;
  integrationId: String_250;
}
/**
 * App Claims to be added to the API key
 */
export interface Object_75 {
  appName: String_251;
  integrationId: String_252;
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_253 = string;
/**
 * The name of the API key
 */
export type String_254 = string;
/**
 * The workspace ID
 */
export type String_255 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_21 = boolean;
export type String_256 = "allow" | "deny";
export type String_257 = string;
export type String_258 = "is_integration";
export type String_259 = string;
/**
 * Access policies for the API key
 */
export type Array_33 = Object_76[];
/**
 * Creation timestamp
 */
export type String_260 = string;
/**
 * Last update timestamp
 */
export type String_261 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_8 = String_262 | Null_28;
export type String_262 = string;
export type Null_28 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_263 = string;

export interface API_KEYS_CREATEOutput {
  id: String_253;
  name: String_254;
  workspace: String_255;
  enabled: Boolean_21;
  policies: Array_33;
  createdAt: String_260;
  updatedAt: String_261;
  deletedAt: StringNull_8;
  value: String_263;
}
export interface Object_76 {
  effect: String_256;
  resource: String_257;
  matchCondition?: Object_77;
}
export interface Object_77 {
  resource: String_258;
  integrationId: String_259;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to delete
 */
export type String_264 = string;

export interface API_KEYS_DELETEInput {
  id: String_264;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the deleted API key
 */
export type String_265 = string;
/**
 * Confirmation that the key was deleted
 */
export type Boolean_22 = boolean;

export interface API_KEYS_DELETEOutput {
  id: String_265;
  deleted: Boolean_22;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to disable
 */
export type String_266 = string;

export interface API_KEYS_DISABLEInput {
  id: String_266;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_267 = string;
/**
 * The name of the API key
 */
export type String_268 = string;
/**
 * The workspace ID
 */
export type String_269 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_23 = boolean;
export type String_270 = "allow" | "deny";
export type String_271 = string;
export type String_272 = "is_integration";
export type String_273 = string;
/**
 * Access policies for the API key
 */
export type Array_34 = Object_78[];
/**
 * Creation timestamp
 */
export type String_274 = string;
/**
 * Last update timestamp
 */
export type String_275 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_9 = String_276 | Null_29;
export type String_276 = string;
export type Null_29 = null;

export interface API_KEYS_DISABLEOutput {
  id: String_267;
  name: String_268;
  workspace: String_269;
  enabled: Boolean_23;
  policies: Array_34;
  createdAt: String_274;
  updatedAt: String_275;
  deletedAt: StringNull_9;
}
export interface Object_78 {
  effect: String_270;
  resource: String_271;
  matchCondition?: Object_79;
}
export interface Object_79 {
  resource: String_272;
  integrationId: String_273;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to enable
 */
export type String_277 = string;

export interface API_KEYS_ENABLEInput {
  id: String_277;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_278 = string;
/**
 * The name of the API key
 */
export type String_279 = string;
/**
 * The workspace ID
 */
export type String_280 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_24 = boolean;
export type String_281 = "allow" | "deny";
export type String_282 = string;
export type String_283 = "is_integration";
export type String_284 = string;
/**
 * Access policies for the API key
 */
export type Array_35 = Object_80[];
/**
 * Creation timestamp
 */
export type String_285 = string;
/**
 * Last update timestamp
 */
export type String_286 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_10 = String_287 | Null_30;
export type String_287 = string;
export type Null_30 = null;

export interface API_KEYS_ENABLEOutput {
  id: String_278;
  name: String_279;
  workspace: String_280;
  enabled: Boolean_24;
  policies: Array_35;
  createdAt: String_285;
  updatedAt: String_286;
  deletedAt: StringNull_10;
}
export interface Object_80 {
  effect: String_281;
  resource: String_282;
  matchCondition?: Object_81;
}
export interface Object_81 {
  resource: String_283;
  integrationId: String_284;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_288 = string;

export interface API_KEYS_GETInput {
  id: String_288;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_289 = string;
/**
 * The name of the API key
 */
export type String_290 = string;
/**
 * The workspace ID
 */
export type String_291 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_25 = boolean;
export type String_292 = "allow" | "deny";
export type String_293 = string;
export type String_294 = "is_integration";
export type String_295 = string;
/**
 * Access policies for the API key
 */
export type Array_36 = Object_82[];
/**
 * Creation timestamp
 */
export type String_296 = string;
/**
 * Last update timestamp
 */
export type String_297 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_11 = String_298 | Null_31;
export type String_298 = string;
export type Null_31 = null;

export interface API_KEYS_GETOutput {
  id: String_289;
  name: String_290;
  workspace: String_291;
  enabled: Boolean_25;
  policies: Array_36;
  createdAt: String_296;
  updatedAt: String_297;
  deletedAt: StringNull_11;
}
export interface Object_82 {
  effect: String_292;
  resource: String_293;
  matchCondition?: Object_83;
}
export interface Object_83 {
  resource: String_294;
  integrationId: String_295;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_299 = string;
/**
 * The name of the API key
 */
export type String_300 = string;
/**
 * The workspace ID
 */
export type String_301 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_26 = boolean;
export type String_302 = "allow" | "deny";
export type String_303 = string;
export type String_304 = "is_integration";
export type String_305 = string;
/**
 * Access policies for the API key
 */
export type Array_38 = Object_85[];
/**
 * Creation timestamp
 */
export type String_306 = string;
/**
 * Last update timestamp
 */
export type String_307 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_12 = String_308 | Null_32;
export type String_308 = string;
export type Null_32 = null;
/**
 * List of API keys
 */
export type Array_37 = Object_84[];

export interface API_KEYS_LISTOutput {
  apiKeys: Array_37;
}
export interface Object_84 {
  id: String_299;
  name: String_300;
  workspace: String_301;
  enabled: Boolean_26;
  policies: Array_38;
  createdAt: String_306;
  updatedAt: String_307;
  deletedAt: StringNull_12;
}
export interface Object_85 {
  effect: String_302;
  resource: String_303;
  matchCondition?: Object_86;
}
export interface Object_86 {
  resource: String_304;
  integrationId: String_305;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to reissue
 */
export type String_309 = string;
export type String_310 = "allow" | "deny";
export type String_311 = string;
export type String_312 = "is_integration";
export type String_313 = string;
/**
 * Policies of the API key
 */
export type Array_39 = Object_87[];

export interface API_KEYS_REISSUEInput {
  id: String_309;
  /**
   * New claims to be added to the API key
   */
  claims?: {
    [k: string]: unknown;
  };
  policies?: Array_39;
}
export interface Object_87 {
  effect: String_310;
  resource: String_311;
  matchCondition?: Object_88;
}
export interface Object_88 {
  resource: String_312;
  integrationId: String_313;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_314 = string;
/**
 * The name of the API key
 */
export type String_315 = string;
/**
 * The workspace ID
 */
export type String_316 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_27 = boolean;
export type String_317 = "allow" | "deny";
export type String_318 = string;
export type String_319 = "is_integration";
export type String_320 = string;
/**
 * Access policies for the API key
 */
export type Array_40 = Object_89[];
/**
 * Creation timestamp
 */
export type String_321 = string;
/**
 * Last update timestamp
 */
export type String_322 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_13 = String_323 | Null_33;
export type String_323 = string;
export type Null_33 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_324 = string;

export interface API_KEYS_REISSUEOutput {
  id: String_314;
  name: String_315;
  workspace: String_316;
  enabled: Boolean_27;
  policies: Array_40;
  createdAt: String_321;
  updatedAt: String_322;
  deletedAt: StringNull_13;
  value: String_324;
}
export interface Object_89 {
  effect: String_317;
  resource: String_318;
  matchCondition?: Object_90;
}
export interface Object_90 {
  resource: String_319;
  integrationId: String_320;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_325 = string;
/**
 * New name for the API key
 */
export type String_326 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_28 = boolean;
export type String_327 = "allow" | "deny";
export type String_328 = string;
export type String_329 = "is_integration";
export type String_330 = string;
/**
 * Policies for the API key
 */
export type Array_41 = Object_91[];

export interface API_KEYS_UPDATEInput {
  id: String_325;
  name?: String_326;
  enabled?: Boolean_28;
  policies?: Array_41;
}
export interface Object_91 {
  effect: String_327;
  resource: String_328;
  matchCondition?: Object_92;
}
export interface Object_92 {
  resource: String_329;
  integrationId: String_330;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_331 = string;
/**
 * The name of the API key
 */
export type String_332 = string;
/**
 * The workspace ID
 */
export type String_333 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_29 = boolean;
export type String_334 = "allow" | "deny";
export type String_335 = string;
export type String_336 = "is_integration";
export type String_337 = string;
/**
 * Access policies for the API key
 */
export type Array_42 = Object_93[];
/**
 * Creation timestamp
 */
export type String_338 = string;
/**
 * Last update timestamp
 */
export type String_339 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_14 = String_340 | Null_34;
export type String_340 = string;
export type Null_34 = null;

export interface API_KEYS_UPDATEOutput {
  id: String_331;
  name: String_332;
  workspace: String_333;
  enabled: Boolean_29;
  policies: Array_42;
  createdAt: String_338;
  updatedAt: String_339;
  deletedAt: StringNull_14;
}
export interface Object_93 {
  effect: String_334;
  resource: String_335;
  matchCondition?: Object_94;
}
export interface Object_94 {
  resource: String_336;
  integrationId: String_337;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to validate
 */
export type String_341 = string;

export interface API_KEYS_VALIDATEInput {
  id: String_341;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_342 = string;
/**
 * The name of the API key
 */
export type String_343 = string;
/**
 * The workspace ID
 */
export type String_344 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_30 = boolean;
export type String_345 = "allow" | "deny";
export type String_346 = string;
export type String_347 = "is_integration";
export type String_348 = string;
/**
 * Access policies for the API key
 */
export type Array_43 = Object_95[];
/**
 * Creation timestamp
 */
export type String_349 = string;
/**
 * Last update timestamp
 */
export type String_350 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_15 = String_351 | Null_35;
export type String_351 = string;
export type Null_35 = null;
/**
 * Whether the API key is valid
 */
export type Boolean_31 = boolean;

export interface API_KEYS_VALIDATEOutput {
  id: String_342;
  name: String_343;
  workspace: String_344;
  enabled: Boolean_30;
  policies: Array_43;
  createdAt: String_349;
  updatedAt: String_350;
  deletedAt: StringNull_15;
  valid: Boolean_31;
}
export interface Object_95 {
  effect: String_345;
  resource: String_346;
  matchCondition?: Object_96;
}
export interface Object_96 {
  resource: String_347;
  integrationId: String_348;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The channel discriminator
 */
export type String_352 = string;
/**
 * The ID of the integration to use
 */
export type String_353 = string;
/**
 * The ID of the agent to join the channel.
 */
export type String_354 = string;
/**
 * The name of the channel
 */
export type String_355 = string;

export interface CHANNELS_CREATEInput {
  discriminator: String_352;
  integrationId: String_353;
  agentId?: String_354;
  name?: String_355;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_356 = string;

export interface CHANNELS_DELETEInput {
  id: String_356;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_357 = string;

export interface CHANNELS_GETInput {
  id: String_357;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to join, use only UUIDs.
 */
export type String_358 = string;
/**
 * The ID of the agent to join the channel to, use only UUIDs.
 */
export type String_359 = string;

export interface CHANNELS_JOINInput {
  id: String_358;
  agentId: String_359;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_JOINOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to unlink, use only UUIDs.
 */
export type String_360 = string;
/**
 * The ID of the agent to unlink, use only UUIDs.
 */
export type String_361 = string;

export interface CHANNELS_LEAVEInput {
  id: String_360;
  agentId: String_361;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LEAVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_362 = string;
export type String_363 = string;
export type String_364 = string;
/**
 * The amount (in microdollars) of money to commit. Specified in USD dollars.
 */
export type StringNumber = String_365 | Number_57;
export type String_365 = string;
export type Number_57 = number;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTInput {
  identifier?: String_362;
  contractId: String_363;
  vendorId: String_364;
  amount: StringNumber;
  metadata?: Object_97;
}
export interface Object_97 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_366 = string;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTOutput {
  id: String_366;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_367 = string;
export type String_368 = string;
export type StringNumber_1 = String_369 | Number_58;
export type String_369 = string;
export type Number_58 = number;
export type String_370 = string;
export type String_371 = string;
export type Array_45 = String_371[];
export type Array_44 = Object_99[];
export type String_372 = string;
export type String_373 = string;

export interface CONTRACT_REGISTERInput {
  contract: Object_98;
  author: Object_100;
}
export interface Object_98 {
  body?: String_367;
  clauses?: Array_44;
}
export interface Object_99 {
  id: String_368;
  price: StringNumber_1;
  description?: String_370;
  usedByTools?: Array_45;
}
export interface Object_100 {
  scope: String_372;
  name: String_373;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_374 = string;

export interface CONTRACT_REGISTEROutput {
  appName: String_374;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to create
 */
export type String_375 = string;
/**
 * The source branch to branch from (optional - creates empty branch if not provided)
 */
export type String_376 = string;

export interface CREATE_BRANCHInput {
  branchName: String_375;
  sourceBranch?: String_376;
  metadata?: Object_101;
}
/**
 * Optional metadata for the branch
 */
export interface Object_101 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_377 = string;
export type String_378 = string;
export type Number_59 = number;

export interface CREATE_BRANCHOutput {
  branchName: String_377;
  sourceBranch?: String_378;
  createdAt: Number_59;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_60 = number;
export type String_379 = string;
export type String_380 = string;

export interface CREATE_CHECKOUT_SESSIONInput {
  amountUSDCents: Number_60;
  successUrl: String_379;
  cancelUrl: String_380;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_381 = string;

export interface CREATE_CHECKOUT_SESSIONOutput {
  url: String_381;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount of money to add to the voucher. Specified in USD dollars.
 */
export type Number_61 = number;

export interface CREATE_VOUCHERInput {
  amount: Number_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_382 = string;

export interface CREATE_VOUCHEROutput {
  id: String_382;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_32 = boolean;

export interface DATABASES_GET_METAInput {
  _legacy?: Boolean_32;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_62 = number;

export interface DATABASES_GET_METAOutput {
  bytes?: Number_62;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, only shows what would be migrated without executing
 */
export type Boolean_33 = boolean;
export type String_383 = string;
/**
 * Specific tables to migrate. If not provided, all tables will be migrated
 */
export type Array_46 = String_383[];
/**
 * Number of rows to migrate per batch
 */
export type Number_63 = number;

export interface DATABASES_MIGRATEInput {
  dryRun?: Boolean_33;
  tables?: Array_46;
  batchSize?: Number_63;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_34 = boolean;
export type String_384 = string;
export type Number_64 = number;
export type String_385 = "success" | "error" | "skipped";
export type String_386 = string;
export type Array_47 = Object_102[];
export type Number_65 = number;
export type Number_66 = number;

export interface DATABASES_MIGRATEOutput {
  success: Boolean_34;
  migratedTables: Array_47;
  totalRowsMigrated: Number_65;
  executionTimeMs: Number_66;
}
export interface Object_102 {
  tableName: String_384;
  rowCount: Number_64;
  status: String_385;
  error?: String_386;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The date to recover to
 */
export type String_387 = string;
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_35 = boolean;

export interface DATABASES_RECOVERYInput {
  date: String_387;
  _legacy?: Boolean_35;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_36 = boolean;

export interface DATABASES_RECOVERYOutput {
  success: Boolean_36;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The SQL query to run
 */
export type String_388 = string;
/**
 * The parameters to pass to the SQL query
 */
export type Array_48 = unknown[];
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_37 = boolean;

export interface DATABASES_RUN_SQLInput {
  sql: String_388;
  params?: Array_48;
  _legacy?: Boolean_37;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_38 = boolean;
export type Number_67 = number;
export type Number_68 = number;
export type Number_69 = number;
export type Number_70 = number;
export type Number_71 = number;
export type Boolean_39 = boolean;
export type String_389 = "WNAM" | "ENAM" | "WEUR" | "EEUR" | "APAC" | "OC";
export type Number_72 = number;
export type Number_73 = number;
export type Array_50 = unknown[];
export type Boolean_40 = boolean;
export type Array_49 = Object_103[];

export interface DATABASES_RUN_SQLOutput {
  result: Array_49;
}
export interface Object_103 {
  meta?: Object_104;
  results?: Array_50;
  success?: Boolean_40;
}
export interface Object_104 {
  changed_db?: Boolean_38;
  changes?: Number_67;
  duration?: Number_68;
  last_row_id?: Number_69;
  rows_read?: Number_70;
  rows_written?: Number_71;
  served_by_primary?: Boolean_39;
  served_by_region?: String_389;
  size_after?: Number_72;
  timings?: Object_105;
}
export interface Object_105 {
  sql_duration_ms?: Number_73;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_390 = string;
export type String_391 = string;
export type String_392 = string;
export type String_393 = string;
export type String_394 = string;
export type String_395 = string;
export type String_396 = string;
export type String_397 = string;
export type String_398 = string;
export type Array_52 = String_398[];
export type String_399 = string;
export type Array_53 = String_399[];
export type String_400 = "none" | "open" | "autoPin";
export type Array_51 = Object_106[];

export interface DECO_CHAT_VIEWS_LISTOutput {
  views: Array_51;
}
export interface Object_106 {
  id?: String_390;
  name?: String_391;
  title: String_392;
  description?: String_393;
  icon: String_394;
  url?: String_395;
  mimeTypePattern?: String_396;
  resourceName?: String_397;
  tools?: Array_52;
  rules?: Array_53;
  installBehavior?: String_400;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_401 = string;

export interface DECO_GET_APP_SCHEMAInput {
  appName: String_401;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_402 = string;
export type Array_54 = String_402[];

export interface DECO_GET_APP_SCHEMAOutput {
  schema?: unknown;
  scopes?: Array_54;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_403 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_404 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_405 = string;

export interface DECO_INTEGRATION_INSTALLInput {
  id: String_403;
  provider?: String_404;
  appId?: String_405;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_406 = string;

export interface DECO_INTEGRATION_INSTALLOutput {
  installationId: String_406;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_407 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_408 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_409 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_410 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput {
  appName: String_407;
  returnUrl: String_408;
  installId: String_409;
  provider?: String_410;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_411 = string;
/**
 * Whether to show contracts
 */
export type Boolean_41 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput {
  query?: String_411;
  showContracts?: Boolean_41;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_412 = string;
export type String_413 = string;
export type String_414 = string;
export type String_415 = string;
export type String_416 = string;
export type Null_36 = null;
export type String_417 = string;
export type Null_37 = null;
export type String_418 = string;
export type Null_38 = null;
export type String_419 = "HTTP";
export type String_420 = string;
export type String_421 = string;
export type String_422 = "SSE";
export type String_423 = string;
export type String_424 = string;
export type String_425 = string;
export type String_426 = "Websocket";
export type String_427 = string;
export type String_428 = string;
export type String_429 = "Deco";
export type String_430 = string;
export type String_431 = string;
export type String_432 = "INNATE";
export type String_433 = string;
export type String_434 = string;
export type Null_39 = null;
/**
 * The name of the tool
 */
export type String_435 = string;
/**
 * The description of the tool
 */
export type String_436 = string;
export type Array_56 = (Object_115 & Object_117)[];
export type Null_40 = null;
export type String_437 = string;
export type String_438 = string;
/**
 * The Integrations that match the query
 */
export type Array_55 = (Object_107 & Object_119)[];

export interface DECO_INTEGRATIONS_SEARCHOutput {
  integrations: Array_55;
}
export interface Object_107 {
  id: String_412;
  name: String_413;
  description?: String_414;
  icon?: String_415;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_416
      )
    | Null_36;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_417
      )
    | Null_37;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_418
      )
    | Null_38;
  connection: Object_108 | Object_109 | Object_111 | Object_112 | Object_113;
  metadata?: Object_114 | Null_39;
  tools?: Array_56 | Null_40;
}
export interface Object_108 {
  type: String_419;
  url: String_420;
  token?: String_421;
}
export interface Object_109 {
  type: String_422;
  url: String_423;
  token?: String_424;
  headers?: Object_110;
}
export interface Object_110 {
  [k: string]: String_425;
}
export interface Object_111 {
  type: String_426;
  url: String_427;
  token?: String_428;
}
export interface Object_112 {
  type: String_429;
  tenant: String_430;
  token?: String_431;
}
export interface Object_113 {
  type: String_432;
  name: String_433;
  workspace?: String_434;
}
export interface Object_114 {
  [k: string]: unknown;
}
export interface Object_115 {
  name: String_435;
  inputSchema: Object_116;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_116 {
  [k: string]: unknown;
}
export interface Object_117 {
  description?: String_436;
  outputSchema?: Object_118;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_118 {
  [k: string]: unknown;
}
export interface Object_119 {
  provider: String_437;
  friendlyName?: String_438;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name/title of the document
 */
export type String_439 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_440 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_441 = string;
export type String_442 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_57 = String_442[];

export interface DECO_RESOURCE_DOCUMENT_CREATEInput {
  data: Object_120;
}
/**
 * Resource data to create
 */
export interface Object_120 {
  name: String_439;
  description: String_440;
  content: String_441;
  tags?: Array_57;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_443 = string;
/**
 * The name/title of the document
 */
export type String_444 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_445 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_446 = string;
export type String_447 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_58 = String_447[];
/**
 * Creation timestamp
 */
export type String_448 = string;
/**
 * Last update timestamp
 */
export type String_449 = string;
/**
 * User who created the resource
 */
export type String_450 = string;

export interface DECO_RESOURCE_DOCUMENT_CREATEOutput {
  uri: String_443;
  data: Object_121;
  created_at?: String_448;
  updated_at?: String_449;
  created_by?: String_450;
}
/**
 * Created resource data
 */
export interface Object_121 {
  name: String_444;
  description: String_445;
  content: String_446;
  tags?: Array_58;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_451 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEInput {
  uri: String_451;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_42 = boolean;
/**
 * URI of the deleted resource
 */
export type String_452 = string;

export interface DECO_RESOURCE_DOCUMENT_DELETEOutput {
  success: Boolean_42;
  uri: String_452;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_453 = string;

export interface DECO_RESOURCE_DOCUMENT_READInput {
  uri: String_453;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_454 = string;
/**
 * The name/title of the document
 */
export type String_455 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_456 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_457 = string;
export type String_458 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_59 = String_458[];
/**
 * Creation timestamp
 */
export type String_459 = string;
/**
 * Last update timestamp
 */
export type String_460 = string;
/**
 * User who created the resource
 */
export type String_461 = string;
/**
 * User who last updated the resource
 */
export type String_462 = string;

export interface DECO_RESOURCE_DOCUMENT_READOutput {
  uri: String_454;
  data: Object_122;
  created_at?: String_459;
  updated_at?: String_460;
  created_by?: String_461;
  updated_by?: String_462;
}
/**
 * Resource data
 */
export interface Object_122 {
  name: String_455;
  description: String_456;
  content: String_457;
  tags?: Array_59;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_463 = string;
/**
 * Page number (1-based)
 */
export type Integer_3 = number;
/**
 * Number of items per page
 */
export type Integer_4 = number;
/**
 * Field to sort by
 */
export type String_464 = string;
/**
 * Sort order
 */
export type String_465 = "asc" | "desc";

export interface DECO_RESOURCE_DOCUMENT_SEARCHInput {
  term?: String_463;
  page?: Integer_3;
  pageSize?: Integer_4;
  filters?: Object_123;
  sortBy?: String_464;
  sortOrder?: String_465;
}
/**
 * Additional filters to apply
 */
export interface Object_123 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_466 = string;
export type String_467 = string;
/**
 * Description of the resource
 */
export type String_468 = string;
/**
 * URL to the resource icon
 */
export type String_469 = string;
/**
 * The name/title of the document
 */
export type String_470 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_471 = string;
/**
 * Creation timestamp
 */
export type String_472 = string;
/**
 * Last update timestamp
 */
export type String_473 = string;
/**
 * User who created the resource
 */
export type String_474 = string;
/**
 * User who last updated the resource
 */
export type String_475 = string;
/**
 * Array of matching resources
 */
export type Array_60 = Object_124[];
/**
 * Total number of matching resources
 */
export type Integer_5 = number;
/**
 * Current page number
 */
export type Integer_6 = number;
/**
 * Number of items per page
 */
export type Integer_7 = number;
/**
 * Total number of pages
 */
export type Integer_8 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_43 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_44 = boolean;

export interface DECO_RESOURCE_DOCUMENT_SEARCHOutput {
  items: Array_60;
  totalCount: Integer_5;
  page: Integer_6;
  pageSize: Integer_7;
  totalPages: Integer_8;
  hasNextPage: Boolean_43;
  hasPreviousPage: Boolean_44;
}
export interface Object_124 {
  uri: String_466;
  /**
   * Resource data with required name
   */
  data: Object_125 & Object_126;
  created_at?: String_472;
  updated_at?: String_473;
  created_by?: String_474;
  updated_by?: String_475;
}
export interface Object_125 {
  name: String_467;
  description?: String_468;
  icon?: String_469;
}
export interface Object_126 {
  name: String_470;
  description: String_471;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_476 = string;
/**
 * The name/title of the document
 */
export type String_477 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_478 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_479 = string;
export type String_480 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_61 = String_480[];

export interface DECO_RESOURCE_DOCUMENT_UPDATEInput {
  uri: String_476;
  data: Object_127;
}
/**
 * Updated resource data
 */
export interface Object_127 {
  name: String_477;
  description: String_478;
  content: String_479;
  tags?: Array_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_481 = string;
/**
 * The name/title of the document
 */
export type String_482 = string;
/**
 * A brief description of the document's purpose or content
 */
export type String_483 = string;
/**
 * The document content in markdown format. Supports standard markdown syntax including headers, lists, links, code blocks, etc.
 */
export type String_484 = string;
export type String_485 = string;
/**
 * Optional tags for categorizing and searching documents
 */
export type Array_62 = String_485[];
/**
 * Original creation timestamp
 */
export type String_486 = string;
/**
 * Last update timestamp
 */
export type String_487 = string;
/**
 * User who originally created the resource
 */
export type String_488 = string;
/**
 * User who last updated the resource
 */
export type String_489 = string;

export interface DECO_RESOURCE_DOCUMENT_UPDATEOutput {
  uri: String_481;
  data: Object_128;
  created_at?: String_486;
  updated_at?: String_487;
  created_by?: String_488;
  updated_by?: String_489;
}
/**
 * Updated resource data
 */
export interface Object_128 {
  name: String_482;
  description: String_483;
  content: String_484;
  tags?: Array_62;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_490 = string;
/**
 * The description of the tool
 */
export type String_491 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_492 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_493 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_63 = Object_132[];

export interface DECO_RESOURCE_TOOL_CREATEInput {
  data: Object_129;
}
/**
 * Resource data to create
 */
export interface Object_129 {
  name: String_490;
  description: String_491;
  inputSchema: Object_130;
  outputSchema: Object_131;
  execute: String_492;
  dependencies?: Array_63;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_130 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_131 {
  [k: string]: unknown;
}
export interface Object_132 {
  integrationId: String_493;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_494 = string;
/**
 * The name of the tool
 */
export type String_495 = string;
/**
 * The description of the tool
 */
export type String_496 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_497 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_498 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_64 = Object_136[];
/**
 * Creation timestamp
 */
export type String_499 = string;
/**
 * Last update timestamp
 */
export type String_500 = string;
/**
 * User who created the resource
 */
export type String_501 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput {
  uri: String_494;
  data: Object_133;
  created_at?: String_499;
  updated_at?: String_500;
  created_by?: String_501;
}
/**
 * Created resource data
 */
export interface Object_133 {
  name: String_495;
  description: String_496;
  inputSchema: Object_134;
  outputSchema: Object_135;
  execute: String_497;
  dependencies?: Array_64;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_134 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_135 {
  [k: string]: unknown;
}
export interface Object_136 {
  integrationId: String_498;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_502 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput {
  uri: String_502;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_45 = boolean;
/**
 * URI of the deleted resource
 */
export type String_503 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput {
  success: Boolean_45;
  uri: String_503;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_504 = string;

export interface DECO_RESOURCE_TOOL_READInput {
  uri: String_504;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_505 = string;
/**
 * The name of the tool
 */
export type String_506 = string;
/**
 * The description of the tool
 */
export type String_507 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_508 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_509 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_65 = Object_140[];
/**
 * Creation timestamp
 */
export type String_510 = string;
/**
 * Last update timestamp
 */
export type String_511 = string;
/**
 * User who created the resource
 */
export type String_512 = string;
/**
 * User who last updated the resource
 */
export type String_513 = string;

export interface DECO_RESOURCE_TOOL_READOutput {
  uri: String_505;
  data: Object_137;
  created_at?: String_510;
  updated_at?: String_511;
  created_by?: String_512;
  updated_by?: String_513;
}
/**
 * Resource data
 */
export interface Object_137 {
  name: String_506;
  description: String_507;
  inputSchema: Object_138;
  outputSchema: Object_139;
  execute: String_508;
  dependencies?: Array_65;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_138 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_139 {
  [k: string]: unknown;
}
export interface Object_140 {
  integrationId: String_509;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_514 = string;
/**
 * Page number (1-based)
 */
export type Integer_9 = number;
/**
 * Number of items per page
 */
export type Integer_10 = number;
/**
 * Field to sort by
 */
export type String_515 = string;
/**
 * Sort order
 */
export type String_516 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput {
  term?: String_514;
  page?: Integer_9;
  pageSize?: Integer_10;
  filters?: Object_141;
  sortBy?: String_515;
  sortOrder?: String_516;
}
/**
 * Additional filters to apply
 */
export interface Object_141 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_517 = string;
export type String_518 = string;
/**
 * Description of the resource
 */
export type String_519 = string;
/**
 * URL to the resource icon
 */
export type String_520 = string;
/**
 * The name of the tool
 */
export type String_521 = string;
/**
 * The description of the tool
 */
export type String_522 = string;
/**
 * Creation timestamp
 */
export type String_523 = string;
/**
 * Last update timestamp
 */
export type String_524 = string;
/**
 * User who created the resource
 */
export type String_525 = string;
/**
 * User who last updated the resource
 */
export type String_526 = string;
/**
 * Array of matching resources
 */
export type Array_66 = Object_142[];
/**
 * Total number of matching resources
 */
export type Integer_11 = number;
/**
 * Current page number
 */
export type Integer_12 = number;
/**
 * Number of items per page
 */
export type Integer_13 = number;
/**
 * Total number of pages
 */
export type Integer_14 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_46 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_47 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput {
  items: Array_66;
  totalCount: Integer_11;
  page: Integer_12;
  pageSize: Integer_13;
  totalPages: Integer_14;
  hasNextPage: Boolean_46;
  hasPreviousPage: Boolean_47;
}
export interface Object_142 {
  uri: String_517;
  /**
   * Resource data with required name
   */
  data: Object_143 & Object_144;
  created_at?: String_523;
  updated_at?: String_524;
  created_by?: String_525;
  updated_by?: String_526;
}
export interface Object_143 {
  name: String_518;
  description?: String_519;
  icon?: String_520;
}
export interface Object_144 {
  name: String_521;
  description: String_522;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_527 = string;
/**
 * The name of the tool
 */
export type String_528 = string;
/**
 * The description of the tool
 */
export type String_529 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_530 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_531 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_67 = Object_148[];

export interface DECO_RESOURCE_TOOL_UPDATEInput {
  uri: String_527;
  data: Object_145;
}
/**
 * Updated resource data
 */
export interface Object_145 {
  name: String_528;
  description: String_529;
  inputSchema: Object_146;
  outputSchema: Object_147;
  execute: String_530;
  dependencies?: Array_67;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_146 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_147 {
  [k: string]: unknown;
}
export interface Object_148 {
  integrationId: String_531;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_532 = string;
/**
 * The name of the tool
 */
export type String_533 = string;
/**
 * The description of the tool
 */
export type String_534 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_535 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_536 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_68 = Object_152[];
/**
 * Original creation timestamp
 */
export type String_537 = string;
/**
 * Last update timestamp
 */
export type String_538 = string;
/**
 * User who originally created the resource
 */
export type String_539 = string;
/**
 * User who last updated the resource
 */
export type String_540 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput {
  uri: String_532;
  data: Object_149;
  created_at?: String_537;
  updated_at?: String_538;
  created_by?: String_539;
  updated_by?: String_540;
}
/**
 * Updated resource data
 */
export interface Object_149 {
  name: String_533;
  description: String_534;
  inputSchema: Object_150;
  outputSchema: Object_151;
  execute: String_535;
  dependencies?: Array_68;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_150 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_151 {
  [k: string]: unknown;
}
export interface Object_152 {
  integrationId: String_536;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_541 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_542 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_69 = [Object_156, ...Object_156[]];
/**
 * The unique name of the step within the workflow
 */
export type String_543 = string;
/**
 * A clear description of what this step does
 */
export type String_544 = string;
/**
 * The prompt used to generate the step
 */
export type String_545 = string;
/**
 * Status of the step execution
 */
export type String_546 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_547 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_548 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_70 = Object_161[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_15 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_16 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_549 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_74 = number;
/**
 * The authorization token for the workflow
 */
export type String_550 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput {
  data: Object_153;
}
/**
 * Resource data to create
 */
export interface Object_153 {
  name: String_541;
  description: String_542;
  inputSchema: Object_154;
  outputSchema: Object_155;
  steps: Array_69;
  authorization?: Object_164;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_154 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_155 {
  [k: string]: unknown;
}
export interface Object_156 {
  name: String_543;
  description: String_544;
  prompt?: String_545;
  inputSchema: Object_157;
  outputSchema: Object_158;
  input: Object_159;
  output: Object_160;
  status?: String_546;
  execute: String_547;
  dependencies?: Array_70;
  options?: Object_162;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_157 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_158 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_159 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_160 {
  [k: string]: unknown;
}
export interface Object_161 {
  integrationId: String_548;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_162 {
  retries?: Object_163;
  timeout?: Number_74;
}
export interface Object_163 {
  limit?: Integer_15;
  delay?: Integer_16;
  backoff?: String_549;
}
export interface Object_164 {
  token: String_550;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_551 = string;
/**
 * The unique name of the workflow
 */
export type String_552 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_553 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_71 = [Object_168, ...Object_168[]];
/**
 * The unique name of the step within the workflow
 */
export type String_554 = string;
/**
 * A clear description of what this step does
 */
export type String_555 = string;
/**
 * The prompt used to generate the step
 */
export type String_556 = string;
/**
 * Status of the step execution
 */
export type String_557 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_558 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_559 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_72 = Object_173[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_17 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_18 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_560 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_75 = number;
/**
 * The authorization token for the workflow
 */
export type String_561 = string;
/**
 * Creation timestamp
 */
export type String_562 = string;
/**
 * Last update timestamp
 */
export type String_563 = string;
/**
 * User who created the resource
 */
export type String_564 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput {
  uri: String_551;
  data: Object_165;
  created_at?: String_562;
  updated_at?: String_563;
  created_by?: String_564;
}
/**
 * Created resource data
 */
export interface Object_165 {
  name: String_552;
  description: String_553;
  inputSchema: Object_166;
  outputSchema: Object_167;
  steps: Array_71;
  authorization?: Object_176;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_166 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_167 {
  [k: string]: unknown;
}
export interface Object_168 {
  name: String_554;
  description: String_555;
  prompt?: String_556;
  inputSchema: Object_169;
  outputSchema: Object_170;
  input: Object_171;
  output: Object_172;
  status?: String_557;
  execute: String_558;
  dependencies?: Array_72;
  options?: Object_174;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_169 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_170 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_171 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_172 {
  [k: string]: unknown;
}
export interface Object_173 {
  integrationId: String_559;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_174 {
  retries?: Object_175;
  timeout?: Number_75;
}
export interface Object_175 {
  limit?: Integer_17;
  delay?: Integer_18;
  backoff?: String_560;
}
export interface Object_176 {
  token: String_561;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_565 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput {
  uri: String_565;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_48 = boolean;
/**
 * URI of the deleted resource
 */
export type String_566 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput {
  success: Boolean_48;
  uri: String_566;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_567 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput {
  uri: String_567;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_568 = string;
/**
 * The unique name of the workflow
 */
export type String_569 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_570 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_73 = [Object_180, ...Object_180[]];
/**
 * The unique name of the step within the workflow
 */
export type String_571 = string;
/**
 * A clear description of what this step does
 */
export type String_572 = string;
/**
 * The prompt used to generate the step
 */
export type String_573 = string;
/**
 * Status of the step execution
 */
export type String_574 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_575 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_576 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_74 = Object_185[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_19 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_20 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_577 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_76 = number;
/**
 * The authorization token for the workflow
 */
export type String_578 = string;
/**
 * Creation timestamp
 */
export type String_579 = string;
/**
 * Last update timestamp
 */
export type String_580 = string;
/**
 * User who created the resource
 */
export type String_581 = string;
/**
 * User who last updated the resource
 */
export type String_582 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput {
  uri: String_568;
  data: Object_177;
  created_at?: String_579;
  updated_at?: String_580;
  created_by?: String_581;
  updated_by?: String_582;
}
/**
 * Resource data
 */
export interface Object_177 {
  name: String_569;
  description: String_570;
  inputSchema: Object_178;
  outputSchema: Object_179;
  steps: Array_73;
  authorization?: Object_188;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_178 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_179 {
  [k: string]: unknown;
}
export interface Object_180 {
  name: String_571;
  description: String_572;
  prompt?: String_573;
  inputSchema: Object_181;
  outputSchema: Object_182;
  input: Object_183;
  output: Object_184;
  status?: String_574;
  execute: String_575;
  dependencies?: Array_74;
  options?: Object_186;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_181 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_182 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_183 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_184 {
  [k: string]: unknown;
}
export interface Object_185 {
  integrationId: String_576;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_186 {
  retries?: Object_187;
  timeout?: Number_76;
}
export interface Object_187 {
  limit?: Integer_19;
  delay?: Integer_20;
  backoff?: String_577;
}
export interface Object_188 {
  token: String_578;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_583 = string;
/**
 * Page number (1-based)
 */
export type Integer_21 = number;
/**
 * Number of items per page
 */
export type Integer_22 = number;
/**
 * Field to sort by
 */
export type String_584 = string;
/**
 * Sort order
 */
export type String_585 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput {
  term?: String_583;
  page?: Integer_21;
  pageSize?: Integer_22;
  filters?: Object_189;
  sortBy?: String_584;
  sortOrder?: String_585;
}
/**
 * Additional filters to apply
 */
export interface Object_189 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_586 = string;
export type String_587 = string;
/**
 * Description of the resource
 */
export type String_588 = string;
/**
 * URL to the resource icon
 */
export type String_589 = string;
/**
 * The unique name of the workflow
 */
export type String_590 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_591 = string;
/**
 * Creation timestamp
 */
export type String_592 = string;
/**
 * Last update timestamp
 */
export type String_593 = string;
/**
 * User who created the resource
 */
export type String_594 = string;
/**
 * User who last updated the resource
 */
export type String_595 = string;
/**
 * Array of matching resources
 */
export type Array_75 = Object_190[];
/**
 * Total number of matching resources
 */
export type Integer_23 = number;
/**
 * Current page number
 */
export type Integer_24 = number;
/**
 * Number of items per page
 */
export type Integer_25 = number;
/**
 * Total number of pages
 */
export type Integer_26 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_49 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_50 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput {
  items: Array_75;
  totalCount: Integer_23;
  page: Integer_24;
  pageSize: Integer_25;
  totalPages: Integer_26;
  hasNextPage: Boolean_49;
  hasPreviousPage: Boolean_50;
}
export interface Object_190 {
  uri: String_586;
  /**
   * Resource data with required name
   */
  data: Object_191 & Object_192;
  created_at?: String_592;
  updated_at?: String_593;
  created_by?: String_594;
  updated_by?: String_595;
}
export interface Object_191 {
  name: String_587;
  description?: String_588;
  icon?: String_589;
}
export interface Object_192 {
  name: String_590;
  description: String_591;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_596 = string;
/**
 * The unique name of the workflow
 */
export type String_597 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_598 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_76 = [Object_196, ...Object_196[]];
/**
 * The unique name of the step within the workflow
 */
export type String_599 = string;
/**
 * A clear description of what this step does
 */
export type String_600 = string;
/**
 * The prompt used to generate the step
 */
export type String_601 = string;
/**
 * Status of the step execution
 */
export type String_602 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_603 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_604 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_77 = Object_201[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_27 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_28 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_605 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_77 = number;
/**
 * The authorization token for the workflow
 */
export type String_606 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput {
  uri: String_596;
  data: Object_193;
}
/**
 * Updated resource data
 */
export interface Object_193 {
  name: String_597;
  description: String_598;
  inputSchema: Object_194;
  outputSchema: Object_195;
  steps: Array_76;
  authorization?: Object_204;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_194 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_195 {
  [k: string]: unknown;
}
export interface Object_196 {
  name: String_599;
  description: String_600;
  prompt?: String_601;
  inputSchema: Object_197;
  outputSchema: Object_198;
  input: Object_199;
  output: Object_200;
  status?: String_602;
  execute: String_603;
  dependencies?: Array_77;
  options?: Object_202;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_197 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_198 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_199 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_200 {
  [k: string]: unknown;
}
export interface Object_201 {
  integrationId: String_604;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_202 {
  retries?: Object_203;
  timeout?: Number_77;
}
export interface Object_203 {
  limit?: Integer_27;
  delay?: Integer_28;
  backoff?: String_605;
}
export interface Object_204 {
  token: String_606;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_607 = string;
/**
 * The unique name of the workflow
 */
export type String_608 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_609 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_78 = [Object_208, ...Object_208[]];
/**
 * The unique name of the step within the workflow
 */
export type String_610 = string;
/**
 * A clear description of what this step does
 */
export type String_611 = string;
/**
 * The prompt used to generate the step
 */
export type String_612 = string;
/**
 * Status of the step execution
 */
export type String_613 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_614 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_615 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_79 = Object_213[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_29 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_30 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_616 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_78 = number;
/**
 * The authorization token for the workflow
 */
export type String_617 = string;
/**
 * Original creation timestamp
 */
export type String_618 = string;
/**
 * Last update timestamp
 */
export type String_619 = string;
/**
 * User who originally created the resource
 */
export type String_620 = string;
/**
 * User who last updated the resource
 */
export type String_621 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput {
  uri: String_607;
  data: Object_205;
  created_at?: String_618;
  updated_at?: String_619;
  created_by?: String_620;
  updated_by?: String_621;
}
/**
 * Updated resource data
 */
export interface Object_205 {
  name: String_608;
  description: String_609;
  inputSchema: Object_206;
  outputSchema: Object_207;
  steps: Array_78;
  authorization?: Object_216;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_206 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_207 {
  [k: string]: unknown;
}
export interface Object_208 {
  name: String_610;
  description: String_611;
  prompt?: String_612;
  inputSchema: Object_209;
  outputSchema: Object_210;
  input: Object_211;
  output: Object_212;
  status?: String_613;
  execute: String_614;
  dependencies?: Array_79;
  options?: Object_214;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_209 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_210 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_211 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_212 {
  [k: string]: unknown;
}
export interface Object_213 {
  integrationId: String_615;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_214 {
  retries?: Object_215;
  timeout?: Number_78;
}
export interface Object_215 {
  limit?: Integer_29;
  delay?: Integer_30;
  backoff?: String_616;
}
export interface Object_216 {
  token: String_617;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_622 = string;
/**
 * The token to use for the tool execution
 */
export type String_623 = string;

export interface DECO_TOOL_CALL_TOOLInput {
  uri: String_622;
  input: Object_217;
  authorization?: String_623;
}
/**
 * The input of the code
 */
export interface Object_217 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_624 = "log" | "warn" | "error";
export type String_625 = string;
/**
 * Console logs from the execution
 */
export type Array_80 = Object_218[];

export interface DECO_TOOL_CALL_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_80;
}
export interface Object_218 {
  type: String_624;
  content: String_625;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_626 = string;
/**
 * The description of the tool
 */
export type String_627 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_628 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_629 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_81 = Object_222[];
/**
 * The token to use for the tool execution
 */
export type String_630 = string;

export interface DECO_TOOL_RUN_TOOLInput {
  tool: Object_219;
  input: Object_223;
  authorization?: String_630;
}
export interface Object_219 {
  name: String_626;
  description: String_627;
  inputSchema: Object_220;
  outputSchema: Object_221;
  execute: String_628;
  dependencies?: Array_81;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_220 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_221 {
  [k: string]: unknown;
}
export interface Object_222 {
  integrationId: String_629;
}
/**
 * The input of the code
 */
export interface Object_223 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_631 = "log" | "warn" | "error";
export type String_632 = string;
/**
 * Console logs from the execution
 */
export type Array_82 = Object_224[];

export interface DECO_TOOL_RUN_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_82;
}
export interface Object_224 {
  type: String_631;
  content: String_632;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_633 = string;

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILInput {
  resource: String_633;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_634 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_635 = string;
export type String_636 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_83 = String_636[];

export interface DECO_VIEW_RENDER_DOCUMENT_DETAILOutput {
  url: String_634;
  prompt?: String_635;
  tools?: Array_83;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_637 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput {
  resource: String_637;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_638 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_639 = string;
export type String_640 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_84 = String_640[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput {
  url: String_638;
  prompt?: String_639;
  tools?: Array_84;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_641 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput {
  resource: String_641;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_642 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_643 = string;
export type String_644 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_85 = String_644[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput {
  url: String_642;
  prompt?: String_643;
  tools?: Array_85;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID of the workflow run
 */
export type String_645 = string;

export interface DECO_WORKFLOW_GET_STATUSInput {
  runId: String_645;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The current status of the workflow run
 */
export type String_646 = "pending" | "running" | "completed" | "failed";
/**
 * The name of the step currently being executed (if running)
 */
export type String_647 = string;
/**
 * Error message if the workflow failed
 */
export type String_648 = string;
export type String_649 = "log" | "warn" | "error";
export type String_650 = string;
/**
 * Console logs from the execution
 */
export type Array_86 = Object_226[];
/**
 * When the workflow started (timestamp)
 */
export type Number_79 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_80 = number;

export interface DECO_WORKFLOW_GET_STATUSOutput {
  status: String_646;
  currentStep?: String_647;
  stepResults: Object_225;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_648;
  logs: Array_86;
  startTime: Number_79;
  endTime?: Number_80;
}
/**
 * Results from completed steps
 */
export interface Object_225 {
  [k: string]: unknown;
}
export interface Object_226 {
  type: String_649;
  content: String_650;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_651 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_652 = string;

export interface DECO_WORKFLOW_STARTInput {
  uri: String_651;
  input: Object_227;
  stopAfter?: String_652;
  state?: Object_228;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_227 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_228 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_653 = string;
/**
 * Error message if workflow start failed
 */
export type String_654 = string;

export interface DECO_WORKFLOW_STARTOutput {
  runId?: String_653;
  error?: String_654;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to delete
 */
export type String_655 = string;

export interface DELETE_BRANCHInput {
  branchName: String_655;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_51 = boolean;
export type String_656 = string;
export type Number_81 = number;

export interface DELETE_BRANCHOutput {
  deleted: Boolean_51;
  branchName: String_656;
  filesDeleted?: Number_81;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_657 = string;
/**
 * The file path within the branch
 */
export type String_658 = string;

export interface DELETE_FILEInput {
  branch?: String_657;
  path: String_658;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_52 = boolean;

export interface DELETE_FILEOutput {
  deleted: Boolean_52;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The base branch to compare from (defaults to 'main')
 */
export type String_659 = string;
/**
 * The branch to compare against
 */
export type String_660 = string;

export interface DIFF_BRANCHInput {
  baseBranch?: String_659;
  compareBranch: String_660;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_661 = string;
export type String_662 = "added" | "modified" | "deleted";
export type String_663 = string;
export type String_664 = string;
export type Array_87 = Object_229[];

export interface DIFF_BRANCHOutput {
  differences: Array_87;
}
export interface Object_229 {
  path: String_661;
  type: String_662;
  baseAddress?: String_663;
  compareAddress?: String_664;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_665 = string;

export interface FS_DELETEInput {
  path: String_665;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The root directory to list files from
 */
export type String_666 = string;

export interface FS_LISTInput {
  prefix: String_666;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_88 = unknown[];

export interface FS_LISTOutput {
  items: Array_88;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_667 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_82 = number;

export interface FS_READInput {
  path: String_667;
  expiresIn?: Number_82;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to read the file from
 */
export type String_668 = string;

export interface FS_READOutput {
  url: String_668;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_669 = string;

export interface FS_READ_METADATAInput {
  path: String_669;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_READ_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_670 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_83 = number;
/**
 * Content-Type for the file. This is required.
 */
export type String_671 = string;

export interface FS_WRITEInput {
  path: String_670;
  expiresIn?: Number_83;
  contentType: String_671;
  metadata?: Object_230;
}
/**
 * Metadata to be added to the file
 */
export interface Object_230 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to upload the file to
 */
export type String_672 = string;

export interface FS_WRITEOutput {
  url: String_672;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_673 = "day" | "week" | "month";

export interface GET_AGENTS_USAGEInput {
  range: String_673;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_674 = string;
export type String_675 = string;
export type StringNull_16 = String_676 | Null_41;
export type String_676 = string;
export type Null_41 = null;
export type Number_84 = number;
export type String_677 = string;
export type String_678 = string;
export type Number_85 = number;
export type StringNull_17 = String_679 | Null_42;
export type String_679 = string;
export type Null_42 = null;
export type StringNull_18 = String_680 | Null_43;
export type String_680 = string;
export type Null_43 = null;
export type Array_90 = Object_232[];
export type Array_89 = Object_231[];

export interface GET_AGENTS_USAGEOutput {
  total: String_674;
  items: Array_89;
}
export interface Object_231 {
  id: String_675;
  label?: StringNull_16;
  total: Number_84;
  transactions: Array_90;
}
export interface Object_232 {
  id: String_677;
  timestamp: String_678;
  amount: Number_85;
  agentId?: StringNull_17;
  generatedBy?: StringNull_18;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_681 = "day" | "week" | "month" | "year";

export interface GET_BILLING_HISTORYInput {
  range: String_681;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_682 = string;
export type String_683 = string;
export type String_684 = string;
export type String_685 = string;
export type StringNull_19 = String_686 | Null_44;
export type String_686 = string;
export type Null_44 = null;
export type StringNull_20 = String_687 | Null_45;
export type String_687 = string;
export type Null_45 = null;
export type Array_91 = Object_233[];

export interface GET_BILLING_HISTORYOutput {
  items: Array_91;
}
export interface Object_233 {
  id: String_682;
  amount: String_683;
  timestamp: String_684;
  type: String_685;
  contractId?: StringNull_19;
  callerApp?: StringNull_20;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_688 = "day" | "week" | "month" | "year";

export interface GET_CONTRACTS_COMMITSInput {
  range: String_688;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_689 = string;
export type Number_86 = number;
export type String_690 = string;
export type StringNull_21 = String_691 | Null_46;
export type String_691 = string;
export type Null_46 = null;
export type String_692 = string;
export type Number_87 = number;
export type Array_93 = Object_235[];
export type String_693 = string;
export type String_694 = string;
export type Array_92 = Object_234[];

export interface GET_CONTRACTS_COMMITSOutput {
  items: Array_92;
}
export interface Object_234 {
  id: String_689;
  amount: Number_86;
  contractId: String_690;
  callerApp?: StringNull_21;
  clauses: Array_93;
  timestamp: String_693;
  type: String_694;
}
export interface Object_235 {
  clauseId: String_692;
  amount: Number_87;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_695 = "day" | "week" | "month";

export interface GET_THREADS_USAGEInput {
  range: String_695;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_THREADS_USAGEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WALLET_ACCOUNTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_696 = string;
export type String_697 = string;

export interface GET_WALLET_ACCOUNTOutput {
  balance: String_696;
  balanceExact: String_697;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_698 = string;

export interface HOSTING_APP_DELETEInput {
  appSlug: String_698;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, force the deployment even if there are breaking changes
 */
export type Boolean_53 = boolean;
/**
 * If true, promotes the deployment to production routes. The deployment will be available at a unique URL but won't replace the production version.
 */
export type Boolean_54 = boolean;
/**
 * The slug identifier for the app, if not provided, you should use the wrangler.toml file to determine the slug (using the name field).
 */
export type String_699 = string;
export type String_700 = string;
export type String_701 = string;
export type Boolean_55 = boolean;
/**
 * An array of files with their paths and contents. Must include main.ts as entrypoint and package.json for dependencies
 */
export type Array_94 = Object_236[];
export type String_702 = string;
/**
 * If false, skip the bundler step and upload the files as-is. Default: true (bundle files)
 */
export type Boolean_56 = boolean;
/**
 * Whether the app should be unlisted in the registry. Default: true (unlisted)
 */
export type Boolean_57 = boolean;

export interface HOSTING_APP_DEPLOYInput {
  force?: Boolean_53;
  promote?: Boolean_54;
  appSlug?: String_699;
  files: Array_94;
  envVars?: Object_237;
  bundle?: Boolean_56;
  unlisted?: Boolean_57;
}
export interface Object_236 {
  path: String_700;
  content: String_701;
  asset?: Boolean_55;
}
/**
 * An optional object of environment variables to be set on the worker
 */
export interface Object_237 {
  [k: string]: String_702;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The entrypoint of the app
 */
export type String_703 = string;
export type String_704 = string;
/**
 * The hosts of the app
 */
export type Array_95 = String_704[];
/**
 * The id of the app
 */
export type String_705 = string;
/**
 * The workspace of the app
 */
export type String_706 = string;
/**
 * The deployment id of the app
 */
export type String_707 = string;

export interface HOSTING_APP_DEPLOYOutput {
  entrypoint: String_703;
  hosts: Array_95;
  id: String_705;
  workspace: String_706;
  deploymentId?: String_707;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_708 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTInput {
  appSlug: String_708;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID
 */
export type String_709 = string;
/**
 * The Cloudflare worker ID
 */
export type StringNull_22 = String_710 | Null_47;
export type String_710 = string;
export type Null_47 = null;
/**
 * The deployment entrypoint URL
 */
export type String_711 = string;
/**
 * When the deployment was created
 */
export type String_712 = string;
/**
 * When the deployment was last updated
 */
export type String_713 = string;
export type Array_96 = Object_238[];
export type String_714 = string;
export type String_715 = string;
export type String_716 = string;
export type String_717 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTOutput {
  deployments: Array_96;
  app: Object_239;
}
export interface Object_238 {
  id: String_709;
  cloudflare_deployment_id: StringNull_22;
  entrypoint: String_711;
  created_at: String_712;
  updated_at: String_713;
}
export interface Object_239 {
  id: String_714;
  slug: String_715;
  workspace: String_716;
  project_id: String_717;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_718 = string;

export interface HOSTING_APP_INFOInput {
  appSlug: String_718;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_INFOOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_719 = string;
/**
 * List of unique workflow names
 */
export type Array_97 = String_719[];

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESOutput {
  workflowNames: Array_97;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_88 = number;
export type Number_89 = number;
/**
 * Optional: The name of the workflow to list runs for. If not provided, shows recent runs from any workflow.
 */
export type String_720 = string;
export type String_721 = string;
export type String_722 = string;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSInput {
  page?: Number_88;
  per_page?: Number_89;
  workflowName?: String_720;
  fromDate?: String_721;
  toDate?: String_722;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_723 = string;
export type String_724 = string;
export type Number_90 = number;
export type NumberNull_7 = Number_91 | Null_48;
export type Number_91 = number;
export type Null_48 = null;
export type String_725 = string;
/**
 * The workflow runs
 */
export type Array_98 = Object_240[];
export type Number_92 = number;
export type Number_93 = number;
export type Number_94 = number;
export type Number_95 = number;
export type Number_96 = number;
export type Number_97 = number;
export type Number_98 = number;
export type String_726 = string;
export type Null_49 = null;
export type Number_99 = number;
export type String_727 = string;
export type Null_50 = null;
export type Number_100 = number;
export type Number_101 = number;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSOutput {
  runs: Array_98;
  stats: Object_241;
  pagination: Object_244;
}
export interface Object_240 {
  workflowName: String_723;
  runId: String_724;
  createdAt: Number_90;
  updatedAt?: NumberNull_7;
  status: String_725;
}
/**
 * Workflow statistics
 */
export interface Object_241 {
  totalRuns: Number_92;
  successCount: Number_93;
  errorCount: Number_94;
  runningCount: Number_95;
  pendingCount: Number_96;
  successRate: Number_97;
  firstRun: Object_242 | Null_49;
  lastRun: Object_243 | Null_50;
}
export interface Object_242 {
  date: Number_98;
  status: String_726;
}
export interface Object_243 {
  date: Number_99;
  status: String_727;
}
export interface Object_244 {
  page?: Number_100;
  per_page?: Number_101;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The instance ID of the workflow. To get this, use the HOSTING_APP_WORKFLOWS_INSTANCES_LIST or HOSTING_APP_WORKFLOWS_START tool.
 */
export type String_728 = string;
export type String_729 = string;

export interface HOSTING_APP_WORKFLOWS_STATUSInput {
  instanceId: String_728;
  workflowName: String_729;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_STATUSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APPS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_730 = string;
export type String_731 = string;
export type Array_99 = Object_245[];

export interface HOSTING_APPS_LISTOutput {
  items: Array_99;
}
export interface Object_245 {
  slug?: String_730;
  entrypoint: String_731;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID to promote
 */
export type String_732 = string;
/**
 * Route pattern to promote the deployment to (can be custom domain or .deco.page)
 */
export type String_733 = string;

export interface HOSTING_APPS_PROMOTEInput {
  deploymentId: String_732;
  routePattern: String_733;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the promotion was successful
 */
export type Boolean_58 = boolean;
/**
 * The route pattern that was promoted
 */
export type String_734 = string;

export interface HOSTING_APPS_PROMOTEOutput {
  success: Boolean_58;
  promotedRoute: String_734;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_735 = string;
export type String_736 = "HTTP";
export type String_737 = string;
export type String_738 = string;
export type String_739 = "SSE";
export type String_740 = string;
export type String_741 = string;
export type String_742 = string;
export type String_743 = "Websocket";
export type String_744 = string;
export type String_745 = string;
export type String_746 = "Deco";
export type String_747 = string;
export type String_748 = string;
export type String_749 = "INNATE";
export type String_750 = string;
export type String_751 = string;
export type String_752 = string;
export type Integer_31 = number;
export type String_753 = string;

export interface INTEGRATIONS_CALL_TOOLInput_1 {
  id?: String_735;
  connection?: Object_246 | Object_247 | Object_249 | Object_250 | Object_251;
  params: Object_252;
}
export interface Object_246 {
  type: String_736;
  url: String_737;
  token?: String_738;
}
export interface Object_247 {
  type: String_739;
  url: String_740;
  token?: String_741;
  headers?: Object_248;
}
export interface Object_248 {
  [k: string]: String_742;
}
export interface Object_249 {
  type: String_743;
  url: String_744;
  token?: String_745;
}
export interface Object_250 {
  type: String_746;
  tenant: String_747;
  token?: String_748;
}
export interface Object_251 {
  type: String_749;
  name: String_750;
  workspace?: String_751;
}
export interface Object_252 {
  _meta?: Object_253;
  name: String_753;
  arguments?: Object_254;
  [k: string]: unknown;
}
export interface Object_253 {
  progressToken?: String_752 | Integer_31;
  [k: string]: unknown;
}
export interface Object_254 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_754 = string;
export type String_755 = string;
export type String_756 = string;
export type String_757 = string;
export type String_758 = string;
export type Null_51 = null;
export type String_759 = string;
export type Null_52 = null;
export type String_760 = "HTTP";
export type String_761 = string;
export type String_762 = string;
export type String_763 = "SSE";
export type String_764 = string;
export type String_765 = string;
export type String_766 = string;
export type String_767 = "Websocket";
export type String_768 = string;
export type String_769 = string;
export type String_770 = "Deco";
export type String_771 = string;
export type String_772 = string;
export type String_773 = "INNATE";
export type String_774 = string;
export type String_775 = string;
export type Null_53 = null;
/**
 * The name of the tool
 */
export type String_776 = string;
/**
 * The description of the tool
 */
export type String_777 = string;
export type Array_100 = (Object_262 & Object_264)[];
export type Null_54 = null;
export type String_778 = string;

export interface INTEGRATIONS_CREATEInput {
  id?: String_754;
  name?: String_755;
  description?: String_756;
  icon?: String_757;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_758
      )
    | Null_51;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_759
      )
    | Null_52;
  connection?: Object_255 | Object_256 | Object_258 | Object_259 | Object_260;
  metadata?: Object_261 | Null_53;
  tools?: Array_100 | Null_54;
  clientIdFromApp?: String_778;
}
export interface Object_255 {
  type: String_760;
  url: String_761;
  token?: String_762;
}
export interface Object_256 {
  type: String_763;
  url: String_764;
  token?: String_765;
  headers?: Object_257;
}
export interface Object_257 {
  [k: string]: String_766;
}
export interface Object_258 {
  type: String_767;
  url: String_768;
  token?: String_769;
}
export interface Object_259 {
  type: String_770;
  tenant: String_771;
  token?: String_772;
}
export interface Object_260 {
  type: String_773;
  name: String_774;
  workspace?: String_775;
}
export interface Object_261 {
  [k: string]: unknown;
}
export interface Object_262 {
  name: String_776;
  inputSchema: Object_263;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_263 {
  [k: string]: unknown;
}
export interface Object_264 {
  description?: String_777;
  outputSchema?: Object_265;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_265 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_779 = string;

export interface INTEGRATIONS_DELETEInput {
  id: String_779;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_780 = string;

export interface INTEGRATIONS_GETInput {
  id: String_780;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_781 = string;

export interface INTEGRATIONS_GET_API_KEYInput {
  integrationId: String_781;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GET_API_KEYOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_782 = "Channel" | "View";

export interface INTEGRATIONS_LISTInput {
  binder?: String_782;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_783 = string;
export type String_784 = string;
export type String_785 = string;
export type String_786 = string;
export type String_787 = string;
export type Null_55 = null;
export type String_788 = string;
export type Null_56 = null;
export type String_789 = string;
export type Null_57 = null;
export type String_790 = "HTTP";
export type String_791 = string;
export type String_792 = string;
export type String_793 = "SSE";
export type String_794 = string;
export type String_795 = string;
export type String_796 = string;
export type String_797 = "Websocket";
export type String_798 = string;
export type String_799 = string;
export type String_800 = "Deco";
export type String_801 = string;
export type String_802 = string;
export type String_803 = "INNATE";
export type String_804 = string;
export type String_805 = string;
export type Null_58 = null;
/**
 * The name of the tool
 */
export type String_806 = string;
/**
 * The description of the tool
 */
export type String_807 = string;
export type Array_102 = (Object_274 & Object_276)[];
export type Null_59 = null;
export type Array_101 = Object_266[];

export interface INTEGRATIONS_LISTOutput {
  items: Array_101;
}
export interface Object_266 {
  id: String_783;
  name: String_784;
  description?: String_785;
  icon?: String_786;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_787
      )
    | Null_55;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_788
      )
    | Null_56;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_789
      )
    | Null_57;
  connection: Object_267 | Object_268 | Object_270 | Object_271 | Object_272;
  metadata?: Object_273 | Null_58;
  tools?: Array_102 | Null_59;
}
export interface Object_267 {
  type: String_790;
  url: String_791;
  token?: String_792;
}
export interface Object_268 {
  type: String_793;
  url: String_794;
  token?: String_795;
  headers?: Object_269;
}
export interface Object_269 {
  [k: string]: String_796;
}
export interface Object_270 {
  type: String_797;
  url: String_798;
  token?: String_799;
}
export interface Object_271 {
  type: String_800;
  tenant: String_801;
  token?: String_802;
}
export interface Object_272 {
  type: String_803;
  name: String_804;
  workspace?: String_805;
}
export interface Object_273 {
  [k: string]: unknown;
}
export interface Object_274 {
  name: String_806;
  inputSchema: Object_275;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_275 {
  [k: string]: unknown;
}
export interface Object_276 {
  description?: String_807;
  outputSchema?: Object_277;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_277 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_808 = string;
export type String_809 = string;
export type String_810 = string;
export type String_811 = string;
export type String_812 = string;
export type String_813 = string;
export type Null_60 = null;
export type String_814 = string;
export type Null_61 = null;
export type String_815 = string;
export type Null_62 = null;
export type String_816 = "HTTP";
export type String_817 = string;
export type String_818 = string;
export type String_819 = "SSE";
export type String_820 = string;
export type String_821 = string;
export type String_822 = string;
export type String_823 = "Websocket";
export type String_824 = string;
export type String_825 = string;
export type String_826 = "Deco";
export type String_827 = string;
export type String_828 = string;
export type String_829 = "INNATE";
export type String_830 = string;
export type String_831 = string;
export type Null_63 = null;
/**
 * The name of the tool
 */
export type String_832 = string;
/**
 * The description of the tool
 */
export type String_833 = string;
export type Array_103 = (Object_286 & Object_288)[];
export type Null_64 = null;

export interface INTEGRATIONS_UPDATEInput {
  id: String_808;
  integration: Object_278;
}
export interface Object_278 {
  id: String_809;
  name: String_810;
  description?: String_811;
  icon?: String_812;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_813
      )
    | Null_60;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_814
      )
    | Null_61;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_815
      )
    | Null_62;
  connection: Object_279 | Object_280 | Object_282 | Object_283 | Object_284;
  metadata?: Object_285 | Null_63;
  tools?: Array_103 | Null_64;
}
export interface Object_279 {
  type: String_816;
  url: String_817;
  token?: String_818;
}
export interface Object_280 {
  type: String_819;
  url: String_820;
  token?: String_821;
  headers?: Object_281;
}
export interface Object_281 {
  [k: string]: String_822;
}
export interface Object_282 {
  type: String_823;
  url: String_824;
  token?: String_825;
}
export interface Object_283 {
  type: String_826;
  tenant: String_827;
  token?: String_828;
}
export interface Object_284 {
  type: String_829;
  name: String_830;
  workspace?: String_831;
}
export interface Object_285 {
  [k: string]: unknown;
}
export interface Object_286 {
  name: String_832;
  inputSchema: Object_287;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_287 {
  [k: string]: unknown;
}
export interface Object_288 {
  description?: String_833;
  outputSchema?: Object_289;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_289 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_834 = string;
/**
 * File path from file added using workspace fs_write tool
 */
export type String_835 = string;
/**
 * The name of the file
 */
export type String_836 = string;
export type StringBoolean = String_837 | Boolean_59;
export type String_837 = string;
export type Boolean_59 = boolean;

export interface KNOWLEDGE_BASE_ADD_FILEInput {
  fileUrl: String_834;
  path?: String_835;
  filename?: String_836;
  metadata?: Object_290;
}
export interface Object_290 {
  [k: string]: StringBoolean;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_ADD_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_838 = string;
/**
 * The dimension of the knowledge base
 */
export type Number_102 = number;

export interface KNOWLEDGE_BASE_CREATEInput {
  name: String_838;
  dimension?: Number_102;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_839 = string;

export interface KNOWLEDGE_BASE_DELETEInput {
  name: String_839;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_840 = string;

export interface KNOWLEDGE_BASE_DELETE_FILEInput {
  fileUrl: String_840;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETE_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_841 = string;
/**
 * The id of the content to forget
 */
export type Array_104 = String_841[];

export interface KNOWLEDGE_BASE_FORGETInput {
  docIds: Array_104;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_FORGETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LIST_FILESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_105 = unknown[];

export interface KNOWLEDGE_BASE_LIST_FILESOutput {
  items: Array_105;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the content being remembered
 */
export type String_842 = string;
/**
 * The content to remember
 */
export type String_843 = string;
export type String_844 = string;

export interface KNOWLEDGE_BASE_REMEMBERInput {
  docId?: String_842;
  content: String_843;
  metadata?: Object_291;
}
/**
 * The metadata to remember
 */
export interface Object_291 {
  [k: string]: String_844;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_REMEMBEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search the knowledge base
 */
export type String_845 = string;
/**
 * The number of results to return
 */
export type Number_103 = number;
/**
 * Whether to return the content
 */
export type Boolean_60 = boolean;

export interface KNOWLEDGE_BASE_SEARCHInput {
  query: String_845;
  topK?: Number_103;
  content?: Boolean_60;
  filter?: Object_292;
}
/**
 * Filters to match against document metadata and narrow search results. Supports MongoDB-style query operators:
 *         comparison ($eq, $ne, $gt, $gte, $lt, $lte), array ($in, $nin), logical ($and, $or), and existence ($exists).
 *         Only returns documents whose metadata matches the specified filter conditions.
 *         Examples:
 *         { "metadata": {{"category": "documents"}},
 *         { "metadata": {{"priority": {"$gte": 3}}},
 *         { "metadata": {{"status": {"$in": ["active", "pending"]}}},
 *         { "metadata": {{"$and": [{"type": "pdf"}, {"size": {"$lt": 1000}}]}}}
 */
export interface Object_292 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_SEARCHOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Optional prefix to filter branch names
 */
export type String_846 = string;

export interface LIST_BRANCHESInput {
  prefix?: String_846;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_847 = string;
export type Number_104 = number;
export type StringNull_23 = String_848 | Null_65;
export type String_848 = string;
export type Null_65 = null;
export type Array_106 = Object_293[];
export type Number_105 = number;

export interface LIST_BRANCHESOutput {
  branches: Array_106;
  count: Number_105;
}
export interface Object_293 {
  name: String_847;
  createdAt: Number_104;
  metadata: Object_294;
  originBranch: StringNull_23;
}
export interface Object_294 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_849 = string;
/**
 * Optional prefix to filter files (use select instead)
 */
export type String_850 = string;
export type String_851 = string;
/**
 * Optional list of files to select
 */
export type Array_107 = String_851[];
/**
 * Include file content as base64 in the response
 */
export type Boolean_61 = boolean;

export interface LIST_FILESInput {
  branch?: String_849;
  prefix?: String_850;
  select?: Array_107;
  includeContent?: Boolean_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_852 = string;
export type Number_106 = number;
export type Number_107 = number;
export type Number_108 = number;
export type String_853 = string;
export type Number_109 = number;

export interface LIST_FILESOutput {
  files: Object_295;
  count: Number_109;
}
export interface Object_295 {
  [k: string]: Object_296;
}
export interface Object_296 {
  address: String_852;
  metadata: Object_297;
  sizeInBytes: Number_106;
  mtime: Number_107;
  ctime: Number_108;
  content?: String_853;
}
export interface Object_297 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch to merge into (defaults to 'main')
 */
export type String_854 = string;
/**
 * The branch to merge from
 */
export type String_855 = string;
/**
 * Merge strategy
 */
export type String_856 = "OVERRIDE" | "LAST_WRITE_WINS";

export interface MERGE_BRANCHInput {
  targetBranch?: String_854;
  sourceBranch: String_855;
  strategy: String_856;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_110 = number;
export type String_857 = string;
export type Array_108 = String_857[];
export type String_858 = string;
export type Array_109 = String_858[];
export type String_859 = string;
export type Array_110 = String_859[];
export type String_860 = string;
export type String_861 = "local" | "remote";
export type Number_111 = number;
export type Number_112 = number;
export type Array_111 = Object_298[];

export interface MERGE_BRANCHOutput {
  filesMerged: Number_110;
  added: Array_108;
  modified: Array_109;
  deleted: Array_110;
  conflicts?: Array_111;
}
export interface Object_298 {
  path: String_860;
  resolved: String_861;
  localMtime: Number_111;
  remoteMtime: Number_112;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_862 = string;
export type String_863 = string;
export type String_864 = string;
export type String_865 = string;
export type Boolean_62 = boolean;
export type Boolean_63 = boolean;

export interface MODELS_CREATEInput {
  name: String_862;
  model: String_863;
  apiKey?: String_864;
  description?: String_865;
  byDeco?: Boolean_62;
  isEnabled?: Boolean_63;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_866 = string;

export interface MODELS_DELETEInput {
  id: String_866;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_867 = string;

export interface MODELS_GETInput {
  id: String_867;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_64 = boolean;
export type Boolean_65 = boolean;

export interface MODELS_LISTInput {
  excludeDisabled?: Boolean_64;
  excludeAuto?: Boolean_65;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_112 = unknown[];

export interface MODELS_LISTOutput {
  items: Array_112;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_868 = string;
export type String_869 = string;
export type String_870 = string;
export type StringNull_24 = String_871 | Null_66;
export type String_871 = string;
export type Null_66 = null;
export type Boolean_66 = boolean;
export type Boolean_67 = boolean;
export type String_872 = string;

export interface MODELS_UPDATEInput {
  id: String_868;
  data: Object_299;
}
export interface Object_299 {
  name?: String_869;
  model?: String_870;
  apiKey?: StringNull_24;
  isEnabled?: Boolean_66;
  byDeco?: Boolean_67;
  description?: String_872;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the integration to create an OAuth code for
 */
export type String_873 = string;

export interface OAUTH_CODE_CREATEInput {
  integrationId: String_873;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The OAuth code
 */
export type String_874 = string;

export interface OAUTH_CODE_CREATEOutput {
  code: String_874;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount (in microdollars) of money to pre-authorize. Specified in USD dollars.
 */
export type StringNumber_2 = String_875 | Number_113;
export type String_875 = string;
export type Number_113 = number;

export interface PRE_AUTHORIZE_AMOUNTInput {
  amount: StringNumber_2;
  metadata?: Object_300;
}
export interface Object_300 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_876 = string;

export interface PRE_AUTHORIZE_AMOUNTOutput {
  id: String_876;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_877 = string;
export type String_878 = string;
export type String_879 = string;

export interface PROMPTS_CREATEInput {
  name: String_877;
  description?: String_878;
  content: String_879;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_880 = string;
export type String_881 = string;
export type StringNull_25 = String_882 | Null_67;
export type String_882 = string;
export type Null_67 = null;
export type String_883 = string;
export type BooleanNull_1 = Boolean_68 | Null_68;
export type Boolean_68 = boolean;
export type Null_68 = null;
export type String_884 = string;
export type StringNull_26 = String_885 | Null_69;
export type String_885 = string;
export type Null_69 = null;

export interface PROMPTS_CREATEOutput {
  id: String_880;
  name: String_881;
  description: StringNull_25;
  content: String_883;
  readonly?: BooleanNull_1;
  created_at: String_884;
  updated_at?: StringNull_26;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_886 = string;

export interface PROMPTS_DELETEInput {
  id: String_886;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_69 = boolean;

export interface PROMPTS_DELETEOutput {
  success: Boolean_69;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_887 = string;

export interface PROMPTS_GETInput {
  id: String_887;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_888 = string;
export type Number_114 = number;
export type Number_115 = number;

export interface PROMPTS_GET_VERSIONSInput {
  id: String_888;
  limit?: Number_114;
  offset?: Number_115;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull_27 = String_889 | Null_70;
export type String_889 = string;
export type Null_70 = null;
export type String_890 = string;
export type StringNull_28 = String_891 | Null_71;
export type String_891 = string;
export type Null_71 = null;
export type String_892 = string;
export type StringNull_29 = String_893 | Null_72;
export type String_893 = string;
export type Null_72 = null;
export type String_894 = string;
export type StringNull_30 = String_895 | Null_73;
export type String_895 = string;
export type Null_73 = null;
export type Array_113 = Object_301[];

export interface PROMPTS_GET_VERSIONSOutput {
  items: Array_113;
}
export interface Object_301 {
  content: StringNull_27;
  created_at: String_890;
  created_by: StringNull_28;
  id: String_892;
  name: StringNull_29;
  prompt_id: String_894;
  version_name: StringNull_30;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_896 = string;
/**
 * Filter prompts by ids
 */
export type Array_114 = String_896[];
/**
 * Resolve mentions in the prompts
 */
export type Boolean_70 = boolean;
export type String_897 = string;
/**
 * Exclude prompts by ids
 */
export type Array_115 = String_897[];

export interface PROMPTS_LISTInput {
  ids?: Array_114;
  resolveMentions?: Boolean_70;
  excludeIds?: Array_115;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_898 = string;
export type String_899 = string;
export type StringNull_31 = String_900 | Null_74;
export type String_900 = string;
export type Null_74 = null;
export type String_901 = string;
export type BooleanNull_2 = Boolean_71 | Null_75;
export type Boolean_71 = boolean;
export type Null_75 = null;
export type String_902 = string;
export type StringNull_32 = String_903 | Null_76;
export type String_903 = string;
export type Null_76 = null;
export type Array_116 = Object_302[];

export interface PROMPTS_LISTOutput {
  items: Array_116;
}
export interface Object_302 {
  id: String_898;
  name: String_899;
  description: StringNull_31;
  content: String_901;
  readonly?: BooleanNull_2;
  created_at: String_902;
  updated_at?: StringNull_32;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_904 = string;
export type String_905 = string;

export interface PROMPTS_RENAME_VERSIONInput {
  id: String_904;
  versionName: String_905;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the version
 */
export type String_906 = string;
/**
 * The id of the prompt
 */
export type String_907 = string;
/**
 * The name of the version
 */
export type StringNull_33 = String_908 | Null_77;
export type String_908 = string;
export type Null_77 = null;
/**
 * The content of the version
 */
export type StringNull_34 = String_909 | Null_78;
export type String_909 = string;
export type Null_78 = null;
/**
 * The version name
 */
export type StringNull_35 = String_910 | Null_79;
export type String_910 = string;
export type Null_79 = null;
/**
 * The user who created the version
 */
export type StringNull_36 = String_911 | Null_80;
export type String_911 = string;
export type Null_80 = null;
/**
 * The date and time the version was created
 */
export type String_912 = string;

export interface PROMPTS_RENAME_VERSIONOutput {
  id: String_906;
  prompt_id: String_907;
  name?: StringNull_33;
  content?: StringNull_34;
  version_name?: StringNull_35;
  created_by?: StringNull_36;
  created_at: String_912;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_913 = string;
export type String_914 = string;
export type String_915 = string;
export type Null_81 = null;
export type String_916 = string;
export type String_917 = string;

export interface PROMPTS_UPDATEInput {
  id: String_913;
  data: Object_303;
  versionName?: String_917;
}
export interface Object_303 {
  name?: String_914;
  description?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_915
      )
    | Null_81;
  content?: String_916;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_918 = string;
export type String_919 = string;
export type StringNull_37 = String_920 | Null_82;
export type String_920 = string;
export type Null_82 = null;
export type String_921 = string;
export type BooleanNull_3 = Boolean_72 | Null_83;
export type Boolean_72 = boolean;
export type Null_83 = null;
export type String_922 = string;
export type StringNull_38 = String_923 | Null_84;
export type String_923 = string;
export type Null_84 = null;

export interface PROMPTS_UPDATEOutput {
  id: String_918;
  name: String_919;
  description: StringNull_37;
  content: String_921;
  readonly?: BooleanNull_3;
  created_at: String_922;
  updated_at?: StringNull_38;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_924 = string;
/**
 * The file path within the branch
 */
export type String_925 = string;
/**
 * Plain text string content
 */
export type String_926 = string;
/**
 * Base64 encoded content
 */
export type String_927 = string;
export type Number_116 = number;
/**
 * Array of bytes (0-255)
 */
export type Array_117 = Number_116[];
/**
 * Expected change time for conflict detection
 */
export type Number_117 = number;

export interface PUT_FILEInput {
  branch?: String_924;
  path: String_925;
  /**
   * The file content as plain string, base64 object, or array of bytes
   */
  content: String_926 | Object_304 | Array_117;
  metadata?: Object_305;
  expectedCtime?: Number_117;
}
export interface Object_304 {
  base64: String_927;
}
/**
 * Additional metadata key-value pairs
 */
export interface Object_305 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_73 = boolean;

export interface PUT_FILEOutput {
  conflict?: Boolean_73;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_928 = string;
/**
 * The file path within the branch
 */
export type String_929 = string;
/**
 * Return format: 'base64' (default), 'byteArray', 'plainString', or 'json'
 */
export type String_930 = "base64" | "byteArray" | "plainString" | "json";

export interface READ_FILEInput {
  branch?: String_928;
  path: String_929;
  format?: String_930;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_931 = string;
export type Number_118 = number;
export type Number_119 = number;

export interface READ_FILEOutput {
  content?: unknown;
  address: String_931;
  metadata: Object_306;
  mtime: Number_118;
  ctime: Number_119;
}
export interface Object_306 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_932 = string;

export interface REDEEM_VOUCHERInput {
  voucher: String_932;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_933 = string;

export interface REDEEM_VOUCHEROutput {
  voucherId: String_933;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_934 = string;
/**
 * Filter apps by scope name
 */
export type String_935 = string;

export interface REGISTRY_LIST_APPSInput {
  search?: String_934;
  scopeName?: String_935;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_936 = string;
export type String_937 = string;
export type String_938 = string;
export type String_939 = string;
export type String_940 = string;
export type String_941 = string;
export type String_942 = string;
export type String_943 = string;
export type String_944 = "HTTP";
export type String_945 = string;
export type String_946 = string;
export type String_947 = "SSE";
export type String_948 = string;
export type String_949 = string;
export type String_950 = string;
export type String_951 = "Websocket";
export type String_952 = string;
export type String_953 = string;
export type String_954 = "Deco";
export type String_955 = string;
export type String_956 = string;
export type String_957 = "INNATE";
export type String_958 = string;
export type String_959 = string;
export type String_960 = string;
export type String_961 = string;
export type Boolean_74 = boolean;
export type String_962 = string;
export type Boolean_75 = boolean;
export type String_963 = string;
export type String_964 = string;
export type String_965 = string;
export type Array_119 = Object_314[];
export type Null_85 = null;
export type Array_118 = Object_307[];

export interface REGISTRY_LIST_APPSOutput {
  apps: Array_118;
}
export interface Object_307 {
  id: String_936;
  workspace: String_937;
  scopeId: String_938;
  scopeName: String_939;
  appName: String_940;
  name: String_941;
  description?: String_942;
  icon?: String_943;
  connection: Object_308 | Object_309 | Object_311 | Object_312 | Object_313;
  createdAt: String_960;
  updatedAt: String_961;
  unlisted: Boolean_74;
  friendlyName?: String_962;
  verified?: Boolean_75;
  tools?: Array_119;
  metadata?: Object_318 | Null_85;
}
export interface Object_308 {
  type: String_944;
  url: String_945;
  token?: String_946;
}
export interface Object_309 {
  type: String_947;
  url: String_948;
  token?: String_949;
  headers?: Object_310;
}
export interface Object_310 {
  [k: string]: String_950;
}
export interface Object_311 {
  type: String_951;
  url: String_952;
  token?: String_953;
}
export interface Object_312 {
  type: String_954;
  tenant: String_955;
  token?: String_956;
}
export interface Object_313 {
  type: String_957;
  name: String_958;
  workspace?: String_959;
}
export interface Object_314 {
  id: String_963;
  name: String_964;
  description?: String_965;
  inputSchema: Object_315;
  outputSchema?: Object_316;
  metadata?: Object_317;
}
export interface Object_315 {
  [k: string]: unknown;
}
export interface Object_316 {
  [k: string]: unknown;
}
export interface Object_317 {
  [k: string]: unknown;
}
export interface Object_318 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_966 = string;

export interface REGISTRY_LIST_PUBLISHED_APPSInput {
  search?: String_966;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_967 = string;
export type String_968 = string;
export type String_969 = string;
export type String_970 = string;
export type String_971 = string;
export type String_972 = string;
export type String_973 = string;
export type String_974 = string;
export type String_975 = "HTTP";
export type String_976 = string;
export type String_977 = string;
export type String_978 = "SSE";
export type String_979 = string;
export type String_980 = string;
export type String_981 = string;
export type String_982 = "Websocket";
export type String_983 = string;
export type String_984 = string;
export type String_985 = "Deco";
export type String_986 = string;
export type String_987 = string;
export type String_988 = "INNATE";
export type String_989 = string;
export type String_990 = string;
export type String_991 = string;
export type String_992 = string;
export type Boolean_76 = boolean;
export type String_993 = string;
export type Boolean_77 = boolean;
export type String_994 = string;
export type String_995 = string;
export type String_996 = string;
export type Array_121 = Object_326[];
export type Null_86 = null;
export type Array_120 = Object_319[];

export interface REGISTRY_LIST_PUBLISHED_APPSOutput {
  apps: Array_120;
}
export interface Object_319 {
  id: String_967;
  workspace: String_968;
  scopeId: String_969;
  scopeName: String_970;
  appName: String_971;
  name: String_972;
  description?: String_973;
  icon?: String_974;
  connection: Object_320 | Object_321 | Object_323 | Object_324 | Object_325;
  createdAt: String_991;
  updatedAt: String_992;
  unlisted: Boolean_76;
  friendlyName?: String_993;
  verified?: Boolean_77;
  tools?: Array_121;
  metadata?: Object_330 | Null_86;
}
export interface Object_320 {
  type: String_975;
  url: String_976;
  token?: String_977;
}
export interface Object_321 {
  type: String_978;
  url: String_979;
  token?: String_980;
  headers?: Object_322;
}
export interface Object_322 {
  [k: string]: String_981;
}
export interface Object_323 {
  type: String_982;
  url: String_983;
  token?: String_984;
}
export interface Object_324 {
  type: String_985;
  tenant: String_986;
  token?: String_987;
}
export interface Object_325 {
  type: String_988;
  name: String_989;
  workspace?: String_990;
}
export interface Object_326 {
  id: String_994;
  name: String_995;
  description?: String_996;
  inputSchema: Object_327;
  outputSchema?: Object_328;
  metadata?: Object_329;
}
export interface Object_327 {
  [k: string]: unknown;
}
export interface Object_328 {
  [k: string]: unknown;
}
export interface Object_329 {
  [k: string]: unknown;
}
export interface Object_330 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter scopes by name
 */
export type String_997 = string;

export interface REGISTRY_LIST_SCOPESInput {
  search?: String_997;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_998 = string;
export type String_999 = string;
export type String_1000 = string;
export type String_1001 = string;
export type String_1002 = string;
export type Array_122 = Object_331[];

export interface REGISTRY_LIST_SCOPESOutput {
  scopes: Array_122;
}
export interface Object_331 {
  id: String_998;
  scopeName: String_999;
  workspace: String_1000;
  createdAt: String_1001;
  updatedAt: String_1002;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The scope to publish to (defaults to team slug, automatically claimed on first use)
 */
export type String_1003 = string;
/**
 * The name of the app
 */
export type String_1004 = string;
/**
 * A friendly name for the app
 */
export type String_1005 = string;
/**
 * A description of the app
 */
export type String_1006 = string;
/**
 * URL to an icon for the app
 */
export type String_1007 = string;
export type String_1008 = "HTTP";
export type String_1009 = string;
export type String_1010 = string;
export type String_1011 = "SSE";
export type String_1012 = string;
export type String_1013 = string;
export type String_1014 = string;
export type String_1015 = "Websocket";
export type String_1016 = string;
export type String_1017 = string;
export type String_1018 = "Deco";
export type String_1019 = string;
export type String_1020 = string;
export type String_1021 = "INNATE";
export type String_1022 = string;
export type String_1023 = string;
/**
 * Whether the app should be unlisted
 */
export type Boolean_78 = boolean;

export interface REGISTRY_PUBLISH_APPInput {
  scopeName: String_1003;
  name: String_1004;
  friendlyName?: String_1005;
  description?: String_1006;
  icon?: String_1007;
  /**
   * The MCP connection configuration for the app
   */
  connection: Object_332 | Object_333 | Object_335 | Object_336 | Object_337;
  metadata?: Object_338;
  unlisted?: Boolean_78;
}
export interface Object_332 {
  type: String_1008;
  url: String_1009;
  token?: String_1010;
}
export interface Object_333 {
  type: String_1011;
  url: String_1012;
  token?: String_1013;
  headers?: Object_334;
}
export interface Object_334 {
  [k: string]: String_1014;
}
export interface Object_335 {
  type: String_1015;
  url: String_1016;
  token?: String_1017;
}
export interface Object_336 {
  type: String_1018;
  tenant: String_1019;
  token?: String_1020;
}
export interface Object_337 {
  type: String_1021;
  name: String_1022;
  workspace?: String_1023;
}
/**
 * Metadata for the app
 */
export interface Object_338 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_PUBLISH_APPOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1024 = string;
export type String_1025 = string;
export type Number_120 = number;
export type String_1026 = string;
export type Array_124 = Object_340[];
export type Array_123 = Object_339[];

export interface TEAM_MEMBERS_INVITEInput_1 {
  teamId: String_1024;
  invitees: Array_123;
}
export interface Object_339 {
  email: String_1025;
  roles: Array_124;
}
export interface Object_340 {
  id: Number_120;
  name: String_1026;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the view
 */
export type String_1027 = string;
/**
 * Display title for the view
 */
export type String_1028 = string;
/**
 * Icon identifier for the view
 */
export type String_1029 = string;
/**
 * Type of view (custom for views, resource for resources)
 */
export type String_1030 = "custom" | "resource";
/**
 * Integration-specific view name
 */
export type String_1031 = string;
export type String_1032 = string;
/**
 * Optional list of tool names to enable for this view
 */
export type Array_125 = String_1032[];
export type String_1033 = string;
/**
 * Optional list of textual rules to persist in context
 */
export type Array_126 = String_1033[];
/**
 * Integration ID
 */
export type String_1034 = string;
/**
 * Type of resource (for resources only)
 */
export type String_1035 = string;

export interface TEAMS_ADD_VIEWInput {
  view: Object_341;
}
/**
 * View or resource configuration to add
 */
export interface Object_341 {
  id: String_1027;
  title: String_1028;
  icon: String_1029;
  type: String_1030;
  name: String_1031;
  tools?: Array_125;
  rules?: Array_126;
  integration: Object_342;
  resourceType?: String_1035;
}
export interface Object_342 {
  id: String_1034;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_ADD_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the view or resource to remove
 */
export type String_1036 = string;

export interface TEAMS_REMOVE_VIEWInput {
  viewId: String_1036;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_REMOVE_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1037 = string;

export interface THREADS_GETInput {
  id: String_1037;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1038 = string;

export interface THREADS_GET_MESSAGESInput {
  id: String_1038;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GET_MESSAGESOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_121 = number;
export type String_1039 = string;
export type String_1040 = string;
export type String_1041 =
  | "createdAt_desc"
  | "createdAt_asc"
  | "updatedAt_desc"
  | "updatedAt_asc";
export type String_1042 = string;

export interface THREADS_LISTInput {
  limit?: Number_121;
  agentId?: String_1039;
  resourceId?: String_1040;
  orderBy?: String_1041;
  cursor?: String_1042;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1043 = string;

export interface THREADS_UPDATE_METADATAInput {
  threadId: String_1043;
  metadata: Object_343;
}
export interface Object_343 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1044 = string;
export type String_1045 = string;

export interface THREADS_UPDATE_TITLEInput {
  threadId: String_1044;
  title: String_1045;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_TITLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1046 = string;

export interface TRIGGERS_ACTIVATEInput {
  id: String_1046;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_ACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The title of the trigger
 */
export type String_1047 = string;
/**
 * The description of the trigger
 */
export type String_1048 = string;
export type String_1049 = string;
export type String_1050 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1051 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1052 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1053 = string;
export type String_1054 = "user" | "assistant" | "system";
export type String_1055 = string;
/**
 * The messages to send to the LLM
 */
export type Array_127 = Object_346[];
/**
 * The URL of the webhook
 */
export type String_1056 = string;
/**
 * The integration ID
 */
export type String_1057 = string;
/**
 * The tool name
 */
export type String_1058 = string;
/**
 * The title of the trigger
 */
export type String_1059 = string;
/**
 * The description of the trigger
 */
export type String_1060 = string;
export type String_1061 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1062 = string;
/**
 * The passphrase for the webhook
 */
export type String_1063 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1064 = string;

export interface TRIGGERS_CREATEInput {
  trigger: (Object_344 | Object_347) | (Object_350 | Object_352);
}
export interface Object_344 {
  title: String_1047;
  description?: String_1048;
  cronExp: String_1049;
  type: String_1050;
  agentId: String_1051;
  prompt: Object_345;
  url?: String_1056;
}
export interface Object_345 {
  threadId?: String_1052;
  resourceId?: String_1053;
  messages: Array_127;
}
export interface Object_346 {
  role: String_1054;
  content: String_1055;
}
export interface Object_347 {
  title: String_1047;
  description?: String_1048;
  cronExp: String_1049;
  type: String_1050;
  callTool: Object_348;
}
export interface Object_348 {
  integrationId: String_1057;
  toolName: String_1058;
  arguments?: Object_349;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_349 {
  [k: string]: unknown;
}
export interface Object_350 {
  title: String_1059;
  description?: String_1060;
  type: String_1061;
  url?: String_1062;
  passphrase?: String_1063;
  agentId: String_1064;
  schema?: Object_351;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_351 {
  [k: string]: unknown;
}
export interface Object_352 {
  title: String_1059;
  description?: String_1060;
  type: String_1061;
  url?: String_1062;
  passphrase?: String_1063;
  callTool: Object_348;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_WEBHOOKInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1065 = string;
export type String_1066 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1067 = string;
/**
 * The description of the trigger
 */
export type String_1068 = string;
export type String_1069 = string;
export type String_1070 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1071 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1072 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1073 = string;
export type String_1074 = "user" | "assistant" | "system";
export type String_1075 = string;
/**
 * The messages to send to the LLM
 */
export type Array_128 = Object_355[];
/**
 * The URL of the webhook
 */
export type String_1076 = string;
/**
 * The integration ID
 */
export type String_1077 = string;
/**
 * The tool name
 */
export type String_1078 = string;
/**
 * The title of the trigger
 */
export type String_1079 = string;
/**
 * The description of the trigger
 */
export type String_1080 = string;
export type String_1081 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1082 = string;
/**
 * The passphrase for the webhook
 */
export type String_1083 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1084 = string;
/**
 * The creation date
 */
export type String_1085 = string;
/**
 * The update date
 */
export type String_1086 = string;
/**
 * The user ID
 */
export type String_1087 = string;
/**
 * The user name
 */
export type String_1088 = string;
/**
 * The user email
 */
export type String_1089 = string;
/**
 * The user avatar
 */
export type String_1090 = string;
/**
 * The trigger status
 */
export type Boolean_79 = boolean;
/**
 * The workspace ID
 */
export type String_1091 = string;

export interface TRIGGERS_CREATE_WEBHOOKOutput {
  id: String_1065;
  type: String_1066;
  data: (Object_353 | Object_356) | (Object_359 | Object_361);
  createdAt: String_1085;
  updatedAt: String_1086;
  user: Object_362;
  active?: Boolean_79;
  workspace: String_1091;
}
export interface Object_353 {
  title: String_1067;
  description?: String_1068;
  cronExp: String_1069;
  type: String_1070;
  agentId: String_1071;
  prompt: Object_354;
  url?: String_1076;
}
export interface Object_354 {
  threadId?: String_1072;
  resourceId?: String_1073;
  messages: Array_128;
}
export interface Object_355 {
  role: String_1074;
  content: String_1075;
}
export interface Object_356 {
  title: String_1067;
  description?: String_1068;
  cronExp: String_1069;
  type: String_1070;
  callTool: Object_357;
}
export interface Object_357 {
  integrationId: String_1077;
  toolName: String_1078;
  arguments?: Object_358;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_358 {
  [k: string]: unknown;
}
export interface Object_359 {
  title: String_1079;
  description?: String_1080;
  type: String_1081;
  url?: String_1082;
  passphrase?: String_1083;
  agentId: String_1084;
  schema?: Object_360;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_360 {
  [k: string]: unknown;
}
export interface Object_361 {
  title: String_1079;
  description?: String_1080;
  type: String_1081;
  url?: String_1082;
  passphrase?: String_1083;
  callTool: Object_357;
}
export interface Object_362 {
  id: String_1087;
  metadata: Object_363;
}
export interface Object_363 {
  full_name: String_1088;
  email: String_1089;
  avatar_url: String_1090;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1092 = string;

export interface TRIGGERS_DEACTIVATEInput {
  id: String_1092;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_DEACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1093 = string;

export interface TRIGGERS_DELETEInput {
  id: String_1093;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1094 = string;

export interface TRIGGERS_DELETEOutput {
  id: String_1094;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1095 = string;

export interface TRIGGERS_GETInput {
  id: String_1095;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1096 = string;

export interface TRIGGERS_GET_WEBHOOK_URLInput {
  id: String_1096;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL of the webhook trigger
 */
export type String_1097 = string;

export interface TRIGGERS_GET_WEBHOOK_URLOutput {
  url?: String_1097;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1098 = string;

export interface TRIGGERS_LISTInput {
  agentId?: String_1098;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1099 = string;
export type String_1100 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1101 = string;
/**
 * The description of the trigger
 */
export type String_1102 = string;
export type String_1103 = string;
export type String_1104 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1105 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1106 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1107 = string;
export type String_1108 = "user" | "assistant" | "system";
export type String_1109 = string;
/**
 * The messages to send to the LLM
 */
export type Array_130 = Object_367[];
/**
 * The URL of the webhook
 */
export type String_1110 = string;
/**
 * The integration ID
 */
export type String_1111 = string;
/**
 * The tool name
 */
export type String_1112 = string;
/**
 * The title of the trigger
 */
export type String_1113 = string;
/**
 * The description of the trigger
 */
export type String_1114 = string;
export type String_1115 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1116 = string;
/**
 * The passphrase for the webhook
 */
export type String_1117 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1118 = string;
/**
 * The creation date
 */
export type String_1119 = string;
/**
 * The update date
 */
export type String_1120 = string;
/**
 * The user ID
 */
export type String_1121 = string;
/**
 * The user name
 */
export type String_1122 = string;
/**
 * The user email
 */
export type String_1123 = string;
/**
 * The user avatar
 */
export type String_1124 = string;
/**
 * The trigger status
 */
export type Boolean_80 = boolean;
/**
 * The workspace ID
 */
export type String_1125 = string;
export type Array_129 = Object_364[];

export interface TRIGGERS_LISTOutput {
  triggers: Array_129;
}
export interface Object_364 {
  id: String_1099;
  type: String_1100;
  data: (Object_365 | Object_368) | (Object_371 | Object_373);
  createdAt: String_1119;
  updatedAt: String_1120;
  user: Object_374;
  active?: Boolean_80;
  workspace: String_1125;
}
export interface Object_365 {
  title: String_1101;
  description?: String_1102;
  cronExp: String_1103;
  type: String_1104;
  agentId: String_1105;
  prompt: Object_366;
  url?: String_1110;
}
export interface Object_366 {
  threadId?: String_1106;
  resourceId?: String_1107;
  messages: Array_130;
}
export interface Object_367 {
  role: String_1108;
  content: String_1109;
}
export interface Object_368 {
  title: String_1101;
  description?: String_1102;
  cronExp: String_1103;
  type: String_1104;
  callTool: Object_369;
}
export interface Object_369 {
  integrationId: String_1111;
  toolName: String_1112;
  arguments?: Object_370;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_370 {
  [k: string]: unknown;
}
export interface Object_371 {
  title: String_1113;
  description?: String_1114;
  type: String_1115;
  url?: String_1116;
  passphrase?: String_1117;
  agentId: String_1118;
  schema?: Object_372;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_372 {
  [k: string]: unknown;
}
export interface Object_373 {
  title: String_1113;
  description?: String_1114;
  type: String_1115;
  url?: String_1116;
  passphrase?: String_1117;
  callTool: Object_369;
}
export interface Object_374 {
  id: String_1121;
  metadata: Object_375;
}
export interface Object_375 {
  full_name: String_1122;
  email: String_1123;
  avatar_url: String_1124;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1126 = string;
/**
 * The title of the trigger
 */
export type String_1127 = string;
/**
 * The description of the trigger
 */
export type String_1128 = string;
export type String_1129 = string;
export type String_1130 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1131 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1132 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1133 = string;
export type String_1134 = "user" | "assistant" | "system";
export type String_1135 = string;
/**
 * The messages to send to the LLM
 */
export type Array_131 = Object_378[];
/**
 * The URL of the webhook
 */
export type String_1136 = string;
/**
 * The integration ID
 */
export type String_1137 = string;
/**
 * The tool name
 */
export type String_1138 = string;
/**
 * The title of the trigger
 */
export type String_1139 = string;
/**
 * The description of the trigger
 */
export type String_1140 = string;
export type String_1141 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1142 = string;
/**
 * The passphrase for the webhook
 */
export type String_1143 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1144 = string;

export interface TRIGGERS_UPDATEInput {
  id: String_1126;
  data: (Object_376 | Object_379) | (Object_382 | Object_384);
}
export interface Object_376 {
  title: String_1127;
  description?: String_1128;
  cronExp: String_1129;
  type: String_1130;
  agentId: String_1131;
  prompt: Object_377;
  url?: String_1136;
}
export interface Object_377 {
  threadId?: String_1132;
  resourceId?: String_1133;
  messages: Array_131;
}
export interface Object_378 {
  role: String_1134;
  content: String_1135;
}
export interface Object_379 {
  title: String_1127;
  description?: String_1128;
  cronExp: String_1129;
  type: String_1130;
  callTool: Object_380;
}
export interface Object_380 {
  integrationId: String_1137;
  toolName: String_1138;
  arguments?: Object_381;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_381 {
  [k: string]: unknown;
}
export interface Object_382 {
  title: String_1139;
  description?: String_1140;
  type: String_1141;
  url?: String_1142;
  passphrase?: String_1143;
  agentId: String_1144;
  schema?: Object_383;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_383 {
  [k: string]: unknown;
}
export interface Object_384 {
  title: String_1139;
  description?: String_1140;
  type: String_1141;
  url?: String_1142;
  passphrase?: String_1143;
  callTool: Object_380;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1145 = string;
/**
 * Filter apps by scope name
 */
export type String_1146 = string;

export interface REGISTRY_LIST_APPSInput_1 {
  search?: String_1145;
  scopeName?: String_1146;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1147 = string;
export type String_1148 = string;
export type String_1149 = string;
export type String_1150 = string;
export type String_1151 = string;
export type String_1152 = string;
export type String_1153 = string;
export type String_1154 = string;
export type String_1155 = "HTTP";
export type String_1156 = string;
export type String_1157 = string;
export type String_1158 = "SSE";
export type String_1159 = string;
export type String_1160 = string;
export type String_1161 = string;
export type String_1162 = "Websocket";
export type String_1163 = string;
export type String_1164 = string;
export type String_1165 = "Deco";
export type String_1166 = string;
export type String_1167 = string;
export type String_1168 = "INNATE";
export type String_1169 = string;
export type String_1170 = string;
export type String_1171 = string;
export type String_1172 = string;
export type Boolean_81 = boolean;
export type String_1173 = string;
export type Boolean_82 = boolean;
export type String_1174 = string;
export type String_1175 = string;
export type String_1176 = string;
export type Array_133 = Object_392[];
export type Null_87 = null;
export type Array_132 = Object_385[];

export interface REGISTRY_LIST_APPSOutput_1 {
  apps: Array_132;
}
export interface Object_385 {
  id: String_1147;
  workspace: String_1148;
  scopeId: String_1149;
  scopeName: String_1150;
  appName: String_1151;
  name: String_1152;
  description?: String_1153;
  icon?: String_1154;
  connection: Object_386 | Object_387 | Object_389 | Object_390 | Object_391;
  createdAt: String_1171;
  updatedAt: String_1172;
  unlisted: Boolean_81;
  friendlyName?: String_1173;
  verified?: Boolean_82;
  tools?: Array_133;
  metadata?: Object_396 | Null_87;
}
export interface Object_386 {
  type: String_1155;
  url: String_1156;
  token?: String_1157;
}
export interface Object_387 {
  type: String_1158;
  url: String_1159;
  token?: String_1160;
  headers?: Object_388;
}
export interface Object_388 {
  [k: string]: String_1161;
}
export interface Object_389 {
  type: String_1162;
  url: String_1163;
  token?: String_1164;
}
export interface Object_390 {
  type: String_1165;
  tenant: String_1166;
  token?: String_1167;
}
export interface Object_391 {
  type: String_1168;
  name: String_1169;
  workspace?: String_1170;
}
export interface Object_392 {
  id: String_1174;
  name: String_1175;
  description?: String_1176;
  inputSchema: Object_393;
  outputSchema?: Object_394;
  metadata?: Object_395;
}
export interface Object_393 {
  [k: string]: unknown;
}
export interface Object_394 {
  [k: string]: unknown;
}
export interface Object_395 {
  [k: string]: unknown;
}
export interface Object_396 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_1177 = string;

export interface REGISTRY_LIST_PUBLISHED_APPSInput_1 {
  search?: String_1177;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1178 = string;
export type String_1179 = string;
export type String_1180 = string;
export type String_1181 = string;
export type String_1182 = string;
export type String_1183 = string;
export type String_1184 = string;
export type String_1185 = string;
export type String_1186 = "HTTP";
export type String_1187 = string;
export type String_1188 = string;
export type String_1189 = "SSE";
export type String_1190 = string;
export type String_1191 = string;
export type String_1192 = string;
export type String_1193 = "Websocket";
export type String_1194 = string;
export type String_1195 = string;
export type String_1196 = "Deco";
export type String_1197 = string;
export type String_1198 = string;
export type String_1199 = "INNATE";
export type String_1200 = string;
export type String_1201 = string;
export type String_1202 = string;
export type String_1203 = string;
export type Boolean_83 = boolean;
export type String_1204 = string;
export type Boolean_84 = boolean;
export type String_1205 = string;
export type String_1206 = string;
export type String_1207 = string;
export type Array_135 = Object_404[];
export type Null_88 = null;
export type Array_134 = Object_397[];

export interface REGISTRY_LIST_PUBLISHED_APPSOutput_1 {
  apps: Array_134;
}
export interface Object_397 {
  id: String_1178;
  workspace: String_1179;
  scopeId: String_1180;
  scopeName: String_1181;
  appName: String_1182;
  name: String_1183;
  description?: String_1184;
  icon?: String_1185;
  connection: Object_398 | Object_399 | Object_401 | Object_402 | Object_403;
  createdAt: String_1202;
  updatedAt: String_1203;
  unlisted: Boolean_83;
  friendlyName?: String_1204;
  verified?: Boolean_84;
  tools?: Array_135;
  metadata?: Object_408 | Null_88;
}
export interface Object_398 {
  type: String_1186;
  url: String_1187;
  token?: String_1188;
}
export interface Object_399 {
  type: String_1189;
  url: String_1190;
  token?: String_1191;
  headers?: Object_400;
}
export interface Object_400 {
  [k: string]: String_1192;
}
export interface Object_401 {
  type: String_1193;
  url: String_1194;
  token?: String_1195;
}
export interface Object_402 {
  type: String_1196;
  tenant: String_1197;
  token?: String_1198;
}
export interface Object_403 {
  type: String_1199;
  name: String_1200;
  workspace?: String_1201;
}
export interface Object_404 {
  id: String_1205;
  name: String_1206;
  description?: String_1207;
  inputSchema: Object_405;
  outputSchema?: Object_406;
  metadata?: Object_407;
}
export interface Object_405 {
  [k: string]: unknown;
}
export interface Object_406 {
  [k: string]: unknown;
}
export interface Object_407 {
  [k: string]: unknown;
}
export interface Object_408 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter scopes by name
 */
export type String_1208 = string;

export interface REGISTRY_LIST_SCOPESInput_1 {
  search?: String_1208;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1209 = string;
export type String_1210 = string;
export type String_1211 = string;
export type String_1212 = string;
export type String_1213 = string;
export type Array_136 = Object_409[];

export interface REGISTRY_LIST_SCOPESOutput_1 {
  scopes: Array_136;
}
export interface Object_409 {
  id: String_1209;
  scopeName: String_1210;
  workspace: String_1211;
  createdAt: String_1212;
  updatedAt: String_1213;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The scope to publish to (defaults to team slug, automatically claimed on first use)
 */
export type String_1214 = string;
/**
 * The name of the app
 */
export type String_1215 = string;
/**
 * A friendly name for the app
 */
export type String_1216 = string;
/**
 * A description of the app
 */
export type String_1217 = string;
/**
 * URL to an icon for the app
 */
export type String_1218 = string;
export type String_1219 = "HTTP";
export type String_1220 = string;
export type String_1221 = string;
export type String_1222 = "SSE";
export type String_1223 = string;
export type String_1224 = string;
export type String_1225 = string;
export type String_1226 = "Websocket";
export type String_1227 = string;
export type String_1228 = string;
export type String_1229 = "Deco";
export type String_1230 = string;
export type String_1231 = string;
export type String_1232 = "INNATE";
export type String_1233 = string;
export type String_1234 = string;
/**
 * Whether the app should be unlisted
 */
export type Boolean_85 = boolean;

export interface REGISTRY_PUBLISH_APPInput_1 {
  scopeName: String_1214;
  name: String_1215;
  friendlyName?: String_1216;
  description?: String_1217;
  icon?: String_1218;
  /**
   * The MCP connection configuration for the app
   */
  connection: Object_410 | Object_411 | Object_413 | Object_414 | Object_415;
  metadata?: Object_416;
  unlisted?: Boolean_85;
}
export interface Object_410 {
  type: String_1219;
  url: String_1220;
  token?: String_1221;
}
export interface Object_411 {
  type: String_1222;
  url: String_1223;
  token?: String_1224;
  headers?: Object_412;
}
export interface Object_412 {
  [k: string]: String_1225;
}
export interface Object_413 {
  type: String_1226;
  url: String_1227;
  token?: String_1228;
}
export interface Object_414 {
  type: String_1229;
  tenant: String_1230;
  token?: String_1231;
}
export interface Object_415 {
  type: String_1232;
  name: String_1233;
  workspace?: String_1234;
}
/**
 * Metadata for the app
 */
export interface Object_416 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface REGISTRY_PUBLISH_APPOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1235 = string;
export type String_1236 = "user" | "assistant" | "system";
export type String_1237 = string;
export type String_1238 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_1239 = string;
/**
 * Media type of the attachment
 */
export type String_1240 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_1241 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_138 = Object_418[];
/**
 * Array of messages for the conversation
 */
export type Array_137 = Object_417[];
/**
 * Skip transaction creation
 */
export type Boolean_86 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_1242 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_122 = number;
/**
 * Temperature for the generation
 */
export type Number_123 = number;
export type String_1243 = string;
export type Array_139 = String_1243[];

export interface AI_GENERATEInput_1 {
  messages: Array_137;
  skipTransaction?: Boolean_86;
  model?: String_1242;
  maxTokens?: Number_122;
  temperature?: Number_123;
  tools?: Object_419;
}
export interface Object_417 {
  id?: String_1235;
  role: String_1236;
  content: String_1237;
  createdAt?: String_1238;
  experimental_attachments?: Array_138;
}
export interface Object_418 {
  name?: String_1239;
  contentType?: String_1240;
  url: String_1241;
}
/**
 * Tools available for the generation
 */
export interface Object_419 {
  [k: string]: Array_139;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_1244 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_124 = number;
/**
 * Number of tokens in the completion
 */
export type Number_125 = number;
/**
 * Total number of tokens used
 */
export type Number_126 = number;
/**
 * Transaction ID
 */
export type String_1245 = string;
/**
 * Reason why generation finished
 */
export type String_1246 = string;

export interface AI_GENERATEOutput_1 {
  text: String_1244;
  usage: Object_420;
  finishReason?: String_1246;
}
/**
 * Token usage information
 */
export interface Object_420 {
  promptTokens: Number_124;
  completionTokens: Number_125;
  totalTokens: Number_126;
  transactionId?: String_1245;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1247 = string;
export type String_1248 = "user" | "assistant" | "system";
export type String_1249 = string;
export type String_1250 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_1251 = string;
/**
 * Media type of the attachment
 */
export type String_1252 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_1253 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_141 = Object_422[];
/**
 * Array of messages for the conversation
 */
export type Array_140 = Object_421[];
/**
 * Skip transaction creation
 */
export type Boolean_87 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_1254 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_127 = number;
/**
 * Temperature for the generation
 */
export type Number_128 = number;
export type String_1255 = string;
export type Array_142 = String_1255[];

export interface AI_GENERATE_OBJECTInput_1 {
  messages: Array_140;
  schema: Object_423;
  skipTransaction?: Boolean_87;
  model?: String_1254;
  maxTokens?: Number_127;
  temperature?: Number_128;
  tools?: Object_424;
}
export interface Object_421 {
  id?: String_1247;
  role: String_1248;
  content: String_1249;
  createdAt?: String_1250;
  experimental_attachments?: Array_141;
}
export interface Object_422 {
  name?: String_1251;
  contentType?: String_1252;
  url: String_1253;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_423 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_424 {
  [k: string]: Array_142;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_129 = number;
/**
 * Number of tokens in the completion
 */
export type Number_130 = number;
/**
 * Total number of tokens used
 */
export type Number_131 = number;
/**
 * Transaction ID
 */
export type String_1256 = string;
/**
 * Reason why generation finished
 */
export type String_1257 = string;

export interface AI_GENERATE_OBJECTOutput_1 {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_425;
  finishReason?: String_1257;
}
/**
 * Token usage information
 */
export interface Object_425 {
  promptTokens: Number_129;
  completionTokens: Number_130;
  totalTokens: Number_131;
  transactionId?: String_1256;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The API key to check access for, if not provided, the current key from context will be used
 */
export type String_1258 = string;
export type String_1259 = string;
/**
 * All tools that wants to check access
 */
export type Array_143 = String_1259[];

export interface API_KEYS_CHECK_ACCESSInput_1 {
  key?: String_1258;
  tools: Array_143;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_88 = boolean;

export interface API_KEYS_CHECK_ACCESSOutput_1 {
  access: Object_426;
}
export interface Object_426 {
  [k: string]: Boolean_88;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the API key
 */
export type String_1260 = string;
export type String_1261 = "allow" | "deny";
export type String_1262 = string;
export type String_1263 = "is_integration";
export type String_1264 = string;
/**
 * Policies for the API key
 */
export type Array_144 = Object_427[];
export type String_1265 = string;
export type String_1266 = string;

export interface API_KEYS_CREATEInput_1 {
  name: String_1260;
  policies?: Array_144;
  claims?: Object_429;
}
export interface Object_427 {
  effect: String_1261;
  resource: String_1262;
  matchCondition?: Object_428;
}
export interface Object_428 {
  resource: String_1263;
  integrationId: String_1264;
}
/**
 * App Claims to be added to the API key
 */
export interface Object_429 {
  appName: String_1265;
  integrationId: String_1266;
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1267 = string;
/**
 * The name of the API key
 */
export type String_1268 = string;
/**
 * The workspace ID
 */
export type String_1269 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_89 = boolean;
export type String_1270 = "allow" | "deny";
export type String_1271 = string;
export type String_1272 = "is_integration";
export type String_1273 = string;
/**
 * Access policies for the API key
 */
export type Array_145 = Object_430[];
/**
 * Creation timestamp
 */
export type String_1274 = string;
/**
 * Last update timestamp
 */
export type String_1275 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_39 = String_1276 | Null_89;
export type String_1276 = string;
export type Null_89 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_1277 = string;

export interface API_KEYS_CREATEOutput_1 {
  id: String_1267;
  name: String_1268;
  workspace: String_1269;
  enabled: Boolean_89;
  policies: Array_145;
  createdAt: String_1274;
  updatedAt: String_1275;
  deletedAt: StringNull_39;
  value: String_1277;
}
export interface Object_430 {
  effect: String_1270;
  resource: String_1271;
  matchCondition?: Object_431;
}
export interface Object_431 {
  resource: String_1272;
  integrationId: String_1273;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to delete
 */
export type String_1278 = string;

export interface API_KEYS_DELETEInput_1 {
  id: String_1278;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the deleted API key
 */
export type String_1279 = string;
/**
 * Confirmation that the key was deleted
 */
export type Boolean_90 = boolean;

export interface API_KEYS_DELETEOutput_1 {
  id: String_1279;
  deleted: Boolean_90;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to disable
 */
export type String_1280 = string;

export interface API_KEYS_DISABLEInput_1 {
  id: String_1280;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1281 = string;
/**
 * The name of the API key
 */
export type String_1282 = string;
/**
 * The workspace ID
 */
export type String_1283 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_91 = boolean;
export type String_1284 = "allow" | "deny";
export type String_1285 = string;
export type String_1286 = "is_integration";
export type String_1287 = string;
/**
 * Access policies for the API key
 */
export type Array_146 = Object_432[];
/**
 * Creation timestamp
 */
export type String_1288 = string;
/**
 * Last update timestamp
 */
export type String_1289 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_40 = String_1290 | Null_90;
export type String_1290 = string;
export type Null_90 = null;

export interface API_KEYS_DISABLEOutput_1 {
  id: String_1281;
  name: String_1282;
  workspace: String_1283;
  enabled: Boolean_91;
  policies: Array_146;
  createdAt: String_1288;
  updatedAt: String_1289;
  deletedAt: StringNull_40;
}
export interface Object_432 {
  effect: String_1284;
  resource: String_1285;
  matchCondition?: Object_433;
}
export interface Object_433 {
  resource: String_1286;
  integrationId: String_1287;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to enable
 */
export type String_1291 = string;

export interface API_KEYS_ENABLEInput_1 {
  id: String_1291;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1292 = string;
/**
 * The name of the API key
 */
export type String_1293 = string;
/**
 * The workspace ID
 */
export type String_1294 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_92 = boolean;
export type String_1295 = "allow" | "deny";
export type String_1296 = string;
export type String_1297 = "is_integration";
export type String_1298 = string;
/**
 * Access policies for the API key
 */
export type Array_147 = Object_434[];
/**
 * Creation timestamp
 */
export type String_1299 = string;
/**
 * Last update timestamp
 */
export type String_1300 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_41 = String_1301 | Null_91;
export type String_1301 = string;
export type Null_91 = null;

export interface API_KEYS_ENABLEOutput_1 {
  id: String_1292;
  name: String_1293;
  workspace: String_1294;
  enabled: Boolean_92;
  policies: Array_147;
  createdAt: String_1299;
  updatedAt: String_1300;
  deletedAt: StringNull_41;
}
export interface Object_434 {
  effect: String_1295;
  resource: String_1296;
  matchCondition?: Object_435;
}
export interface Object_435 {
  resource: String_1297;
  integrationId: String_1298;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_1302 = string;

export interface API_KEYS_GETInput_1 {
  id: String_1302;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1303 = string;
/**
 * The name of the API key
 */
export type String_1304 = string;
/**
 * The workspace ID
 */
export type String_1305 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_93 = boolean;
export type String_1306 = "allow" | "deny";
export type String_1307 = string;
export type String_1308 = "is_integration";
export type String_1309 = string;
/**
 * Access policies for the API key
 */
export type Array_148 = Object_436[];
/**
 * Creation timestamp
 */
export type String_1310 = string;
/**
 * Last update timestamp
 */
export type String_1311 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_42 = String_1312 | Null_92;
export type String_1312 = string;
export type Null_92 = null;

export interface API_KEYS_GETOutput_1 {
  id: String_1303;
  name: String_1304;
  workspace: String_1305;
  enabled: Boolean_93;
  policies: Array_148;
  createdAt: String_1310;
  updatedAt: String_1311;
  deletedAt: StringNull_42;
}
export interface Object_436 {
  effect: String_1306;
  resource: String_1307;
  matchCondition?: Object_437;
}
export interface Object_437 {
  resource: String_1308;
  integrationId: String_1309;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTInput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1313 = string;
/**
 * The name of the API key
 */
export type String_1314 = string;
/**
 * The workspace ID
 */
export type String_1315 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_94 = boolean;
export type String_1316 = "allow" | "deny";
export type String_1317 = string;
export type String_1318 = "is_integration";
export type String_1319 = string;
/**
 * Access policies for the API key
 */
export type Array_150 = Object_439[];
/**
 * Creation timestamp
 */
export type String_1320 = string;
/**
 * Last update timestamp
 */
export type String_1321 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_43 = String_1322 | Null_93;
export type String_1322 = string;
export type Null_93 = null;
/**
 * List of API keys
 */
export type Array_149 = Object_438[];

export interface API_KEYS_LISTOutput_1 {
  apiKeys: Array_149;
}
export interface Object_438 {
  id: String_1313;
  name: String_1314;
  workspace: String_1315;
  enabled: Boolean_94;
  policies: Array_150;
  createdAt: String_1320;
  updatedAt: String_1321;
  deletedAt: StringNull_43;
}
export interface Object_439 {
  effect: String_1316;
  resource: String_1317;
  matchCondition?: Object_440;
}
export interface Object_440 {
  resource: String_1318;
  integrationId: String_1319;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to reissue
 */
export type String_1323 = string;
export type String_1324 = "allow" | "deny";
export type String_1325 = string;
export type String_1326 = "is_integration";
export type String_1327 = string;
/**
 * Policies of the API key
 */
export type Array_151 = Object_441[];

export interface API_KEYS_REISSUEInput_1 {
  id: String_1323;
  /**
   * New claims to be added to the API key
   */
  claims?: {
    [k: string]: unknown;
  };
  policies?: Array_151;
}
export interface Object_441 {
  effect: String_1324;
  resource: String_1325;
  matchCondition?: Object_442;
}
export interface Object_442 {
  resource: String_1326;
  integrationId: String_1327;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1328 = string;
/**
 * The name of the API key
 */
export type String_1329 = string;
/**
 * The workspace ID
 */
export type String_1330 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_95 = boolean;
export type String_1331 = "allow" | "deny";
export type String_1332 = string;
export type String_1333 = "is_integration";
export type String_1334 = string;
/**
 * Access policies for the API key
 */
export type Array_152 = Object_443[];
/**
 * Creation timestamp
 */
export type String_1335 = string;
/**
 * Last update timestamp
 */
export type String_1336 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_44 = String_1337 | Null_94;
export type String_1337 = string;
export type Null_94 = null;
/**
 * The actual API key value (JWT token) - only returned on creation/reissue
 */
export type String_1338 = string;

export interface API_KEYS_REISSUEOutput_1 {
  id: String_1328;
  name: String_1329;
  workspace: String_1330;
  enabled: Boolean_95;
  policies: Array_152;
  createdAt: String_1335;
  updatedAt: String_1336;
  deletedAt: StringNull_44;
  value: String_1338;
}
export interface Object_443 {
  effect: String_1331;
  resource: String_1332;
  matchCondition?: Object_444;
}
export interface Object_444 {
  resource: String_1333;
  integrationId: String_1334;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_1339 = string;
/**
 * New name for the API key
 */
export type String_1340 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_96 = boolean;
export type String_1341 = "allow" | "deny";
export type String_1342 = string;
export type String_1343 = "is_integration";
export type String_1344 = string;
/**
 * Policies for the API key
 */
export type Array_153 = Object_445[];

export interface API_KEYS_UPDATEInput_1 {
  id: String_1339;
  name?: String_1340;
  enabled?: Boolean_96;
  policies?: Array_153;
}
export interface Object_445 {
  effect: String_1341;
  resource: String_1342;
  matchCondition?: Object_446;
}
export interface Object_446 {
  resource: String_1343;
  integrationId: String_1344;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1345 = string;
/**
 * The name of the API key
 */
export type String_1346 = string;
/**
 * The workspace ID
 */
export type String_1347 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_97 = boolean;
export type String_1348 = "allow" | "deny";
export type String_1349 = string;
export type String_1350 = "is_integration";
export type String_1351 = string;
/**
 * Access policies for the API key
 */
export type Array_154 = Object_447[];
/**
 * Creation timestamp
 */
export type String_1352 = string;
/**
 * Last update timestamp
 */
export type String_1353 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_45 = String_1354 | Null_95;
export type String_1354 = string;
export type Null_95 = null;

export interface API_KEYS_UPDATEOutput_1 {
  id: String_1345;
  name: String_1346;
  workspace: String_1347;
  enabled: Boolean_97;
  policies: Array_154;
  createdAt: String_1352;
  updatedAt: String_1353;
  deletedAt: StringNull_45;
}
export interface Object_447 {
  effect: String_1348;
  resource: String_1349;
  matchCondition?: Object_448;
}
export interface Object_448 {
  resource: String_1350;
  integrationId: String_1351;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to validate
 */
export type String_1355 = string;

export interface API_KEYS_VALIDATEInput_1 {
  id: String_1355;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique identifier of the API key
 */
export type String_1356 = string;
/**
 * The name of the API key
 */
export type String_1357 = string;
/**
 * The workspace ID
 */
export type String_1358 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_98 = boolean;
export type String_1359 = "allow" | "deny";
export type String_1360 = string;
export type String_1361 = "is_integration";
export type String_1362 = string;
/**
 * Access policies for the API key
 */
export type Array_155 = Object_449[];
/**
 * Creation timestamp
 */
export type String_1363 = string;
/**
 * Last update timestamp
 */
export type String_1364 = string;
/**
 * Deletion timestamp (null if not deleted)
 */
export type StringNull_46 = String_1365 | Null_96;
export type String_1365 = string;
export type Null_96 = null;
/**
 * Whether the API key is valid
 */
export type Boolean_99 = boolean;

export interface API_KEYS_VALIDATEOutput_1 {
  id: String_1356;
  name: String_1357;
  workspace: String_1358;
  enabled: Boolean_98;
  policies: Array_155;
  createdAt: String_1363;
  updatedAt: String_1364;
  deletedAt: StringNull_46;
  valid: Boolean_99;
}
export interface Object_449 {
  effect: String_1359;
  resource: String_1360;
  matchCondition?: Object_450;
}
export interface Object_450 {
  resource: String_1361;
  integrationId: String_1362;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1366 = string;

export interface DECO_GET_APP_SCHEMAInput_1 {
  appName: String_1366;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1367 = string;
export type Array_156 = String_1367[];

export interface DECO_GET_APP_SCHEMAOutput_1 {
  schema?: unknown;
  scopes?: Array_156;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1368 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1369 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1370 = string;

export interface DECO_INTEGRATION_INSTALLInput_1 {
  id: String_1368;
  provider?: String_1369;
  appId?: String_1370;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_1371 = string;

export interface DECO_INTEGRATION_INSTALLOutput_1 {
  installationId: String_1371;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_1372 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_1373 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_1374 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_1375 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput_1 {
  appName: String_1372;
  returnUrl: String_1373;
  installId: String_1374;
  provider?: String_1375;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_1376 = string;
/**
 * Whether to show contracts
 */
export type Boolean_100 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput_1 {
  query?: String_1376;
  showContracts?: Boolean_100;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1377 = string;
export type String_1378 = string;
export type String_1379 = string;
export type String_1380 = string;
export type String_1381 = string;
export type Null_97 = null;
export type String_1382 = string;
export type Null_98 = null;
export type String_1383 = string;
export type Null_99 = null;
export type String_1384 = "HTTP";
export type String_1385 = string;
export type String_1386 = string;
export type String_1387 = "SSE";
export type String_1388 = string;
export type String_1389 = string;
export type String_1390 = string;
export type String_1391 = "Websocket";
export type String_1392 = string;
export type String_1393 = string;
export type String_1394 = "Deco";
export type String_1395 = string;
export type String_1396 = string;
export type String_1397 = "INNATE";
export type String_1398 = string;
export type String_1399 = string;
export type Null_100 = null;
/**
 * The name of the tool
 */
export type String_1400 = string;
/**
 * The description of the tool
 */
export type String_1401 = string;
export type Array_158 = (Object_459 & Object_461)[];
export type Null_101 = null;
export type String_1402 = string;
export type String_1403 = string;
/**
 * The Integrations that match the query
 */
export type Array_157 = (Object_451 & Object_463)[];

export interface DECO_INTEGRATIONS_SEARCHOutput_1 {
  integrations: Array_157;
}
export interface Object_451 {
  id: String_1377;
  name: String_1378;
  description?: String_1379;
  icon?: String_1380;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1381
      )
    | Null_97;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1382
      )
    | Null_98;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1383
      )
    | Null_99;
  connection: Object_452 | Object_453 | Object_455 | Object_456 | Object_457;
  metadata?: Object_458 | Null_100;
  tools?: Array_158 | Null_101;
}
export interface Object_452 {
  type: String_1384;
  url: String_1385;
  token?: String_1386;
}
export interface Object_453 {
  type: String_1387;
  url: String_1388;
  token?: String_1389;
  headers?: Object_454;
}
export interface Object_454 {
  [k: string]: String_1390;
}
export interface Object_455 {
  type: String_1391;
  url: String_1392;
  token?: String_1393;
}
export interface Object_456 {
  type: String_1394;
  tenant: String_1395;
  token?: String_1396;
}
export interface Object_457 {
  type: String_1397;
  name: String_1398;
  workspace?: String_1399;
}
export interface Object_458 {
  [k: string]: unknown;
}
export interface Object_459 {
  name: String_1400;
  inputSchema: Object_460;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_460 {
  [k: string]: unknown;
}
export interface Object_461 {
  description?: String_1401;
  outputSchema?: Object_462;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_462 {
  [k: string]: unknown;
}
export interface Object_463 {
  provider: String_1402;
  friendlyName?: String_1403;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1404 = string;
export type String_1405 = "HTTP";
export type String_1406 = string;
export type String_1407 = string;
export type String_1408 = "SSE";
export type String_1409 = string;
export type String_1410 = string;
export type String_1411 = string;
export type String_1412 = "Websocket";
export type String_1413 = string;
export type String_1414 = string;
export type String_1415 = "Deco";
export type String_1416 = string;
export type String_1417 = string;
export type String_1418 = "INNATE";
export type String_1419 = string;
export type String_1420 = string;
export type String_1421 = string;
export type Integer_32 = number;
export type String_1422 = string;

export interface INTEGRATIONS_CALL_TOOLInput_2 {
  id?: String_1404;
  connection?: Object_464 | Object_465 | Object_467 | Object_468 | Object_469;
  params: Object_470;
}
export interface Object_464 {
  type: String_1405;
  url: String_1406;
  token?: String_1407;
}
export interface Object_465 {
  type: String_1408;
  url: String_1409;
  token?: String_1410;
  headers?: Object_466;
}
export interface Object_466 {
  [k: string]: String_1411;
}
export interface Object_467 {
  type: String_1412;
  url: String_1413;
  token?: String_1414;
}
export interface Object_468 {
  type: String_1415;
  tenant: String_1416;
  token?: String_1417;
}
export interface Object_469 {
  type: String_1418;
  name: String_1419;
  workspace?: String_1420;
}
export interface Object_470 {
  _meta?: Object_471;
  name: String_1422;
  arguments?: Object_472;
  [k: string]: unknown;
}
export interface Object_471 {
  progressToken?: String_1421 | Integer_32;
  [k: string]: unknown;
}
export interface Object_472 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_2 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1423 = string;
export type String_1424 = string;
export type String_1425 = string;
export type String_1426 = string;
export type String_1427 = string;
export type Null_102 = null;
export type String_1428 = string;
export type Null_103 = null;
export type String_1429 = "HTTP";
export type String_1430 = string;
export type String_1431 = string;
export type String_1432 = "SSE";
export type String_1433 = string;
export type String_1434 = string;
export type String_1435 = string;
export type String_1436 = "Websocket";
export type String_1437 = string;
export type String_1438 = string;
export type String_1439 = "Deco";
export type String_1440 = string;
export type String_1441 = string;
export type String_1442 = "INNATE";
export type String_1443 = string;
export type String_1444 = string;
export type Null_104 = null;
/**
 * The name of the tool
 */
export type String_1445 = string;
/**
 * The description of the tool
 */
export type String_1446 = string;
export type Array_159 = (Object_480 & Object_482)[];
export type Null_105 = null;
export type String_1447 = string;

export interface INTEGRATIONS_CREATEInput_1 {
  id?: String_1423;
  name?: String_1424;
  description?: String_1425;
  icon?: String_1426;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1427
      )
    | Null_102;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1428
      )
    | Null_103;
  connection?: Object_473 | Object_474 | Object_476 | Object_477 | Object_478;
  metadata?: Object_479 | Null_104;
  tools?: Array_159 | Null_105;
  clientIdFromApp?: String_1447;
}
export interface Object_473 {
  type: String_1429;
  url: String_1430;
  token?: String_1431;
}
export interface Object_474 {
  type: String_1432;
  url: String_1433;
  token?: String_1434;
  headers?: Object_475;
}
export interface Object_475 {
  [k: string]: String_1435;
}
export interface Object_476 {
  type: String_1436;
  url: String_1437;
  token?: String_1438;
}
export interface Object_477 {
  type: String_1439;
  tenant: String_1440;
  token?: String_1441;
}
export interface Object_478 {
  type: String_1442;
  name: String_1443;
  workspace?: String_1444;
}
export interface Object_479 {
  [k: string]: unknown;
}
export interface Object_480 {
  name: String_1445;
  inputSchema: Object_481;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_481 {
  [k: string]: unknown;
}
export interface Object_482 {
  description?: String_1446;
  outputSchema?: Object_483;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_483 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1448 = string;

export interface INTEGRATIONS_DELETEInput_1 {
  id: String_1448;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1449 = string;

export interface INTEGRATIONS_GETInput_1 {
  id: String_1449;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1450 = string;

export interface INTEGRATIONS_GET_API_KEYInput_1 {
  integrationId: String_1450;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GET_API_KEYOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1451 = "Channel" | "View";

export interface INTEGRATIONS_LISTInput_1 {
  binder?: String_1451;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1452 = string;
export type String_1453 = string;
export type String_1454 = string;
export type String_1455 = string;
export type String_1456 = string;
export type Null_106 = null;
export type String_1457 = string;
export type Null_107 = null;
export type String_1458 = string;
export type Null_108 = null;
export type String_1459 = "HTTP";
export type String_1460 = string;
export type String_1461 = string;
export type String_1462 = "SSE";
export type String_1463 = string;
export type String_1464 = string;
export type String_1465 = string;
export type String_1466 = "Websocket";
export type String_1467 = string;
export type String_1468 = string;
export type String_1469 = "Deco";
export type String_1470 = string;
export type String_1471 = string;
export type String_1472 = "INNATE";
export type String_1473 = string;
export type String_1474 = string;
export type Null_109 = null;
/**
 * The name of the tool
 */
export type String_1475 = string;
/**
 * The description of the tool
 */
export type String_1476 = string;
export type Array_161 = (Object_492 & Object_494)[];
export type Null_110 = null;
export type Array_160 = Object_484[];

export interface INTEGRATIONS_LISTOutput_1 {
  items: Array_160;
}
export interface Object_484 {
  id: String_1452;
  name: String_1453;
  description?: String_1454;
  icon?: String_1455;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1456
      )
    | Null_106;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1457
      )
    | Null_107;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1458
      )
    | Null_108;
  connection: Object_485 | Object_486 | Object_488 | Object_489 | Object_490;
  metadata?: Object_491 | Null_109;
  tools?: Array_161 | Null_110;
}
export interface Object_485 {
  type: String_1459;
  url: String_1460;
  token?: String_1461;
}
export interface Object_486 {
  type: String_1462;
  url: String_1463;
  token?: String_1464;
  headers?: Object_487;
}
export interface Object_487 {
  [k: string]: String_1465;
}
export interface Object_488 {
  type: String_1466;
  url: String_1467;
  token?: String_1468;
}
export interface Object_489 {
  type: String_1469;
  tenant: String_1470;
  token?: String_1471;
}
export interface Object_490 {
  type: String_1472;
  name: String_1473;
  workspace?: String_1474;
}
export interface Object_491 {
  [k: string]: unknown;
}
export interface Object_492 {
  name: String_1475;
  inputSchema: Object_493;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_493 {
  [k: string]: unknown;
}
export interface Object_494 {
  description?: String_1476;
  outputSchema?: Object_495;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_495 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1477 = string;
export type String_1478 = string;
export type String_1479 = string;
export type String_1480 = string;
export type String_1481 = string;
export type String_1482 = string;
export type Null_111 = null;
export type String_1483 = string;
export type Null_112 = null;
export type String_1484 = string;
export type Null_113 = null;
export type String_1485 = "HTTP";
export type String_1486 = string;
export type String_1487 = string;
export type String_1488 = "SSE";
export type String_1489 = string;
export type String_1490 = string;
export type String_1491 = string;
export type String_1492 = "Websocket";
export type String_1493 = string;
export type String_1494 = string;
export type String_1495 = "Deco";
export type String_1496 = string;
export type String_1497 = string;
export type String_1498 = "INNATE";
export type String_1499 = string;
export type String_1500 = string;
export type Null_114 = null;
/**
 * The name of the tool
 */
export type String_1501 = string;
/**
 * The description of the tool
 */
export type String_1502 = string;
export type Array_162 = (Object_504 & Object_506)[];
export type Null_115 = null;

export interface INTEGRATIONS_UPDATEInput_1 {
  id: String_1477;
  integration: Object_496;
}
export interface Object_496 {
  id: String_1478;
  name: String_1479;
  description?: String_1480;
  icon?: String_1481;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1482
      )
    | Null_111;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1483
      )
    | Null_112;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_1484
      )
    | Null_113;
  connection: Object_497 | Object_498 | Object_500 | Object_501 | Object_502;
  metadata?: Object_503 | Null_114;
  tools?: Array_162 | Null_115;
}
export interface Object_497 {
  type: String_1485;
  url: String_1486;
  token?: String_1487;
}
export interface Object_498 {
  type: String_1488;
  url: String_1489;
  token?: String_1490;
  headers?: Object_499;
}
export interface Object_499 {
  [k: string]: String_1491;
}
export interface Object_500 {
  type: String_1492;
  url: String_1493;
  token?: String_1494;
}
export interface Object_501 {
  type: String_1495;
  tenant: String_1496;
  token?: String_1497;
}
export interface Object_502 {
  type: String_1498;
  name: String_1499;
  workspace?: String_1500;
}
export interface Object_503 {
  [k: string]: unknown;
}
export interface Object_504 {
  name: String_1501;
  inputSchema: Object_505;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_505 {
  [k: string]: unknown;
}
export interface Object_506 {
  description?: String_1502;
  outputSchema?: Object_507;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_507 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_1503 = string;
/**
 * The description of the tool
 */
export type String_1504 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1505 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1506 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_163 = Object_511[];

export interface DECO_RESOURCE_TOOL_CREATEInput_1 {
  data: Object_508;
}
/**
 * Resource data to create
 */
export interface Object_508 {
  name: String_1503;
  description: String_1504;
  inputSchema: Object_509;
  outputSchema: Object_510;
  execute: String_1505;
  dependencies?: Array_163;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_509 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_510 {
  [k: string]: unknown;
}
export interface Object_511 {
  integrationId: String_1506;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_1507 = string;
/**
 * The name of the tool
 */
export type String_1508 = string;
/**
 * The description of the tool
 */
export type String_1509 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1510 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1511 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_164 = Object_515[];
/**
 * Creation timestamp
 */
export type String_1512 = string;
/**
 * Last update timestamp
 */
export type String_1513 = string;
/**
 * User who created the resource
 */
export type String_1514 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput_1 {
  uri: String_1507;
  data: Object_512;
  created_at?: String_1512;
  updated_at?: String_1513;
  created_by?: String_1514;
}
/**
 * Created resource data
 */
export interface Object_512 {
  name: String_1508;
  description: String_1509;
  inputSchema: Object_513;
  outputSchema: Object_514;
  execute: String_1510;
  dependencies?: Array_164;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_513 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_514 {
  [k: string]: unknown;
}
export interface Object_515 {
  integrationId: String_1511;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_1515 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput_1 {
  uri: String_1515;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_101 = boolean;
/**
 * URI of the deleted resource
 */
export type String_1516 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput_1 {
  success: Boolean_101;
  uri: String_1516;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1517 = string;

export interface DECO_RESOURCE_TOOL_READInput_1 {
  uri: String_1517;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1518 = string;
/**
 * The name of the tool
 */
export type String_1519 = string;
/**
 * The description of the tool
 */
export type String_1520 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1521 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1522 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_165 = Object_519[];
/**
 * Creation timestamp
 */
export type String_1523 = string;
/**
 * Last update timestamp
 */
export type String_1524 = string;
/**
 * User who created the resource
 */
export type String_1525 = string;
/**
 * User who last updated the resource
 */
export type String_1526 = string;

export interface DECO_RESOURCE_TOOL_READOutput_1 {
  uri: String_1518;
  data: Object_516;
  created_at?: String_1523;
  updated_at?: String_1524;
  created_by?: String_1525;
  updated_by?: String_1526;
}
/**
 * Resource data
 */
export interface Object_516 {
  name: String_1519;
  description: String_1520;
  inputSchema: Object_517;
  outputSchema: Object_518;
  execute: String_1521;
  dependencies?: Array_165;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_517 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_518 {
  [k: string]: unknown;
}
export interface Object_519 {
  integrationId: String_1522;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1527 = string;
/**
 * Page number (1-based)
 */
export type Integer_33 = number;
/**
 * Number of items per page
 */
export type Integer_34 = number;
/**
 * Field to sort by
 */
export type String_1528 = string;
/**
 * Sort order
 */
export type String_1529 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput_1 {
  term?: String_1527;
  page?: Integer_33;
  pageSize?: Integer_34;
  filters?: Object_520;
  sortBy?: String_1528;
  sortOrder?: String_1529;
}
/**
 * Additional filters to apply
 */
export interface Object_520 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1530 = string;
export type String_1531 = string;
/**
 * Description of the resource
 */
export type String_1532 = string;
/**
 * URL to the resource icon
 */
export type String_1533 = string;
/**
 * The name of the tool
 */
export type String_1534 = string;
/**
 * The description of the tool
 */
export type String_1535 = string;
/**
 * Creation timestamp
 */
export type String_1536 = string;
/**
 * Last update timestamp
 */
export type String_1537 = string;
/**
 * User who created the resource
 */
export type String_1538 = string;
/**
 * User who last updated the resource
 */
export type String_1539 = string;
/**
 * Array of matching resources
 */
export type Array_166 = Object_521[];
/**
 * Total number of matching resources
 */
export type Integer_35 = number;
/**
 * Current page number
 */
export type Integer_36 = number;
/**
 * Number of items per page
 */
export type Integer_37 = number;
/**
 * Total number of pages
 */
export type Integer_38 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_102 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_103 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput_1 {
  items: Array_166;
  totalCount: Integer_35;
  page: Integer_36;
  pageSize: Integer_37;
  totalPages: Integer_38;
  hasNextPage: Boolean_102;
  hasPreviousPage: Boolean_103;
}
export interface Object_521 {
  uri: String_1530;
  /**
   * Resource data with required name
   */
  data: Object_522 & Object_523;
  created_at?: String_1536;
  updated_at?: String_1537;
  created_by?: String_1538;
  updated_by?: String_1539;
}
export interface Object_522 {
  name: String_1531;
  description?: String_1532;
  icon?: String_1533;
}
export interface Object_523 {
  name: String_1534;
  description: String_1535;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_1540 = string;
/**
 * The name of the tool
 */
export type String_1541 = string;
/**
 * The description of the tool
 */
export type String_1542 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1543 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1544 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_167 = Object_527[];

export interface DECO_RESOURCE_TOOL_UPDATEInput_1 {
  uri: String_1540;
  data: Object_524;
}
/**
 * Updated resource data
 */
export interface Object_524 {
  name: String_1541;
  description: String_1542;
  inputSchema: Object_525;
  outputSchema: Object_526;
  execute: String_1543;
  dependencies?: Array_167;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_525 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_526 {
  [k: string]: unknown;
}
export interface Object_527 {
  integrationId: String_1544;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_1545 = string;
/**
 * The name of the tool
 */
export type String_1546 = string;
/**
 * The description of the tool
 */
export type String_1547 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1548 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1549 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_168 = Object_531[];
/**
 * Original creation timestamp
 */
export type String_1550 = string;
/**
 * Last update timestamp
 */
export type String_1551 = string;
/**
 * User who originally created the resource
 */
export type String_1552 = string;
/**
 * User who last updated the resource
 */
export type String_1553 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput_1 {
  uri: String_1545;
  data: Object_528;
  created_at?: String_1550;
  updated_at?: String_1551;
  created_by?: String_1552;
  updated_by?: String_1553;
}
/**
 * Updated resource data
 */
export interface Object_528 {
  name: String_1546;
  description: String_1547;
  inputSchema: Object_529;
  outputSchema: Object_530;
  execute: String_1548;
  dependencies?: Array_168;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_529 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_530 {
  [k: string]: unknown;
}
export interface Object_531 {
  integrationId: String_1549;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_1554 = string;
/**
 * The token to use for the tool execution
 */
export type String_1555 = string;

export interface DECO_TOOL_CALL_TOOLInput_1 {
  uri: String_1554;
  input: Object_532;
  authorization?: String_1555;
}
/**
 * The input of the code
 */
export interface Object_532 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1556 = "log" | "warn" | "error";
export type String_1557 = string;
/**
 * Console logs from the execution
 */
export type Array_169 = Object_533[];

export interface DECO_TOOL_CALL_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_169;
}
export interface Object_533 {
  type: String_1556;
  content: String_1557;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_1558 = string;
/**
 * The description of the tool
 */
export type String_1559 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_1560 = string;
/**
 * The integration ID (format: i:<uuid>) that this tool depends on
 */
export type String_1561 = string;
/**
 * List of integrations this tool depends on. These integrations must be installed and available for the tool to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_170 = Object_537[];
/**
 * The token to use for the tool execution
 */
export type String_1562 = string;

export interface DECO_TOOL_RUN_TOOLInput_1 {
  tool: Object_534;
  input: Object_538;
  authorization?: String_1562;
}
export interface Object_534 {
  name: String_1558;
  description: String_1559;
  inputSchema: Object_535;
  outputSchema: Object_536;
  execute: String_1560;
  dependencies?: Array_170;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_535 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_536 {
  [k: string]: unknown;
}
export interface Object_537 {
  integrationId: String_1561;
}
/**
 * The input of the code
 */
export interface Object_538 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1563 = "log" | "warn" | "error";
export type String_1564 = string;
/**
 * Console logs from the execution
 */
export type Array_171 = Object_539[];

export interface DECO_TOOL_RUN_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_171;
}
export interface Object_539 {
  type: String_1563;
  content: String_1564;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1565 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput_1 {
  resource: String_1565;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1566 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1567 = string;
export type String_1568 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_172 = String_1568[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput_1 {
  url: String_1566;
  prompt?: String_1567;
  tools?: Array_172;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to create
 */
export type String_1569 = string;
/**
 * The source branch to branch from (optional - creates empty branch if not provided)
 */
export type String_1570 = string;

export interface CREATE_BRANCHInput_1 {
  branchName: String_1569;
  sourceBranch?: String_1570;
  metadata?: Object_540;
}
/**
 * Optional metadata for the branch
 */
export interface Object_540 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1571 = string;
export type String_1572 = string;
export type Number_132 = number;

export interface CREATE_BRANCHOutput_1 {
  branchName: String_1571;
  sourceBranch?: String_1572;
  createdAt: Number_132;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to delete
 */
export type String_1573 = string;

export interface DELETE_BRANCHInput_1 {
  branchName: String_1573;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_104 = boolean;
export type String_1574 = string;
export type Number_133 = number;

export interface DELETE_BRANCHOutput_1 {
  deleted: Boolean_104;
  branchName: String_1574;
  filesDeleted?: Number_133;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1575 = string;
/**
 * The file path within the branch
 */
export type String_1576 = string;

export interface DELETE_FILEInput_1 {
  branch?: String_1575;
  path: String_1576;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_105 = boolean;

export interface DELETE_FILEOutput_1 {
  deleted: Boolean_105;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The base branch to compare from (defaults to 'main')
 */
export type String_1577 = string;
/**
 * The branch to compare against
 */
export type String_1578 = string;

export interface DIFF_BRANCHInput_1 {
  baseBranch?: String_1577;
  compareBranch: String_1578;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1579 = string;
export type String_1580 = "added" | "modified" | "deleted";
export type String_1581 = string;
export type String_1582 = string;
export type Array_173 = Object_541[];

export interface DIFF_BRANCHOutput_1 {
  differences: Array_173;
}
export interface Object_541 {
  path: String_1579;
  type: String_1580;
  baseAddress?: String_1581;
  compareAddress?: String_1582;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Optional prefix to filter branch names
 */
export type String_1583 = string;

export interface LIST_BRANCHESInput_1 {
  prefix?: String_1583;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1584 = string;
export type Number_134 = number;
export type StringNull_47 = String_1585 | Null_116;
export type String_1585 = string;
export type Null_116 = null;
export type Array_174 = Object_542[];
export type Number_135 = number;

export interface LIST_BRANCHESOutput_1 {
  branches: Array_174;
  count: Number_135;
}
export interface Object_542 {
  name: String_1584;
  createdAt: Number_134;
  metadata: Object_543;
  originBranch: StringNull_47;
}
export interface Object_543 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1586 = string;
/**
 * Optional prefix to filter files (use select instead)
 */
export type String_1587 = string;
export type String_1588 = string;
/**
 * Optional list of files to select
 */
export type Array_175 = String_1588[];
/**
 * Include file content as base64 in the response
 */
export type Boolean_106 = boolean;

export interface LIST_FILESInput_1 {
  branch?: String_1586;
  prefix?: String_1587;
  select?: Array_175;
  includeContent?: Boolean_106;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1589 = string;
export type Number_136 = number;
export type Number_137 = number;
export type Number_138 = number;
export type String_1590 = string;
export type Number_139 = number;

export interface LIST_FILESOutput_1 {
  files: Object_544;
  count: Number_139;
}
export interface Object_544 {
  [k: string]: Object_545;
}
export interface Object_545 {
  address: String_1589;
  metadata: Object_546;
  sizeInBytes: Number_136;
  mtime: Number_137;
  ctime: Number_138;
  content?: String_1590;
}
export interface Object_546 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch to merge into (defaults to 'main')
 */
export type String_1591 = string;
/**
 * The branch to merge from
 */
export type String_1592 = string;
/**
 * Merge strategy
 */
export type String_1593 = "OVERRIDE" | "LAST_WRITE_WINS";

export interface MERGE_BRANCHInput_1 {
  targetBranch?: String_1591;
  sourceBranch: String_1592;
  strategy: String_1593;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_140 = number;
export type String_1594 = string;
export type Array_176 = String_1594[];
export type String_1595 = string;
export type Array_177 = String_1595[];
export type String_1596 = string;
export type Array_178 = String_1596[];
export type String_1597 = string;
export type String_1598 = "local" | "remote";
export type Number_141 = number;
export type Number_142 = number;
export type Array_179 = Object_547[];

export interface MERGE_BRANCHOutput_1 {
  filesMerged: Number_140;
  added: Array_176;
  modified: Array_177;
  deleted: Array_178;
  conflicts?: Array_179;
}
export interface Object_547 {
  path: String_1597;
  resolved: String_1598;
  localMtime: Number_141;
  remoteMtime: Number_142;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1599 = string;
/**
 * The file path within the branch
 */
export type String_1600 = string;
/**
 * Plain text string content
 */
export type String_1601 = string;
/**
 * Base64 encoded content
 */
export type String_1602 = string;
export type Number_143 = number;
/**
 * Array of bytes (0-255)
 */
export type Array_180 = Number_143[];
/**
 * Expected change time for conflict detection
 */
export type Number_144 = number;

export interface PUT_FILEInput_1 {
  branch?: String_1599;
  path: String_1600;
  /**
   * The file content as plain string, base64 object, or array of bytes
   */
  content: String_1601 | Object_548 | Array_180;
  metadata?: Object_549;
  expectedCtime?: Number_144;
}
export interface Object_548 {
  base64: String_1602;
}
/**
 * Additional metadata key-value pairs
 */
export interface Object_549 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_107 = boolean;

export interface PUT_FILEOutput_1 {
  conflict?: Boolean_107;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_1603 = string;
/**
 * The file path within the branch
 */
export type String_1604 = string;
/**
 * Return format: 'base64' (default), 'byteArray', 'plainString', or 'json'
 */
export type String_1605 = "base64" | "byteArray" | "plainString" | "json";

export interface READ_FILEInput_1 {
  branch?: String_1603;
  path: String_1604;
  format?: String_1605;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1606 = string;
export type Number_145 = number;
export type Number_146 = number;

export interface READ_FILEOutput_1 {
  content?: unknown;
  address: String_1606;
  metadata: Object_550;
  mtime: Number_145;
  ctime: Number_146;
}
export interface Object_550 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1607 = string;
export type String_1608 = string;
export type String_1609 = string;
export type String_1610 = string;
export type String_1611 = string;
export type String_1612 = string;
export type String_1613 = string;
export type String_1614 = string;
export type String_1615 = string;
export type Array_182 = String_1615[];
export type String_1616 = string;
export type Array_183 = String_1616[];
export type String_1617 = "none" | "open" | "autoPin";
export type Array_181 = Object_551[];

export interface DECO_CHAT_VIEWS_LISTOutput_1 {
  views: Array_181;
}
export interface Object_551 {
  id?: String_1607;
  name?: String_1608;
  title: String_1609;
  description?: String_1610;
  icon: String_1611;
  url?: String_1612;
  mimeTypePattern?: String_1613;
  resourceName?: String_1614;
  tools?: Array_182;
  rules?: Array_183;
  installBehavior?: String_1617;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_1618 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1619 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_184 = [Object_555, ...Object_555[]];
/**
 * The unique name of the step within the workflow
 */
export type String_1620 = string;
/**
 * A clear description of what this step does
 */
export type String_1621 = string;
/**
 * The prompt used to generate the step
 */
export type String_1622 = string;
/**
 * Status of the step execution
 */
export type String_1623 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1624 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1625 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_185 = Object_560[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_39 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_40 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1626 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_147 = number;
/**
 * The authorization token for the workflow
 */
export type String_1627 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput_1 {
  data: Object_552;
}
/**
 * Resource data to create
 */
export interface Object_552 {
  name: String_1618;
  description: String_1619;
  inputSchema: Object_553;
  outputSchema: Object_554;
  steps: Array_184;
  authorization?: Object_563;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_553 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_554 {
  [k: string]: unknown;
}
export interface Object_555 {
  name: String_1620;
  description: String_1621;
  prompt?: String_1622;
  inputSchema: Object_556;
  outputSchema: Object_557;
  input: Object_558;
  output: Object_559;
  status?: String_1623;
  execute: String_1624;
  dependencies?: Array_185;
  options?: Object_561;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_556 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_557 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_558 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_559 {
  [k: string]: unknown;
}
export interface Object_560 {
  integrationId: String_1625;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_561 {
  retries?: Object_562;
  timeout?: Number_147;
}
export interface Object_562 {
  limit?: Integer_39;
  delay?: Integer_40;
  backoff?: String_1626;
}
export interface Object_563 {
  token: String_1627;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_1628 = string;
/**
 * The unique name of the workflow
 */
export type String_1629 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1630 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_186 = [Object_567, ...Object_567[]];
/**
 * The unique name of the step within the workflow
 */
export type String_1631 = string;
/**
 * A clear description of what this step does
 */
export type String_1632 = string;
/**
 * The prompt used to generate the step
 */
export type String_1633 = string;
/**
 * Status of the step execution
 */
export type String_1634 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1635 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1636 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_187 = Object_572[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_41 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_42 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1637 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_148 = number;
/**
 * The authorization token for the workflow
 */
export type String_1638 = string;
/**
 * Creation timestamp
 */
export type String_1639 = string;
/**
 * Last update timestamp
 */
export type String_1640 = string;
/**
 * User who created the resource
 */
export type String_1641 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput_1 {
  uri: String_1628;
  data: Object_564;
  created_at?: String_1639;
  updated_at?: String_1640;
  created_by?: String_1641;
}
/**
 * Created resource data
 */
export interface Object_564 {
  name: String_1629;
  description: String_1630;
  inputSchema: Object_565;
  outputSchema: Object_566;
  steps: Array_186;
  authorization?: Object_575;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_565 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_566 {
  [k: string]: unknown;
}
export interface Object_567 {
  name: String_1631;
  description: String_1632;
  prompt?: String_1633;
  inputSchema: Object_568;
  outputSchema: Object_569;
  input: Object_570;
  output: Object_571;
  status?: String_1634;
  execute: String_1635;
  dependencies?: Array_187;
  options?: Object_573;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_568 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_569 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_570 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_571 {
  [k: string]: unknown;
}
export interface Object_572 {
  integrationId: String_1636;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_573 {
  retries?: Object_574;
  timeout?: Number_148;
}
export interface Object_574 {
  limit?: Integer_41;
  delay?: Integer_42;
  backoff?: String_1637;
}
export interface Object_575 {
  token: String_1638;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_1642 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput_1 {
  uri: String_1642;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_108 = boolean;
/**
 * URI of the deleted resource
 */
export type String_1643 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput_1 {
  success: Boolean_108;
  uri: String_1643;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1644 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput_1 {
  uri: String_1644;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1645 = string;
/**
 * The unique name of the workflow
 */
export type String_1646 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1647 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_188 = [Object_579, ...Object_579[]];
/**
 * The unique name of the step within the workflow
 */
export type String_1648 = string;
/**
 * A clear description of what this step does
 */
export type String_1649 = string;
/**
 * The prompt used to generate the step
 */
export type String_1650 = string;
/**
 * Status of the step execution
 */
export type String_1651 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1652 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1653 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_189 = Object_584[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_43 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_44 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1654 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_149 = number;
/**
 * The authorization token for the workflow
 */
export type String_1655 = string;
/**
 * Creation timestamp
 */
export type String_1656 = string;
/**
 * Last update timestamp
 */
export type String_1657 = string;
/**
 * User who created the resource
 */
export type String_1658 = string;
/**
 * User who last updated the resource
 */
export type String_1659 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput_1 {
  uri: String_1645;
  data: Object_576;
  created_at?: String_1656;
  updated_at?: String_1657;
  created_by?: String_1658;
  updated_by?: String_1659;
}
/**
 * Resource data
 */
export interface Object_576 {
  name: String_1646;
  description: String_1647;
  inputSchema: Object_577;
  outputSchema: Object_578;
  steps: Array_188;
  authorization?: Object_587;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_577 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_578 {
  [k: string]: unknown;
}
export interface Object_579 {
  name: String_1648;
  description: String_1649;
  prompt?: String_1650;
  inputSchema: Object_580;
  outputSchema: Object_581;
  input: Object_582;
  output: Object_583;
  status?: String_1651;
  execute: String_1652;
  dependencies?: Array_189;
  options?: Object_585;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_580 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_581 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_582 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_583 {
  [k: string]: unknown;
}
export interface Object_584 {
  integrationId: String_1653;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_585 {
  retries?: Object_586;
  timeout?: Number_149;
}
export interface Object_586 {
  limit?: Integer_43;
  delay?: Integer_44;
  backoff?: String_1654;
}
export interface Object_587 {
  token: String_1655;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_1660 = string;
/**
 * Page number (1-based)
 */
export type Integer_45 = number;
/**
 * Number of items per page
 */
export type Integer_46 = number;
/**
 * Field to sort by
 */
export type String_1661 = string;
/**
 * Sort order
 */
export type String_1662 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput_1 {
  term?: String_1660;
  page?: Integer_45;
  pageSize?: Integer_46;
  filters?: Object_588;
  sortBy?: String_1661;
  sortOrder?: String_1662;
}
/**
 * Additional filters to apply
 */
export interface Object_588 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1663 = string;
export type String_1664 = string;
/**
 * Description of the resource
 */
export type String_1665 = string;
/**
 * URL to the resource icon
 */
export type String_1666 = string;
/**
 * The unique name of the workflow
 */
export type String_1667 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1668 = string;
/**
 * Creation timestamp
 */
export type String_1669 = string;
/**
 * Last update timestamp
 */
export type String_1670 = string;
/**
 * User who created the resource
 */
export type String_1671 = string;
/**
 * User who last updated the resource
 */
export type String_1672 = string;
/**
 * Array of matching resources
 */
export type Array_190 = Object_589[];
/**
 * Total number of matching resources
 */
export type Integer_47 = number;
/**
 * Current page number
 */
export type Integer_48 = number;
/**
 * Number of items per page
 */
export type Integer_49 = number;
/**
 * Total number of pages
 */
export type Integer_50 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_109 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_110 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput_1 {
  items: Array_190;
  totalCount: Integer_47;
  page: Integer_48;
  pageSize: Integer_49;
  totalPages: Integer_50;
  hasNextPage: Boolean_109;
  hasPreviousPage: Boolean_110;
}
export interface Object_589 {
  uri: String_1663;
  /**
   * Resource data with required name
   */
  data: Object_590 & Object_591;
  created_at?: String_1669;
  updated_at?: String_1670;
  created_by?: String_1671;
  updated_by?: String_1672;
}
export interface Object_590 {
  name: String_1664;
  description?: String_1665;
  icon?: String_1666;
}
export interface Object_591 {
  name: String_1667;
  description: String_1668;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_1673 = string;
/**
 * The unique name of the workflow
 */
export type String_1674 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1675 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_191 = [Object_595, ...Object_595[]];
/**
 * The unique name of the step within the workflow
 */
export type String_1676 = string;
/**
 * A clear description of what this step does
 */
export type String_1677 = string;
/**
 * The prompt used to generate the step
 */
export type String_1678 = string;
/**
 * Status of the step execution
 */
export type String_1679 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1680 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1681 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_192 = Object_600[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_51 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_52 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1682 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_150 = number;
/**
 * The authorization token for the workflow
 */
export type String_1683 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput_1 {
  uri: String_1673;
  data: Object_592;
}
/**
 * Updated resource data
 */
export interface Object_592 {
  name: String_1674;
  description: String_1675;
  inputSchema: Object_593;
  outputSchema: Object_594;
  steps: Array_191;
  authorization?: Object_603;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_593 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_594 {
  [k: string]: unknown;
}
export interface Object_595 {
  name: String_1676;
  description: String_1677;
  prompt?: String_1678;
  inputSchema: Object_596;
  outputSchema: Object_597;
  input: Object_598;
  output: Object_599;
  status?: String_1679;
  execute: String_1680;
  dependencies?: Array_192;
  options?: Object_601;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_596 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_597 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_598 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_599 {
  [k: string]: unknown;
}
export interface Object_600 {
  integrationId: String_1681;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_601 {
  retries?: Object_602;
  timeout?: Number_150;
}
export interface Object_602 {
  limit?: Integer_51;
  delay?: Integer_52;
  backoff?: String_1682;
}
export interface Object_603 {
  token: String_1683;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_1684 = string;
/**
 * The unique name of the workflow
 */
export type String_1685 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1686 = string;
/**
 * Array of workflow steps that execute sequentially. Each step can reference previous step outputs using @<step_name>.output.property syntax.
 *
 * @minItems 1
 */
export type Array_193 = [Object_607, ...Object_607[]];
/**
 * The unique name of the step within the workflow
 */
export type String_1687 = string;
/**
 * A clear description of what this step does
 */
export type String_1688 = string;
/**
 * The prompt used to generate the step
 */
export type String_1689 = string;
/**
 * Status of the step execution
 */
export type String_1690 = "pending" | "active" | "completed" | "error";
/**
 * ES module code that exports a default async function: (input: typeof inputSchema, ctx: { env: Record<string, any> }) => Promise<typeof outputSchema>. The input parameter contains the resolved input with all @ references replaced with actual values.
 */
export type String_1691 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this step depends on
 */
export type String_1692 = string;
/**
 * List of integrations this step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully.
 */
export type Array_194 = Object_612[];
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_53 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_54 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1693 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_151 = number;
/**
 * The authorization token for the workflow
 */
export type String_1694 = string;
/**
 * Original creation timestamp
 */
export type String_1695 = string;
/**
 * Last update timestamp
 */
export type String_1696 = string;
/**
 * User who originally created the resource
 */
export type String_1697 = string;
/**
 * User who last updated the resource
 */
export type String_1698 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput_1 {
  uri: String_1684;
  data: Object_604;
  created_at?: String_1695;
  updated_at?: String_1696;
  created_by?: String_1697;
  updated_by?: String_1698;
}
/**
 * Updated resource data
 */
export interface Object_604 {
  name: String_1685;
  description: String_1686;
  inputSchema: Object_605;
  outputSchema: Object_606;
  steps: Array_193;
  authorization?: Object_615;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_605 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_606 {
  [k: string]: unknown;
}
export interface Object_607 {
  name: String_1687;
  description: String_1688;
  prompt?: String_1689;
  inputSchema: Object_608;
  outputSchema: Object_609;
  input: Object_610;
  output: Object_611;
  status?: String_1690;
  execute: String_1691;
  dependencies?: Array_194;
  options?: Object_613;
}
/**
 * JSON Schema defining the input structure for this step
 */
export interface Object_608 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the output structure for this step
 */
export interface Object_609 {
  [k: string]: unknown;
}
/**
 * Input object that complies with inputSchema. Values can reference previous steps using @<step_name>.output.property or workflow input using @input.property
 */
export interface Object_610 {
  [k: string]: unknown;
}
/**
 * Current output of the step if it was executed
 */
export interface Object_611 {
  [k: string]: unknown;
}
export interface Object_612 {
  integrationId: String_1692;
}
/**
 * Step configuration options including retry and timeout settings
 */
export interface Object_613 {
  retries?: Object_614;
  timeout?: Number_151;
}
export interface Object_614 {
  limit?: Integer_53;
  delay?: Integer_54;
  backoff?: String_1693;
}
export interface Object_615 {
  token: String_1694;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1699 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput_1 {
  resource: String_1699;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1700 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_1701 = string;
export type String_1702 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_195 = String_1702[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput_1 {
  url: String_1700;
  prompt?: String_1701;
  tools?: Array_195;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID of the workflow run
 */
export type String_1703 = string;

export interface DECO_WORKFLOW_GET_STATUSInput_1 {
  runId: String_1703;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The current status of the workflow run
 */
export type String_1704 = "pending" | "running" | "completed" | "failed";
/**
 * The name of the step currently being executed (if running)
 */
export type String_1705 = string;
/**
 * Error message if the workflow failed
 */
export type String_1706 = string;
export type String_1707 = "log" | "warn" | "error";
export type String_1708 = string;
/**
 * Console logs from the execution
 */
export type Array_196 = Object_617[];
/**
 * When the workflow started (timestamp)
 */
export type Number_152 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_153 = number;

export interface DECO_WORKFLOW_GET_STATUSOutput_1 {
  status: String_1704;
  currentStep?: String_1705;
  stepResults: Object_616;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_1706;
  logs: Array_196;
  startTime: Number_152;
  endTime?: Number_153;
}
/**
 * Results from completed steps
 */
export interface Object_616 {
  [k: string]: unknown;
}
export interface Object_617 {
  type: String_1707;
  content: String_1708;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_1709 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_1710 = string;

export interface DECO_WORKFLOW_STARTInput_1 {
  uri: String_1709;
  input: Object_618;
  stopAfter?: String_1710;
  state?: Object_619;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_618 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_619 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_1711 = string;
/**
 * Error message if workflow start failed
 */
export type String_1712 = string;

export interface DECO_WORKFLOW_STARTOutput_1 {
  runId?: String_1711;
  error?: String_1712;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1713 = string;

export interface AI_TOOL_EXECUTORInput {
  query: String_1713;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1714 = string;
export type String_1715 = string;
export type String_1716 = string;

export interface AI_TOOL_EXECUTOROutput {
  reasoning: String_1714;
  toolUri: String_1715;
  generatedInput?: unknown;
  result?: unknown;
  error?: String_1716;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1717 = string;
export type String_1718 = string;
export type String_1719 = string;
export type String_1720 = string;
export type String_1721 = string;
export type Array_197 = Object_620[];
export type String_1722 = string;

export interface AUTHORIZE_WORKFLOWInput {
  workflowId: String_1717;
  workflowName: String_1718;
  tools: Array_197;
  existingApiKeyName?: String_1722;
}
export interface Object_620 {
  toolName: String_1719;
  integrationId: String_1720;
  integrationName: String_1721;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_111 = boolean;
export type String_1723 = string;
export type String_1724 = string;
export type Number_154 = number;
export type String_1725 = string;

export interface AUTHORIZE_WORKFLOWOutput {
  success: Boolean_111;
  authToken?: String_1723;
  apiKeyName?: String_1724;
  toolCount: Number_154;
  error?: String_1725;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1726 = string;

export interface CALL_INTEGRATION_TOOLInput {
  id?: String_1726;
  params: Object_621;
}
export interface Object_621 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_112 = boolean;
export type String_1727 = string;

export interface CALL_INTEGRATION_TOOLOutput {
  result?: unknown;
  success: Boolean_112;
  error?: String_1727;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1728 = string;

export interface DECO_CHAT_OAUTH_STARTInput {
  returnUrl: String_1728;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1729 = string;
export type Array_198 = String_1729[];

export interface DECO_CHAT_OAUTH_STARTOutput {
  stateSchema?: unknown;
  scopes?: Array_198;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_STATE_VALIDATIONInput {
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_113 = boolean;

export interface DECO_CHAT_STATE_VALIDATIONOutput {
  valid: Boolean_113;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput_2 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1730 = string;
export type String_1731 = string;
export type String_1732 = string;
export type String_1733 = string;
export type String_1734 = string;
export type String_1735 = string;
export type String_1736 = string;
export type String_1737 = string;
export type String_1738 = string;
export type Array_200 = String_1738[];
export type String_1739 = string;
export type Array_201 = String_1739[];
export type String_1740 = "none" | "open" | "autoPin";
export type Array_199 = Object_622[];

export interface DECO_CHAT_VIEWS_LISTOutput_2 {
  views: Array_199;
}
export interface Object_622 {
  id?: String_1730;
  name?: String_1731;
  title: String_1732;
  description?: String_1733;
  icon: String_1734;
  url?: String_1735;
  mimeTypePattern?: String_1736;
  resourceName?: String_1737;
  tools?: Array_200;
  rules?: Array_201;
  installBehavior?: String_1740;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_1741 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_202 = [Object_624, ...Object_624[]];
/**
 * The unique name of the code step within the workflow
 */
export type String_1742 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_1743 = string;
/**
 * A clear description of what this code step does
 */
export type String_1744 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this code step depends on
 */
export type String_1745 = string;
/**
 * List of integrations this code step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_203 = Object_626[];
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1746 = string;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_55 = number;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_56 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1747 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_155 = number;
export type Null_117 = null;
/**
 * The name of the tool to call
 */
export type String_1748 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1749 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1750 = string;
/**
 * The type of step
 */
export type String_1751 = "code" | "tool_call";
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1752 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput_2 {
  data: Object_623;
}
/**
 * Resource data to create
 */
export interface Object_623 {
  name: String_1741;
  steps: Array_202;
  description: String_1752;
  inputSchema: Object_630;
  outputSchema: Object_631;
}
export interface Object_624 {
  /**
   * The step definition based on the type
   */
  def: Object_625 | Object_627;
  type: String_1751;
}
export interface Object_625 {
  name: String_1742;
  execute: String_1743;
  description: String_1744;
  dependencies?: Array_203;
}
export interface Object_626 {
  integrationId: String_1745;
}
export interface Object_627 {
  name: String_1746;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_628 | Null_117;
  tool_name: String_1748;
  description: String_1749;
  integration: String_1750;
}
export interface Object_628 {
  retries?: Object_629;
  timeout?: Number_155;
}
export interface Object_629 {
  delay?: Integer_55;
  limit?: Integer_56;
  backoff?: String_1747;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_630 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_631 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_1753 = string;
/**
 * The unique name of the workflow
 */
export type String_1754 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_204 = [Object_633, ...Object_633[]];
/**
 * The unique name of the code step within the workflow
 */
export type String_1755 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_1756 = string;
/**
 * A clear description of what this code step does
 */
export type String_1757 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this code step depends on
 */
export type String_1758 = string;
/**
 * List of integrations this code step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_205 = Object_635[];
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1759 = string;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_57 = number;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_58 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1760 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_156 = number;
export type Null_118 = null;
/**
 * The name of the tool to call
 */
export type String_1761 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1762 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1763 = string;
/**
 * The type of step
 */
export type String_1764 = "code" | "tool_call";
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1765 = string;
/**
 * Creation timestamp
 */
export type String_1766 = string;
/**
 * User who created the resource
 */
export type String_1767 = string;
/**
 * Last update timestamp
 */
export type String_1768 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput_2 {
  uri: String_1753;
  data: Object_632;
  created_at?: String_1766;
  created_by?: String_1767;
  updated_at?: String_1768;
}
/**
 * Created resource data
 */
export interface Object_632 {
  name: String_1754;
  steps: Array_204;
  description: String_1765;
  inputSchema: Object_639;
  outputSchema: Object_640;
}
export interface Object_633 {
  /**
   * The step definition based on the type
   */
  def: Object_634 | Object_636;
  type: String_1764;
}
export interface Object_634 {
  name: String_1755;
  execute: String_1756;
  description: String_1757;
  dependencies?: Array_205;
}
export interface Object_635 {
  integrationId: String_1758;
}
export interface Object_636 {
  name: String_1759;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_637 | Null_118;
  tool_name: String_1761;
  description: String_1762;
  integration: String_1763;
}
export interface Object_637 {
  retries?: Object_638;
  timeout?: Number_156;
}
export interface Object_638 {
  delay?: Integer_57;
  limit?: Integer_58;
  backoff?: String_1760;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_639 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_640 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_1769 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput_2 {
  uri: String_1769;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the deleted resource
 */
export type String_1770 = string;
/**
 * Whether the deletion was successful
 */
export type Boolean_114 = boolean;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput_2 {
  uri: String_1770;
  success: Boolean_114;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_1771 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput_2 {
  uri: String_1771;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_1772 = string;
/**
 * The unique name of the workflow
 */
export type String_1773 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_206 = [Object_642, ...Object_642[]];
/**
 * The unique name of the code step within the workflow
 */
export type String_1774 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_1775 = string;
/**
 * A clear description of what this code step does
 */
export type String_1776 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this code step depends on
 */
export type String_1777 = string;
/**
 * List of integrations this code step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_207 = Object_644[];
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1778 = string;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_59 = number;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_60 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1779 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_157 = number;
export type Null_119 = null;
/**
 * The name of the tool to call
 */
export type String_1780 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1781 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1782 = string;
/**
 * The type of step
 */
export type String_1783 = "code" | "tool_call";
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1784 = string;
/**
 * Creation timestamp
 */
export type String_1785 = string;
/**
 * User who created the resource
 */
export type String_1786 = string;
/**
 * Last update timestamp
 */
export type String_1787 = string;
/**
 * User who last updated the resource
 */
export type String_1788 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput_2 {
  uri: String_1772;
  data: Object_641;
  created_at?: String_1785;
  created_by?: String_1786;
  updated_at?: String_1787;
  updated_by?: String_1788;
}
/**
 * Resource data
 */
export interface Object_641 {
  name: String_1773;
  steps: Array_206;
  description: String_1784;
  inputSchema: Object_648;
  outputSchema: Object_649;
}
export interface Object_642 {
  /**
   * The step definition based on the type
   */
  def: Object_643 | Object_645;
  type: String_1783;
}
export interface Object_643 {
  name: String_1774;
  execute: String_1775;
  description: String_1776;
  dependencies?: Array_207;
}
export interface Object_644 {
  integrationId: String_1777;
}
export interface Object_645 {
  name: String_1778;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_646 | Null_119;
  tool_name: String_1780;
  description: String_1781;
  integration: String_1782;
}
export interface Object_646 {
  retries?: Object_647;
  timeout?: Number_157;
}
export interface Object_647 {
  delay?: Integer_59;
  limit?: Integer_60;
  backoff?: String_1779;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_648 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_649 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Page number (1-based)
 */
export type Integer_61 = number;
/**
 * Search term to filter resources
 */
export type String_1789 = string;
/**
 * Field to sort by
 */
export type String_1790 = string;
/**
 * Number of items per page
 */
export type Integer_62 = number;
/**
 * Sort order
 */
export type String_1791 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput_2 {
  page?: Integer_61;
  term?: String_1789;
  sortBy?: String_1790;
  filters?: Object_650;
  pageSize?: Integer_62;
  sortOrder?: String_1791;
}
/**
 * Additional filters to apply
 */
export interface Object_650 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Current page number
 */
export type Integer_63 = number;
/**
 * URI of the resource
 */
export type String_1792 = string;
/**
 * URL to the resource icon
 */
export type String_1793 = string;
export type String_1794 = string;
/**
 * Description of the resource
 */
export type String_1795 = string;
/**
 * The unique name of the workflow
 */
export type String_1796 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1797 = string;
/**
 * Creation timestamp
 */
export type String_1798 = string;
/**
 * User who created the resource
 */
export type String_1799 = string;
/**
 * Last update timestamp
 */
export type String_1800 = string;
/**
 * User who last updated the resource
 */
export type String_1801 = string;
/**
 * Array of matching resources
 */
export type Array_208 = Object_651[];
/**
 * Number of items per page
 */
export type Integer_64 = number;
/**
 * Total number of matching resources
 */
export type Integer_65 = number;
/**
 * Total number of pages
 */
export type Integer_66 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_115 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_116 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput_2 {
  page: Integer_63;
  items: Array_208;
  pageSize: Integer_64;
  totalCount: Integer_65;
  totalPages: Integer_66;
  hasNextPage: Boolean_115;
  hasPreviousPage: Boolean_116;
}
export interface Object_651 {
  uri: String_1792;
  /**
   * Resource data with required name
   */
  data: Object_652 & Object_653 & Object_654;
  created_at?: String_1798;
  created_by?: String_1799;
  updated_at?: String_1800;
  updated_by?: String_1801;
}
export interface Object_652 {}
export interface Object_653 {
  icon?: String_1793;
  name: String_1794;
  description?: String_1795;
  [k: string]: unknown;
}
export interface Object_654 {
  name: String_1796;
  description: String_1797;
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_1802 = string;
/**
 * The unique name of the workflow
 */
export type String_1803 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_209 = [Object_656, ...Object_656[]];
/**
 * The unique name of the code step within the workflow
 */
export type String_1804 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_1805 = string;
/**
 * A clear description of what this code step does
 */
export type String_1806 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this code step depends on
 */
export type String_1807 = string;
/**
 * List of integrations this code step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_210 = Object_658[];
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1808 = string;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_67 = number;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_68 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1809 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_158 = number;
export type Null_120 = null;
/**
 * The name of the tool to call
 */
export type String_1810 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1811 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1812 = string;
/**
 * The type of step
 */
export type String_1813 = "code" | "tool_call";
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1814 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput_2 {
  uri: String_1802;
  data: Object_655;
}
/**
 * Updated resource data
 */
export interface Object_655 {
  name: String_1803;
  steps: Array_209;
  description: String_1814;
  inputSchema: Object_662;
  outputSchema: Object_663;
}
export interface Object_656 {
  /**
   * The step definition based on the type
   */
  def: Object_657 | Object_659;
  type: String_1813;
}
export interface Object_657 {
  name: String_1804;
  execute: String_1805;
  description: String_1806;
  dependencies?: Array_210;
}
export interface Object_658 {
  integrationId: String_1807;
}
export interface Object_659 {
  name: String_1808;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_660 | Null_120;
  tool_name: String_1810;
  description: String_1811;
  integration: String_1812;
}
export interface Object_660 {
  retries?: Object_661;
  timeout?: Number_158;
}
export interface Object_661 {
  delay?: Integer_67;
  limit?: Integer_68;
  backoff?: String_1809;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_662 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_663 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_1815 = string;
/**
 * The unique name of the workflow
 */
export type String_1816 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_211 = [Object_665, ...Object_665[]];
/**
 * The unique name of the code step within the workflow
 */
export type String_1817 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_1818 = string;
/**
 * A clear description of what this code step does
 */
export type String_1819 = string;
/**
 * The integration ID (format: i:<uuid> or a:<uuid>) that this code step depends on
 */
export type String_1820 = string;
/**
 * List of integrations this code step calls via ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(). These integrations must be installed and available for the step to execute successfully. Use INTEGRATIONS_LIST to find available integration IDs.
 */
export type Array_212 = Object_667[];
/**
 * The unique name of the tool call step within the workflow
 */
export type String_1821 = string;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_69 = number;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_70 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_1822 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_159 = number;
export type Null_121 = null;
/**
 * The name of the tool to call
 */
export type String_1823 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_1824 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_1825 = string;
/**
 * The type of step
 */
export type String_1826 = "code" | "tool_call";
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_1827 = string;
/**
 * Original creation timestamp
 */
export type String_1828 = string;
/**
 * User who originally created the resource
 */
export type String_1829 = string;
/**
 * Last update timestamp
 */
export type String_1830 = string;
/**
 * User who last updated the resource
 */
export type String_1831 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput_2 {
  uri: String_1815;
  data: Object_664;
  created_at?: String_1828;
  created_by?: String_1829;
  updated_at?: String_1830;
  updated_by?: String_1831;
}
/**
 * Updated resource data
 */
export interface Object_664 {
  name: String_1816;
  steps: Array_211;
  description: String_1827;
  inputSchema: Object_671;
  outputSchema: Object_672;
}
export interface Object_665 {
  /**
   * The step definition based on the type
   */
  def: Object_666 | Object_668;
  type: String_1826;
}
export interface Object_666 {
  name: String_1817;
  execute: String_1818;
  description: String_1819;
  dependencies?: Array_212;
}
export interface Object_667 {
  integrationId: String_1820;
}
export interface Object_668 {
  name: String_1821;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_669 | Null_121;
  tool_name: String_1823;
  description: String_1824;
  integration: String_1825;
}
export interface Object_669 {
  retries?: Object_670;
  timeout?: Number_159;
}
export interface Object_670 {
  delay?: Integer_69;
  limit?: Integer_70;
  backoff?: String_1822;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_671 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_672 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_1832 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput_2 {
  resource: String_1832;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_1833 = string;
export type String_1834 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_213 = String_1834[];
/**
 * Optional LLM prompt for this view context
 */
export type String_1835 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput_2 {
  url: String_1833;
  tools?: Array_213;
  prompt?: String_1835;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID of the workflow run
 */
export type String_1836 = string;

export interface DECO_WORKFLOW_GET_STATUSInput_2 {
  runId: String_1836;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1837 = "log" | "warn" | "error";
export type String_1838 = string;
/**
 * Console logs from the execution
 */
export type Array_214 = Object_673[];
/**
 * Error message if the workflow failed
 */
export type String_1839 = string;
/**
 * The current status of the workflow run
 */
export type String_1840 = "pending" | "running" | "completed" | "failed";
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_160 = number;
/**
 * When the workflow started (timestamp)
 */
export type Number_161 = number;
/**
 * The name of the step currently being executed (if running)
 */
export type String_1841 = string;

export interface DECO_WORKFLOW_GET_STATUSOutput_2 {
  logs: Array_214;
  error?: String_1839;
  status: String_1840;
  endTime?: Number_160;
  startTime: Number_161;
  currentStep?: String_1841;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  stepResults: Object_674;
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
}
export interface Object_673 {
  type: String_1837;
  content: String_1838;
}
/**
 * Results from completed steps
 */
export interface Object_674 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_1842 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_1843 = string;

export interface DECO_WORKFLOW_STARTInput_2 {
  uri: String_1842;
  input: Object_675;
  state?: Object_676;
  stopAfter?: String_1843;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_675 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_676 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Error message if workflow start failed
 */
export type String_1844 = string;
/**
 * The unique ID for tracking this workflow run
 */
export type String_1845 = string;

export interface DECO_WORKFLOW_STARTOutput_2 {
  error?: String_1844;
  runId?: String_1845;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_117 = boolean;

export interface DISCOVER_WORKSPACE_TOOLSInput {
  includeSchemas?: Boolean_117;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1846 = string;
export type String_1847 = string;
export type String_1848 = string;
export type String_1849 = string;
export type Number_162 = number;
export type String_1850 = string;
export type String_1851 = string;
export type String_1852 = string;
export type Array_216 = Object_678[];
export type Array_215 = Object_677[];
export type Number_163 = number;
export type String_1853 = string;

export interface DISCOVER_WORKSPACE_TOOLSOutput {
  integrations: Array_215;
  totalTools: Number_163;
  summary: String_1853;
}
export interface Object_677 {
  id: String_1846;
  name: String_1847;
  description: String_1848;
  icon?: String_1849;
  toolCount: Number_162;
  tools: Array_216;
}
export interface Object_678 {
  name: String_1850;
  description: String_1851;
  category: String_1852;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1854 = string;
export type String_1855 = string;
export type String_1856 = string;

export interface EXECUTE_TOOL_SPECInput {
  toolSpec: Object_679;
  input: Object_682;
}
export interface Object_679 {
  name: String_1854;
  description: String_1855;
  inputSchema: Object_680;
  outputSchema: Object_681;
  executeCode: String_1856;
}
export interface Object_680 {
  [k: string]: unknown;
}
export interface Object_681 {
  [k: string]: unknown;
}
export interface Object_682 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1857 = string;
export type Boolean_118 = boolean;

export interface EXECUTE_TOOL_SPECOutput {
  result?: unknown;
  error?: String_1857;
  success: Boolean_118;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * What this step should accomplish
 */
export type String_1858 = string;
export type String_1859 = string;
export type String_1860 = string;
/**
 * Previous steps for context and @ref resolution
 */
export type Array_217 = Object_683[];
export type String_1861 = string;
export type String_1862 = string;
export type String_1863 = string;
export type String_1864 = string;
export type Array_219 = Object_686[];
/**
 * Available integrations (if not provided, uses static catalog)
 */
export type Array_218 = Object_685[];
export type String_1865 = string;
export type String_1866 = string;
export type String_1867 = string;
export type String_1868 = string;
/**
 * Tools explicitly mentioned in prompt with @tool-name syntax
 */
export type Array_220 = Object_687[];

export interface GENERATE_STEPInput {
  objective: String_1858;
  previousSteps?: Array_217;
  availableIntegrations?: Array_218;
  selectedTools?: Array_220;
}
export interface Object_683 {
  id: String_1859;
  name: String_1860;
  outputSchema: Object_684;
}
export interface Object_684 {
  [k: string]: unknown;
}
export interface Object_685 {
  id: String_1861;
  name: String_1862;
  tools: Array_219;
}
export interface Object_686 {
  name: String_1863;
  description: String_1864;
}
export interface Object_687 {
  name: String_1865;
  integrationId: String_1866;
  integrationName: String_1867;
  description?: String_1868;
  inputSchema?: Object_688;
  outputSchema?: Object_689;
}
export interface Object_688 {
  [k: string]: unknown;
}
export interface Object_689 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1869 = string;
export type String_1870 = string;
export type String_1871 = string;
export type String_1872 = string;
export type String_1873 = string;
export type String_1874 = string;
export type String_1875 = string;
export type String_1876 = string;

export interface GENERATE_STEPOutput {
  step: Object_690;
  reasoning?: String_1876;
}
export interface Object_690 {
  id: String_1869;
  name: String_1870;
  description: String_1871;
  code: String_1872;
  inputSchema: Object_691;
  outputSchema: Object_692;
  input: Object_693;
  inputDescription?: Object_694;
  primaryIntegration?: String_1874;
  primaryTool?: String_1875;
  inputView?: Object_695;
  outputView?: Object_696;
}
export interface Object_691 {
  [k: string]: unknown;
}
export interface Object_692 {
  [k: string]: unknown;
}
export interface Object_693 {
  [k: string]: unknown;
}
export interface Object_694 {
  [k: string]: String_1873;
}
export interface Object_695 {
  [k: string]: unknown;
}
export interface Object_696 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Step ID
 */
export type String_1877 = string;
/**
 * Field name from input schema
 */
export type String_1878 = string;
/**
 * Optional previous step ID to use its output data
 */
export type String_1879 = string;
/**
 * First 200 chars of previous step output (for context)
 */
export type String_1880 = string;
/**
 * View name (view1, view2, etc)
 */
export type String_1881 = string;
/**
 * What this input view should do (e.g., 'dropdown with search', 'multi-select')
 */
export type String_1882 = string;

export interface GENERATE_STEP_INPUT_VIEWInput {
  stepId: String_1877;
  fieldName: String_1878;
  fieldSchema: Object_697;
  previousStepId?: String_1879;
  previousStepOutput?: String_1880;
  viewName: String_1881;
  purpose: String_1882;
}
/**
 * Field JSON Schema
 */
export interface Object_697 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Complete HTML with inline CSS and JS
 */
export type String_1883 = string;
/**
 * Explanation of design choices
 */
export type String_1884 = string;

export interface GENERATE_STEP_INPUT_VIEWOutput {
  viewCode: String_1883;
  reasoning: String_1884;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Step ID
 */
export type String_1885 = string;
/**
 * Step name for context
 */
export type String_1886 = string;
/**
 * First 100 chars of actual output data
 */
export type String_1887 = string;
/**
 * View name (view1, view2, etc)
 */
export type String_1888 = string;
/**
 * What this view should emphasize or how it should display data
 */
export type String_1889 = string;

export interface GENERATE_STEP_OUTPUT_VIEWInput {
  stepId: String_1885;
  stepName: String_1886;
  outputSchema: Object_698;
  outputSample: String_1887;
  viewName: String_1888;
  purpose: String_1889;
}
/**
 * Output JSON Schema
 */
export interface Object_698 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Complete HTML with inline CSS and JS
 */
export type String_1890 = string;
/**
 * Explanation of design choices
 */
export type String_1891 = string;

export interface GENERATE_STEP_OUTPUT_VIEWOutput {
  viewCode: String_1890;
  reasoning: String_1891;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Natural language description of what the tool should do
 */
export type String_1892 = string;

export interface GENERATE_TOOL_SPECInput {
  description: String_1892;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1893 = string;
export type String_1894 = string;
export type String_1895 = string;
export type String_1896 = string;
export type String_1897 = string;

export interface GENERATE_TOOL_SPECOutput {
  toolSpec: Object_699;
  reasoning: String_1897;
  suggestedInput?: Object_702;
}
export interface Object_699 {
  id: String_1893;
  name: String_1894;
  description: String_1895;
  inputSchema: Object_700;
  outputSchema: Object_701;
  executeCode: String_1896;
}
export interface Object_700 {
  [k: string]: unknown;
}
export interface Object_701 {
  [k: string]: unknown;
}
export interface Object_702 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * What is this view for? (e.g., 'Display payment information', 'Input form for user data')
 */
export type String_1898 = string;
/**
 * Type of view to generate
 */
export type String_1899 = "input" | "output";
/**
 * Any specific design preferences or requirements
 */
export type String_1900 = string;

export interface GENERATE_VIEWInput {
  purpose: String_1898;
  viewType: String_1899;
  dataSchema: Object_703;
  designPreference?: String_1900;
}
/**
 * JSON Schema of the data this view will handle
 */
export interface Object_703 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1901 =
  | "container"
  | "text"
  | "heading"
  | "card"
  | "table"
  | "list"
  | "badge"
  | "button"
  | "input"
  | "select"
  | "file-upload"
  | "code"
  | "divider";
export type String_1902 = string;
export type Array_221 = (Object_704 | String_1902)[];
export type String_1903 = string;
export type String_1904 =
  | "primary"
  | "secondary"
  | "success"
  | "warning"
  | "error"
  | "info";
export type String_1905 = "sm" | "md" | "lg";
export type String_1906 = "vertical" | "horizontal" | "grid";
export type Number_164 = number;
export type Number_165 = number;
export type Boolean_119 = boolean;
export type Boolean_120 = boolean;
export type String_1907 = string;

export interface GENERATE_VIEWOutput {
  view: Object_704;
  reasoning: String_1907;
  exampleData?: Object_707;
}
export interface Object_704 {
  type: String_1901;
  props?: Object_705;
  children?: Array_221;
  data?: String_1903;
  style?: Object_706;
}
export interface Object_705 {
  [k: string]: unknown;
}
export interface Object_706 {
  variant?: String_1904;
  size?: String_1905;
  layout?: String_1906;
  gap?: Number_164;
  padding?: Number_165;
  border?: Boolean_119;
  rounded?: Boolean_120;
}
export interface Object_707 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1908 = string;

export interface GET_INTEGRATION_DETAILSInput {
  integrationId: String_1908;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_121 = boolean;
export type String_1909 = string;

export interface GET_INTEGRATION_DETAILSOutput {
  integration?: unknown;
  success: Boolean_121;
  error?: String_1909;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_USERInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1910 = string;
export type StringNull_48 = String_1911 | Null_122;
export type String_1911 = string;
export type Null_122 = null;
export type StringNull_49 = String_1912 | Null_123;
export type String_1912 = string;
export type Null_123 = null;
export type String_1913 = string;

export interface GET_USEROutput {
  id: String_1910;
  name: StringNull_48;
  avatar: StringNull_49;
  email: String_1913;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1914 = "input" | "output" | "both";

export interface GET_VIEW_EXAMPLESInput {
  viewType?: String_1914;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1915 = string;
export type String_1916 = string;
export type String_1917 = "input" | "output";
export type String_1918 =
  | "container"
  | "text"
  | "heading"
  | "card"
  | "table"
  | "list"
  | "badge"
  | "button"
  | "input"
  | "select"
  | "file-upload"
  | "code"
  | "divider";
export type String_1919 = string;
export type Array_223 = (Object_709 | String_1919)[];
export type String_1920 = string;
export type String_1921 =
  | "primary"
  | "secondary"
  | "success"
  | "warning"
  | "error"
  | "info";
export type String_1922 = "sm" | "md" | "lg";
export type String_1923 = "vertical" | "horizontal" | "grid";
export type Number_166 = number;
export type Number_167 = number;
export type Boolean_122 = boolean;
export type Boolean_123 = boolean;
export type Array_222 = Object_708[];

export interface GET_VIEW_EXAMPLESOutput {
  examples: Array_222;
}
export interface Object_708 {
  name: String_1915;
  description: String_1916;
  viewType: String_1917;
  view: Object_709;
  exampleData?: Object_712;
}
export interface Object_709 {
  type: String_1918;
  props?: Object_710;
  children?: Array_223;
  data?: String_1920;
  style?: Object_711;
}
export interface Object_710 {
  [k: string]: unknown;
}
export interface Object_711 {
  variant?: String_1921;
  size?: String_1922;
  layout?: String_1923;
  gap?: Number_166;
  padding?: Number_167;
  border?: Boolean_122;
  rounded?: Boolean_123;
}
export interface Object_712 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1924 = string;
export type String_1925 = string;
export type String_1926 = string;
export type String_1927 = string;

export interface IMPORT_TOOL_AS_STEPInput {
  toolName: String_1924;
  integrationId: String_1925;
  integrationName: String_1926;
  toolDescription?: String_1927;
  inputSchema?: Object_713;
  outputSchema?: Object_714;
}
export interface Object_713 {
  [k: string]: unknown;
}
export interface Object_714 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1928 = string;
export type String_1929 = string;
export type String_1930 = string;
export type String_1931 = string;
export type String_1932 = string;
export type String_1933 = string;
export type String_1934 = string;

export interface IMPORT_TOOL_AS_STEPOutput {
  step: Object_715;
}
export interface Object_715 {
  id: String_1928;
  name: String_1929;
  description: String_1930;
  code: String_1931;
  inputSchema: Object_716;
  outputSchema: Object_717;
  input: Object_718;
  inputDescription?: Object_719;
  primaryIntegration: String_1933;
  primaryTool: String_1934;
}
export interface Object_716 {
  [k: string]: unknown;
}
export interface Object_717 {
  [k: string]: unknown;
}
export interface Object_718 {
  [k: string]: unknown;
}
export interface Object_719 {
  [k: string]: String_1932;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LIST_AVAILABLE_TOOLSInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1935 = string;
export type String_1936 = string;
export type String_1937 = string;
export type String_1938 = string;
export type Number_168 = number;
export type String_1939 = string;
export type String_1940 = string;
export type Array_225 = Object_721[];
export type Array_224 = Object_720[];
export type Number_169 = number;
export type String_1941 = string;

export interface LIST_AVAILABLE_TOOLSOutput {
  integrations: Array_224;
  totalTools: Number_169;
  summary: String_1941;
}
export interface Object_720 {
  id: String_1935;
  name: String_1936;
  description?: String_1937;
  url?: String_1938;
  toolCount: Number_168;
  tools: Array_225;
}
export interface Object_721 {
  name: String_1939;
  description?: String_1940;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LIST_INSTALLED_INTEGRATIONSInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1942 = string;
export type String_1943 = string;
export type String_1944 = string;
export type String_1945 = string;
export type Array_226 = Object_722[];
export type Boolean_124 = boolean;

export interface LIST_INSTALLED_INTEGRATIONSOutput {
  integrations: Array_226;
  success: Boolean_124;
}
export interface Object_722 {
  id: String_1942;
  name: String_1943;
  description?: String_1944;
  icon?: String_1945;
  access?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1946 = string;

export interface LIST_REGISTRY_APPSInput {
  search?: String_1946;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1947 = string;
export type String_1948 = string;
export type String_1949 = string;
export type String_1950 = string;
export type String_1951 = string;
export type String_1952 = string;
export type String_1953 = string;
export type String_1954 = string;
export type String_1955 = string;
export type Array_227 = Object_723[];
export type Boolean_125 = boolean;

export interface LIST_REGISTRY_APPSOutput {
  apps: Array_227;
  success: Boolean_125;
}
export interface Object_723 {
  id: String_1947;
  workspace: String_1948;
  scopeId: String_1949;
  scopeName: String_1950;
  appName: String_1951;
  name: String_1952;
  description?: String_1953;
  icon?: String_1954;
  createdAt: String_1955;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LIST_REGISTRY_SCOPESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1956 = string;
export type String_1957 = string;
export type String_1958 = string;
export type String_1959 = string;
export type String_1960 = string;
export type Array_228 = Object_724[];
export type Boolean_126 = boolean;

export interface LIST_REGISTRY_SCOPESOutput {
  scopes: Array_228;
  success: Boolean_126;
}
export interface Object_724 {
  id: String_1956;
  scopeName: String_1957;
  workspace: String_1958;
  createdAt: String_1959;
  updatedAt: String_1960;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Human-readable tool name
 */
export type String_1961 = string;
/**
 * What the tool does
 */
export type String_1962 = string;
/**
 * Complete ES module code string starting with 'export default async function (input, ctx) {'
 */
export type String_1963 = string;

export interface RUN_GENERATED_TOOLInput {
  toolSpec: Object_725;
  input: Object_728;
}
export interface Object_725 {
  name: String_1961;
  description: String_1962;
  inputSchema: Object_726;
  outputSchema: Object_727;
  executeCode: String_1963;
}
/**
 * JSON Schema for input
 */
export interface Object_726 {
  [k: string]: unknown;
}
/**
 * JSON Schema for output
 */
export interface Object_727 {
  [k: string]: unknown;
}
/**
 * Input parameters to pass to the tool
 */
export interface Object_728 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1964 = string;
export type Boolean_127 = boolean;

export interface RUN_GENERATED_TOOLOutput {
  result?: unknown;
  error?: String_1964;
  success: Boolean_127;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1965 = string;
export type String_1966 = string;
export type String_1967 = string;
export type String_1968 = string;

export interface RUN_WORKFLOW_STEPInput {
  step: Object_729;
  previousStepResults?: Object_733;
  globalInput?: Object_734;
  authToken?: String_1968;
}
export interface Object_729 {
  id: String_1965;
  name: String_1966;
  code: String_1967;
  inputSchema: Object_730;
  outputSchema: Object_731;
  input: Object_732;
}
export interface Object_730 {
  [k: string]: unknown;
}
export interface Object_731 {
  [k: string]: unknown;
}
export interface Object_732 {
  [k: string]: unknown;
}
export interface Object_733 {
  [k: string]: unknown;
}
export interface Object_734 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_128 = boolean;
export type String_1969 = string;
export type String_1970 = string;
export type Array_229 = Object_735[];
export type String_1971 = string;
export type String_1972 = string;
export type Array_230 = Object_737[];
export type Number_170 = number;

export interface RUN_WORKFLOW_STEPOutput {
  success: Boolean_128;
  output?: unknown;
  error?: unknown;
  logs?: Array_229;
  resolvedInput?: Object_736;
  resolutionErrors?: Array_230;
  duration?: Number_170;
}
export interface Object_735 {
  type: String_1969;
  content: String_1970;
}
export interface Object_736 {
  [k: string]: unknown;
}
export interface Object_737 {
  ref: String_1971;
  error: String_1972;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VALIDATE_VIEWInput {
  view: Object_738;
}
/**
 * View definition to validate
 */
export interface Object_738 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_129 = boolean;
export type String_1973 = string;
export type Array_231 = String_1973[];
export type String_1974 = string;
export type Array_232 = String_1974[];

export interface VALIDATE_VIEWOutput {
  valid: Boolean_129;
  errors?: Array_231;
  warnings?: Array_232;
}

import { z } from "zod";

export type Mcp<T extends Record<string, (input: any) => Promise<any>>> = {
  [K in keyof T]: ((
    input: Parameters<T[K]>[0],
  ) => Promise<ReturnType<T[K]>>) & {
    asTool: () => Promise<{
      inputSchema: z.ZodType<Parameters<T[K]>[0]>;
      outputSchema?: z.ZodType<ReturnType<T[K]>>;
      description: string;
      id: string;
      execute: ({
        context,
      }: {
        context: Parameters<T[K]>[0];
      }) => Promise<ReturnType<T[K]>>;
    }>;
  };
};

export const StateSchema = z.object({
  TOOLS: z.object({
    value: z.string(),
    __type: z.literal("@deco/tools").default("@deco/tools"),
  }),
  WORKFLOWS_MANAGEMENT: z.object({
    value: z.string(),
    __type: z.literal("@deco/workflows").default("@deco/workflows"),
  }),
  REGISTRY: z.object({
    value: z.string(),
    __type: z.literal("@deco/registry").default("@deco/registry"),
  }),
  AI_GATEWAY: z.object({
    value: z.string(),
    __type: z.literal("@deco/ai-gateway").default("@deco/ai-gateway"),
  }),
  DECONFIG: z.object({
    value: z.string(),
    __type: z.literal("@deco/deconfig").default("@deco/deconfig"),
  }),
  INTEGRATIONS: z.object({
    value: z.string(),
    __type: z.literal("@deco/integrations").default("@deco/integrations"),
  }),
  APIKEYS: z.object({
    value: z.string(),
    __type: z.literal("@deco/api-keys").default("@deco/api-keys"),
  }),
});

export interface Env {
  DECO_CHAT_WORKSPACE: string;
  DECO_CHAT_API_JWT_PUBLIC_KEY: string;
  TOOLS: Mcp<{
    /**
     * Create an executable tool with JSON Schema validation.
     * ## Tool Execute Function
     * Tools must export a default async function:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: validated against tool's inputSchema
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return: must match tool's outputSchema
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * **Key Points:**
     * - **inputSchema** defines the `input` parameter type and validation
     * - **outputSchema** defines the return value type and validation
     * - **execute** is the function code as an inline ES module string
     * - **dependencies** (optional): Array of `{ integrationId }` for ctx.env calls
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - System will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition including metadata, schemas, and execute code.
     * Returns:
     * - Tool metadata (name, description)
     * - Input/output JSON schemas
     * - Execute code (inline ES module)
     * - Dependencies (integration IDs used in ctx.env calls)
     * The tool's execute code uses `ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args)` to call integrations.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update a tool's metadata, schemas, or execution code.
     * ## Execute Function API
     * ```javascript
     * export default async function(input, ctx) {
     * // Call integration tools
     * const result = await ctx.env['i:integration'].tool_name({ args });
     * return { output: result };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain function signature** - Keep `async function(input, ctx)` format
     * 2. **Match schemas** - Input/output must match updated schemas
     * 3. **Use placeholder integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` for any ctx.env calls
     * 5. **Test thoroughly** - Input/output are validated automatically
     * **Integration IDs:**
     * - Use placeholders like `i:slack` if you don't know the ID
     * - Validation errors will list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
  }>;
  WORKFLOWS_MANAGEMENT: Mcp<{
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Create a workflow with sequential code steps.
     * ## Execution Pattern
     * Workflows consist of sequential code steps where each step can reference previous step outputs using @ syntax:
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** in the input object to reference previous step outputs or workflow input
     * 3. **@ References** are resolved before step execution
     * 4. **Final step output** must match the workflow's output schema
     * ## Step Structure
     * Each step must define:
     * ```json
     * {
     * "name": "send-notification",
     * "description": "Send a notification using the Slack API",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string" },
     * "message": { "type": "string" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "timestamp": { "type": "string" }
     * }
     * },
     * "input": {
     * "channel": "@input.slackChannel",
     * "message": "@process-data.output.formattedMessage"
     * },
     * "execute": "export default async function(input, ctx) { ... }",
     * "dependencies": [{ "integrationId": "i:slack-123" }]
     * }
     * ```
     * ## @ Reference Syntax
     * Use @ references to declaratively connect step inputs to outputs:
     * - **Workflow input**: `@input.propertyName`
     * - **Previous step output**: `@<step-name>.output.propertyName`
     * - **Nested properties**: `@step-1.output.data.user.name`
     * The system automatically resolves these references before executing each step.
     * ## Execute Function
     * The execute function receives the **resolved input** (with @ references replaced by actual values):
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // No need for ctx.readWorkflowInput() or ctx.readStepResult()
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack-123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return data matching outputSchema
     * return { success: true, timestamp: new Date().toISOString() };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * ## Best Practices
     * 1. **Define clear schemas** - inputSchema and outputSchema should be precise
     * 2. **Use @ references** - Declaratively wire data flow between steps
     * 3. **Keep steps focused** - Each step should do one thing well
     * 4. **Use placeholders for integration IDs** - Validation errors will list available integrations
     * 5. **Test incrementally** - Use stopAfter to test each step individually
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions with @ references for data flow
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow with sequential code steps using @ references.
     * ## Execution Pattern Reminder
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** to connect step inputs to previous outputs
     * 3. **@ References are resolved** before step execution
     * 4. **Final step output** must match workflow's output schema
     * ## Update Guidelines
     * 1. **Define clear schemas** - Update inputSchema and outputSchema as needed
     * 2. **Use @ references** - Update the input object to wire data between steps
     * 3. **Update execute code** - Remember that input is already resolved (no ctx.readStepResult needed)
     * 4. **Update dependencies** - Add `{ integrationId }` if using ctx.env
     * 5. **Test incrementally** - Use stopAfter to test each updated step
     * ## @ Reference Examples
     * ```json
     * {
     * "input": {
     * "userId": "@input.userId",
     * "previousResult": "@step-1.output.data",
     * "nestedValue": "@step-2.output.user.email"
     * }
     * }
     * ```
     * ## Execute Function Signature
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // ctx.env contains integration tools
     * const result = await ctx.env['i:integration-id'].tool_name(input);
     * return { success: true, data: result };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Get the status and output of a workflow run.
     * This tool retrieves the current status and results of a workflow execution, including:
     * - Current execution status (pending, running, completed, failed)
     * - Results from completed steps
     * - Final workflow output (if completed)
     * - Error information (if failed)
     * - Execution logs and timing information
     * Use this tool to monitor workflow progress, retrieve results, or debug failed executions.
     */
    DECO_WORKFLOW_GET_STATUS: (
      input: DECO_WORKFLOW_GET_STATUSInput,
    ) => Promise<DECO_WORKFLOW_GET_STATUSOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes consisting of code steps that use @ references to declaratively wire data between steps. Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to steps via `@input.propertyName` references in their input objects
     * - Should match the structure expected by the workflow's input schema
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
  }>;
  REGISTRY: Mcp<{
    /**
     * List all apps in the registry for the current workspace
     */
    REGISTRY_LIST_APPS: (
      input: REGISTRY_LIST_APPSInput,
    ) => Promise<REGISTRY_LIST_APPSOutput>;
    /**
     * List published apps by the current workspace
     */
    REGISTRY_LIST_PUBLISHED_APPS: (
      input: REGISTRY_LIST_PUBLISHED_APPSInput,
    ) => Promise<REGISTRY_LIST_PUBLISHED_APPSOutput>;
    /**
     * List all registry scopes
     */
    REGISTRY_LIST_SCOPES: (
      input: REGISTRY_LIST_SCOPESInput,
    ) => Promise<REGISTRY_LIST_SCOPESOutput>;
    /**
     * Publish an app to the registry (automatically claims scope on first use)
     */
    REGISTRY_PUBLISH_APP: (
      input: REGISTRY_PUBLISH_APPInput,
    ) => Promise<REGISTRY_PUBLISH_APPOutput>;
  }>;
  AI_GATEWAY: Mcp<{
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
  }>;
  DECONFIG: Mcp<{
    /**
     * Create a DECONFIG branch. If sourceBranch is provided, creates a branch from that branch (O(1) operation). Otherwise creates an empty branch.
     */
    CREATE_BRANCH: (input: CREATE_BRANCHInput) => Promise<CREATE_BRANCHOutput>;
    /**
     * Delete a branch and all its files. This operation cannot be undone.
     */
    DELETE_BRANCH: (input: DELETE_BRANCHInput) => Promise<DELETE_BRANCHOutput>;
    /**
     * Delete a file from a DECONFIG branch
     */
    DELETE_FILE: (input: DELETE_FILEInput) => Promise<DELETE_FILEOutput>;
    /**
     * Compare two branches and get the differences
     */
    DIFF_BRANCH: (input: DIFF_BRANCHInput) => Promise<DIFF_BRANCHOutput>;
    /**
     * List all branches in the current workspace
     */
    LIST_BRANCHES: (input: LIST_BRANCHESInput) => Promise<LIST_BRANCHESOutput>;
    /**
     * List files in a DECONFIG branch with optional prefix filtering and content inclusion
     */
    LIST_FILES: (input: LIST_FILESInput) => Promise<LIST_FILESOutput>;
    /**
     * Merge another branch into the current one with configurable strategy
     */
    MERGE_BRANCH: (input: MERGE_BRANCHInput) => Promise<MERGE_BRANCHOutput>;
    /**
     * Put a file in a DECONFIG branch (create or update) with optional conflict detection
     */
    PUT_FILE: (input: PUT_FILEInput) => Promise<PUT_FILEOutput>;
    /**
     * Read a file from a DECONFIG branch
     */
    READ_FILE: (input: READ_FILEInput) => Promise<READ_FILEOutput>;
  }>;
  INTEGRATIONS: Mcp<{
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * Get the API key for an integration
     */
    INTEGRATIONS_GET_API_KEY: (
      input: INTEGRATIONS_GET_API_KEYInput,
    ) => Promise<INTEGRATIONS_GET_API_KEYOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
  }>;
  APIKEYS: Mcp<{
    /**
     * Check if an API key has access to a resource
     */
    API_KEYS_CHECK_ACCESS: (
      input: API_KEYS_CHECK_ACCESSInput,
    ) => Promise<API_KEYS_CHECK_ACCESSOutput>;
    /**
     * Create a new API key
     */
    API_KEYS_CREATE: (
      input: API_KEYS_CREATEInput,
    ) => Promise<API_KEYS_CREATEOutput>;
    /**
     * Delete an API key (soft delete)
     */
    API_KEYS_DELETE: (
      input: API_KEYS_DELETEInput,
    ) => Promise<API_KEYS_DELETEOutput>;
    /**
     * Disable an API key
     */
    API_KEYS_DISABLE: (
      input: API_KEYS_DISABLEInput,
    ) => Promise<API_KEYS_DISABLEOutput>;
    /**
     * Enable an API key
     */
    API_KEYS_ENABLE: (
      input: API_KEYS_ENABLEInput,
    ) => Promise<API_KEYS_ENABLEOutput>;
    /**
     * Get an API key by ID
     */
    API_KEYS_GET: (input: API_KEYS_GETInput) => Promise<API_KEYS_GETOutput>;
    /**
     * List all API keys
     */
    API_KEYS_LIST: (input: API_KEYS_LISTInput) => Promise<API_KEYS_LISTOutput>;
    /**
     * Reissue an existing API key with new claims
     */
    API_KEYS_REISSUE: (
      input: API_KEYS_REISSUEInput,
    ) => Promise<API_KEYS_REISSUEOutput>;
    /**
     * Update an API key metadata
     */
    API_KEYS_UPDATE: (
      input: API_KEYS_UPDATEInput,
    ) => Promise<API_KEYS_UPDATEOutput>;
    /**
     * Validate an API key by ID
     */
    API_KEYS_VALIDATE: (
      input: API_KEYS_VALIDATEInput,
    ) => Promise<API_KEYS_VALIDATEOutput>;
  }>;
  DECO_CHAT_WORKSPACE_API: Mcp<{
    /**
     * Create a new agent
     */
    AGENTS_CREATE: (input: AGENTS_CREATEInput) => Promise<AGENTS_CREATEOutput>;
    /**
     * Delete an agent by id
     */
    AGENTS_DELETE: (input: AGENTS_DELETEInput) => Promise<AGENTS_DELETEOutput>;
    /**
     * Get an agent by id
     */
    AGENTS_GET: (input: AGENTS_GETInput) => Promise<AGENTS_GETOutput>;
    /**
     * List all agents
     */
    AGENTS_LIST: (input: AGENTS_LISTInput) => Promise<AGENTS_LISTOutput>;
    /**
     * Update an existing agent
     */
    AGENTS_UPDATE: (input: AGENTS_UPDATEInput) => Promise<AGENTS_UPDATEOutput>;
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
    /**
     * Check if an API key has access to a resource
     */
    API_KEYS_CHECK_ACCESS: (
      input: API_KEYS_CHECK_ACCESSInput,
    ) => Promise<API_KEYS_CHECK_ACCESSOutput>;
    /**
     * Create a new API key
     */
    API_KEYS_CREATE: (
      input: API_KEYS_CREATEInput,
    ) => Promise<API_KEYS_CREATEOutput>;
    /**
     * Delete an API key (soft delete)
     */
    API_KEYS_DELETE: (
      input: API_KEYS_DELETEInput,
    ) => Promise<API_KEYS_DELETEOutput>;
    /**
     * Disable an API key
     */
    API_KEYS_DISABLE: (
      input: API_KEYS_DISABLEInput,
    ) => Promise<API_KEYS_DISABLEOutput>;
    /**
     * Enable an API key
     */
    API_KEYS_ENABLE: (
      input: API_KEYS_ENABLEInput,
    ) => Promise<API_KEYS_ENABLEOutput>;
    /**
     * Get an API key by ID
     */
    API_KEYS_GET: (input: API_KEYS_GETInput) => Promise<API_KEYS_GETOutput>;
    /**
     * List all API keys
     */
    API_KEYS_LIST: (input: API_KEYS_LISTInput) => Promise<API_KEYS_LISTOutput>;
    /**
     * Reissue an existing API key with new claims
     */
    API_KEYS_REISSUE: (
      input: API_KEYS_REISSUEInput,
    ) => Promise<API_KEYS_REISSUEOutput>;
    /**
     * Update an API key metadata
     */
    API_KEYS_UPDATE: (
      input: API_KEYS_UPDATEInput,
    ) => Promise<API_KEYS_UPDATEOutput>;
    /**
     * Validate an API key by ID
     */
    API_KEYS_VALIDATE: (
      input: API_KEYS_VALIDATEInput,
    ) => Promise<API_KEYS_VALIDATEOutput>;
    /**
     * Create a channel
     */
    CHANNELS_CREATE: (
      input: CHANNELS_CREATEInput,
    ) => Promise<CHANNELS_CREATEOutput>;
    /**
     * Delete a channel
     */
    CHANNELS_DELETE: (
      input: CHANNELS_DELETEInput,
    ) => Promise<CHANNELS_DELETEOutput>;
    /**
     * Get a channel by ID
     */
    CHANNELS_GET: (input: CHANNELS_GETInput) => Promise<CHANNELS_GETOutput>;
    /**
     * Invite an agent to a channel
     */
    CHANNELS_JOIN: (input: CHANNELS_JOINInput) => Promise<CHANNELS_JOINOutput>;
    /**
     * Remove an agent from a channel
     */
    CHANNELS_LEAVE: (
      input: CHANNELS_LEAVEInput,
    ) => Promise<CHANNELS_LEAVEOutput>;
    /**
     * List all channels
     */
    CHANNELS_LIST: (input: CHANNELS_LISTInput) => Promise<CHANNELS_LISTOutput>;
    /**
     * Commit a pre-authorized amount of money for the current tenant's wallet
     */
    COMMIT_PRE_AUTHORIZED_AMOUNT: (
      input: COMMIT_PRE_AUTHORIZED_AMOUNTInput,
    ) => Promise<COMMIT_PRE_AUTHORIZED_AMOUNTOutput>;
    /**
     * Register a contract with the registry.
     */
    CONTRACT_REGISTER: (
      input: CONTRACT_REGISTERInput,
    ) => Promise<CONTRACT_REGISTEROutput>;
    /**
     * Create a DECONFIG branch. If sourceBranch is provided, creates a branch from that branch (O(1) operation). Otherwise creates an empty branch.
     */
    CREATE_BRANCH: (input: CREATE_BRANCHInput) => Promise<CREATE_BRANCHOutput>;
    /**
     * Create a checkout session for the current tenant's wallet
     */
    CREATE_CHECKOUT_SESSION: (
      input: CREATE_CHECKOUT_SESSIONInput,
    ) => Promise<CREATE_CHECKOUT_SESSIONOutput>;
    /**
     * Create a voucher with money from the current tenant's wallet
     */
    CREATE_VOUCHER: (
      input: CREATE_VOUCHERInput,
    ) => Promise<CREATE_VOUCHEROutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_GET_META: (
      input: DATABASES_GET_METAInput,
    ) => Promise<DATABASES_GET_METAOutput>;
    /**
     * Migrate data from Turso database to new database
     */
    DATABASES_MIGRATE: (
      input: DATABASES_MIGRATEInput,
    ) => Promise<DATABASES_MIGRATEOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RECOVERY: (
      input: DATABASES_RECOVERYInput,
    ) => Promise<DATABASES_RECOVERYOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RUN_SQL: (
      input: DATABASES_RUN_SQLInput,
    ) => Promise<DATABASES_RUN_SQLOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Create a new document with markdown content.
     * ## Document Structure
     * Documents consist of:
     * - **name**: A clear, descriptive title for the document
     * - **description** (optional): A brief summary of the document's purpose
     * - **content**: Markdown-formatted text content
     * - **tags** (optional): Array of strings for categorization
     * ## Markdown Support
     * Documents support full markdown syntax:
     * ```markdown
     * # Main Header
     * ## Subheader
     * This is **bold** and this is *italic*.
     * - Bullet point 1
     * - Bullet point 2
     * 1. Numbered item
     * 2. Another item
     * [Link text](https://example.com)
     * ```code
     * Code blocks with syntax highlighting
     * ```
     * > Blockquotes
     * | Table | Headers |
     * |-------|---------|
     * | Data  | Data    |
     * ```
     * ## Best Practices
     * 1. **Use clear names** - Make document titles descriptive and searchable
     * 2. **Add descriptions** - Help others understand the document's purpose
     * 3. **Structure content** - Use headers to organize long documents
     * 4. **Tag appropriately** - Use tags for easier discovery and organization
     * 5. **Keep it readable** - Use markdown formatting to enhance readability
     */
    DECO_RESOURCE_DOCUMENT_CREATE: (
      input: DECO_RESOURCE_DOCUMENT_CREATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_CREATEOutput>;
    /**
     * Delete a document from the workspace.
     * This operation permanently removes the document file from the DECONFIG storage.
     * Use this to clean up obsolete, duplicate, or unwanted documents.
     * Warning: This action cannot be undone. The document will be permanently removed
     * from the workspace.
     */
    DECO_RESOURCE_DOCUMENT_DELETE: (
      input: DECO_RESOURCE_DOCUMENT_DELETEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_DELETEOutput>;
    /**
     * Read a document's content and metadata.
     * Returns:
     * - Document metadata (name, description, tags)
     * - Full markdown content
     * - Creation and modification timestamps
     * Documents support standard markdown syntax including:
     * - Headers (# ## ###)
     * - Lists (ordered and unordered)
     * - Links and images
     * - Code blocks with syntax highlighting
     * - Tables, blockquotes, and more
     */
    DECO_RESOURCE_DOCUMENT_READ: (
      input: DECO_RESOURCE_DOCUMENT_READInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_READOutput>;
    /**
     * Search documents in the workspace.
     * This operation allows you to find documents by name, content, description, or tags.
     * Documents are markdown-formatted text content that can be used for documentation,
     * notes, guides, or any other text-based information.
     * Use this to discover existing documents before creating new ones or to find documents
     * for reading or modification.
     */
    DECO_RESOURCE_DOCUMENT_SEARCH: (
      input: DECO_RESOURCE_DOCUMENT_SEARCHInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_SEARCHOutput>;
    /**
     * Update a document's content or metadata.
     * You can update any of the following:
     * - **name**: Change the document title
     * - **description**: Update the document's summary
     * - **content**: Modify the markdown content
     * - **tags**: Add, remove, or change tags
     * ## Update Guidelines
     * 1. **Preserve formatting** - Maintain markdown structure when editing content
     * 2. **Update incrementally** - Make focused changes rather than rewriting everything
     * 3. **Use clear descriptions** - Keep descriptions concise and informative
     * 4. **Manage tags thoughtfully** - Add relevant tags, remove outdated ones
     * ## Common Update Patterns
     * **Adding content:**
     * - Append new sections to existing content
     * - Insert new information in appropriate locations
     * - Maintain document structure and flow
     * **Fixing content:**
     * - Correct typos and formatting issues
     * - Update outdated information
     * - Improve clarity and readability
     * **Reorganizing:**
     * - Restructure headers and sections
     * - Reorder content for better flow
     * - Split or merge sections as needed
     */
    DECO_RESOURCE_DOCUMENT_UPDATE: (
      input: DECO_RESOURCE_DOCUMENT_UPDATEInput,
    ) => Promise<DECO_RESOURCE_DOCUMENT_UPDATEOutput>;
    /**
     * Create an executable tool with JSON Schema validation.
     * ## Tool Execute Function
     * Tools must export a default async function:
     * ```javascript
     * export default async function(input, ctx) {
     * // input: validated against tool's inputSchema
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return: must match tool's outputSchema
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * **Key Points:**
     * - **inputSchema** defines the `input` parameter type and validation
     * - **outputSchema** defines the return value type and validation
     * - **execute** is the function code as an inline ES module string
     * - **dependencies** (optional): Array of `{ integrationId }` for ctx.env calls
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - System will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition including metadata, schemas, and execute code.
     * Returns:
     * - Tool metadata (name, description)
     * - Input/output JSON schemas
     * - Execute code (inline ES module)
     * - Dependencies (integration IDs used in ctx.env calls)
     * The tool's execute code uses `ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args)` to call integrations.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update a tool's metadata, schemas, or execution code.
     * ## Execute Function API
     * ```javascript
     * export default async function(input, ctx) {
     * // Call integration tools
     * const result = await ctx.env['i:integration'].tool_name({ args });
     * return { output: result };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain function signature** - Keep `async function(input, ctx)` format
     * 2. **Match schemas** - Input/output must match updated schemas
     * 3. **Use placeholder integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` for any ctx.env calls
     * 5. **Test thoroughly** - Input/output are validated automatically
     * **Integration IDs:**
     * - Use placeholders like `i:slack` if you don't know the ID
     * - Validation errors will list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Create a workflow with sequential code steps.
     * ## Execution Pattern
     * Workflows consist of sequential code steps where each step can reference previous step outputs using @ syntax:
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** in the input object to reference previous step outputs or workflow input
     * 3. **@ References** are resolved before step execution
     * 4. **Final step output** must match the workflow's output schema
     * ## Step Structure
     * Each step must define:
     * ```json
     * {
     * "name": "send-notification",
     * "description": "Send a notification using the Slack API",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string" },
     * "message": { "type": "string" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "timestamp": { "type": "string" }
     * }
     * },
     * "input": {
     * "channel": "@input.slackChannel",
     * "message": "@process-data.output.formattedMessage"
     * },
     * "execute": "export default async function(input, ctx) { ... }",
     * "dependencies": [{ "integrationId": "i:slack-123" }]
     * }
     * ```
     * ## @ Reference Syntax
     * Use @ references to declaratively connect step inputs to outputs:
     * - **Workflow input**: `@input.propertyName`
     * - **Previous step output**: `@<step-name>.output.propertyName`
     * - **Nested properties**: `@step-1.output.data.user.name`
     * The system automatically resolves these references before executing each step.
     * ## Execute Function
     * The execute function receives the **resolved input** (with @ references replaced by actual values):
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // No need for ctx.readWorkflowInput() or ctx.readStepResult()
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack-123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * // Return data matching outputSchema
     * return { success: true, timestamp: new Date().toISOString() };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * ## Best Practices
     * 1. **Define clear schemas** - inputSchema and outputSchema should be precise
     * 2. **Use @ references** - Declaratively wire data flow between steps
     * 3. **Keep steps focused** - Each step should do one thing well
     * 4. **Use placeholders for integration IDs** - Validation errors will list available integrations
     * 5. **Test incrementally** - Use stopAfter to test each step individually
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions with @ references for data flow
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow with sequential code steps using @ references.
     * ## Execution Pattern Reminder
     * ```
     * Input → Step 1 → Step 2 → Step 3 → Output
     * ```
     * **Key Rules:**
     * 1. **Each step has inputSchema, outputSchema, input, and execute code**
     * 2. **Use @ references** to connect step inputs to previous outputs
     * 3. **@ References are resolved** before step execution
     * 4. **Final step output** must match workflow's output schema
     * ## Update Guidelines
     * 1. **Define clear schemas** - Update inputSchema and outputSchema as needed
     * 2. **Use @ references** - Update the input object to wire data between steps
     * 3. **Update execute code** - Remember that input is already resolved (no ctx.readStepResult needed)
     * 4. **Update dependencies** - Add `{ integrationId }` if using ctx.env
     * 5. **Test incrementally** - Use stopAfter to test each updated step
     * ## @ Reference Examples
     * ```json
     * {
     * "input": {
     * "userId": "@input.userId",
     * "previousResult": "@step-1.output.data",
     * "nestedValue": "@step-2.output.user.email"
     * }
     * }
     * ```
     * ## Execute Function Signature
     * ```javascript
     * export default async function(input, ctx) {
     * // input already has @ references resolved
     * // ctx.env contains integration tools
     * const result = await ctx.env['i:integration-id'].tool_name(input);
     * return { success: true, data: result };
     * }
     * ```
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render document_detail view
     */
    DECO_VIEW_RENDER_DOCUMENT_DETAIL: (
      input: DECO_VIEW_RENDER_DOCUMENT_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_DOCUMENT_DETAILOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Get the status and output of a workflow run.
     * This tool retrieves the current status and results of a workflow execution, including:
     * - Current execution status (pending, running, completed, failed)
     * - Results from completed steps
     * - Final workflow output (if completed)
     * - Error information (if failed)
     * - Execution logs and timing information
     * Use this tool to monitor workflow progress, retrieve results, or debug failed executions.
     */
    DECO_WORKFLOW_GET_STATUS: (
      input: DECO_WORKFLOW_GET_STATUSInput,
    ) => Promise<DECO_WORKFLOW_GET_STATUSOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes consisting of code steps that use @ references to declaratively wire data between steps. Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to steps via `@input.propertyName` references in their input objects
     * - Should match the structure expected by the workflow's input schema
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
    /**
     * Delete a branch and all its files. This operation cannot be undone.
     */
    DELETE_BRANCH: (input: DELETE_BRANCHInput) => Promise<DELETE_BRANCHOutput>;
    /**
     * Delete a file from a DECONFIG branch
     */
    DELETE_FILE: (input: DELETE_FILEInput) => Promise<DELETE_FILEOutput>;
    /**
     * Compare two branches and get the differences
     */
    DIFF_BRANCH: (input: DIFF_BRANCHInput) => Promise<DIFF_BRANCHOutput>;
    /**
     * Delete a file
     */
    FS_DELETE: (input: FS_DELETEInput) => Promise<FS_DELETEOutput>;
    /**
     * List files from a given bucket given a prefix
     */
    FS_LIST: (input: FS_LISTInput) => Promise<FS_LISTOutput>;
    /**
     * Get a secure temporary link to read a file
     */
    FS_READ: (input: FS_READInput) => Promise<FS_READOutput>;
    /**
     * Get metadata about a file
     */
    FS_READ_METADATA: (
      input: FS_READ_METADATAInput,
    ) => Promise<FS_READ_METADATAOutput>;
    /**
     * Get a secure temporary link to upload a file
     */
    FS_WRITE: (input: FS_WRITEInput) => Promise<FS_WRITEOutput>;
    /**
     * Get the agents usage for the current tenant's wallet
     */
    GET_AGENTS_USAGE: (
      input: GET_AGENTS_USAGEInput,
    ) => Promise<GET_AGENTS_USAGEOutput>;
    /**
     * Get the billing history for the current tenant's wallet
     */
    GET_BILLING_HISTORY: (
      input: GET_BILLING_HISTORYInput,
    ) => Promise<GET_BILLING_HISTORYOutput>;
    /**
     * Get the contracts commits for the current tenant's wallet
     */
    GET_CONTRACTS_COMMITS: (
      input: GET_CONTRACTS_COMMITSInput,
    ) => Promise<GET_CONTRACTS_COMMITSOutput>;
    /**
     * Get the threads usage for the current tenant's wallet
     */
    GET_THREADS_USAGE: (
      input: GET_THREADS_USAGEInput,
    ) => Promise<GET_THREADS_USAGEOutput>;
    /**
     * Get the wallet account for the current tenant
     */
    GET_WALLET_ACCOUNT: (
      input: GET_WALLET_ACCOUNTInput,
    ) => Promise<GET_WALLET_ACCOUNTOutput>;
    /**
     * Get the plan for the current tenant's workspace
     */
    GET_WORKSPACE_PLAN: (
      input: GET_WORKSPACE_PLANInput,
    ) => Promise<GET_WORKSPACE_PLANOutput>;
    /**
     * Delete an app and its worker
     */
    HOSTING_APP_DELETE: (
      input: HOSTING_APP_DELETEInput,
    ) => Promise<HOSTING_APP_DELETEOutput>;
    /**
     * Deploy multiple TypeScript files that use Wrangler for bundling and deployment to Cloudflare Workers. You must provide a package.json file with the necessary dependencies and a wrangler.toml file matching the Workers for Platforms format. Use 'main_module' instead of 'main', and define bindings using the [[bindings]] array, where each binding is a table specifying its type and properties. To add custom Deco bindings, set type = "MCP" in a binding entry (these will be filtered and handled automatically).
     * Set 'preview: true' to create a preview deployment that won't replace the production version. Preview deployments get their own unique URL but are not promoted to production routes.
     * Common patterns:
     * 1. Use a package.json file to manage dependencies:
     * // package.json
     * {
     * "name": "@deco/workers-example",
     * "private": true,
     * "version": "0.0.0",
     * "type": "module",
     * "scripts": {
     * "dev": "deco dev",
     * "gen": "deco gen > env.gen.ts",
     * "setup": "npm i -g deco-cli",
     * "deploy": "wrangler deploy --dry-run --outdir ./dist && deco deploy ./dist"
     * },
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/mcp": "npm:@jsr/deco__mcp@^0.5.6",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.4.0",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }
     * 2. Import dependencies directly in your files:
     * // main.ts
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * 3. Use wrangler.toml to configure your app:
     * // wrangler.toml
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * # You can add any supported binding type as per Workers for Platforms documentation.
     * 4. You should always surround the user fetch with the withRuntime function.
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * You must use the Workers for Platforms TOML format for wrangler.toml. The bindings supports all standard binding types (ai, analytics_engine, assets, browser_rendering, d1, durable_object_namespace, hyperdrive, kv_namespace, mtls_certificate, plain_text, queue, r2_bucket, secret_text, service, tail_consumer, vectorize, version_metadata, etc). For Deco-specific bindings, use type = "MCP".
     * For routes, only custom domains are supported. The user must point their DNS to the script endpoint. $SCRIPT.deco.page using DNS-Only. The user needs to wait for the DNS to propagate before the app will be available.
     * Example of files deployment:
     * [
     * {
     * "path": "package.json",
     * "content": `{
     * "name": "@deco/workers-example",
     * "version": "0.0.0",
     * "type": "module",
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.2.18",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }`
     * },
     * {
     * "path": "main.ts",
     * "content": `
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * `
     * },
     * {
     * "path": "wrangler.toml",
     * "content": `
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * `
     * }
     * ]
     * Important Notes:
     * - You can access the app workspace by accessing env.DECO_CHAT_WORKSPACE
     * - You can access the app script slug by accessing env.DECO_CHAT_APP_SLUG
     * - Token and workspace can be used to make authenticated requests to the Deco API under https://api.decocms.com
     * - Always use Cloudflare Workers syntax with export default and proper fetch handler signature
     * - When using template literals inside content strings, escape backticks with a backslash (\) or use string concatenation (+)
     * - You must include a package.json file with the @deco/workers-runtime dependency
     * - Dependencies are managed through npm packages in package.json, not npm: or jsr: specifiers
     * - Wrangler will handle the bundling process using the dependencies defined in package.json
     */
    HOSTING_APP_DEPLOY: (
      input: HOSTING_APP_DEPLOYInput,
    ) => Promise<HOSTING_APP_DEPLOYOutput>;
    /**
     * List all deployments for a specific app
     */
    HOSTING_APP_DEPLOYMENTS_LIST: (
      input: HOSTING_APP_DEPLOYMENTS_LISTInput,
    ) => Promise<HOSTING_APP_DEPLOYMENTS_LISTOutput>;
    /**
     * Get info/metadata for an app (including endpoint)
     */
    HOSTING_APP_INFO: (
      input: HOSTING_APP_INFOInput,
    ) => Promise<HOSTING_APP_INFOOutput>;
    /**
     * List all unique workflow names in the workspace
     */
    HOSTING_APP_WORKFLOWS_LIST_NAMES: (
      input: HOSTING_APP_WORKFLOWS_LIST_NAMESInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_NAMESOutput>;
    /**
     * List workflow runs. If workflowName is provided, shows runs for that specific workflow. If not provided, shows recent runs from any workflow.
     */
    HOSTING_APP_WORKFLOWS_LIST_RUNS: (
      input: HOSTING_APP_WORKFLOWS_LIST_RUNSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_RUNSOutput>;
    /**
     * Get the status of a workflow instance
     */
    HOSTING_APP_WORKFLOWS_STATUS: (
      input: HOSTING_APP_WORKFLOWS_STATUSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_STATUSOutput>;
    /**
     * List all apps for the current tenant
     */
    HOSTING_APPS_LIST: (
      input: HOSTING_APPS_LISTInput,
    ) => Promise<HOSTING_APPS_LISTOutput>;
    /**
     * Promote a specific deployment to an existing route pattern and update routing cache
     */
    HOSTING_APPS_PROMOTE: (
      input: HOSTING_APPS_PROMOTEInput,
    ) => Promise<HOSTING_APPS_PROMOTEOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * Get the API key for an integration
     */
    INTEGRATIONS_GET_API_KEY: (
      input: INTEGRATIONS_GET_API_KEYInput,
    ) => Promise<INTEGRATIONS_GET_API_KEYOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
    /**
     * Add a file content into knowledge base
     */
    KNOWLEDGE_BASE_ADD_FILE: (
      input: KNOWLEDGE_BASE_ADD_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_ADD_FILEOutput>;
    /**
     * Create a knowledge base
     */
    KNOWLEDGE_BASE_CREATE: (
      input: KNOWLEDGE_BASE_CREATEInput,
    ) => Promise<KNOWLEDGE_BASE_CREATEOutput>;
    /**
     * Delete a knowledge base
     */
    KNOWLEDGE_BASE_DELETE: (
      input: KNOWLEDGE_BASE_DELETEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETEOutput>;
    /**
     * Delete a file from the knowledge base
     */
    KNOWLEDGE_BASE_DELETE_FILE: (
      input: KNOWLEDGE_BASE_DELETE_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETE_FILEOutput>;
    /**
     * Forget something
     */
    KNOWLEDGE_BASE_FORGET: (
      input: KNOWLEDGE_BASE_FORGETInput,
    ) => Promise<KNOWLEDGE_BASE_FORGETOutput>;
    /**
     * List all knowledge bases
     */
    KNOWLEDGE_BASE_LIST: (
      input: KNOWLEDGE_BASE_LISTInput,
    ) => Promise<KNOWLEDGE_BASE_LISTOutput>;
    /**
     * List all files in the knowledge base
     */
    KNOWLEDGE_BASE_LIST_FILES: (
      input: KNOWLEDGE_BASE_LIST_FILESInput,
    ) => Promise<KNOWLEDGE_BASE_LIST_FILESOutput>;
    /**
     * Remember something
     */
    KNOWLEDGE_BASE_REMEMBER: (
      input: KNOWLEDGE_BASE_REMEMBERInput,
    ) => Promise<KNOWLEDGE_BASE_REMEMBEROutput>;
    /**
     * Search the knowledge base
     */
    KNOWLEDGE_BASE_SEARCH: (
      input: KNOWLEDGE_BASE_SEARCHInput,
    ) => Promise<KNOWLEDGE_BASE_SEARCHOutput>;
    /**
     * List all branches in the current workspace
     */
    LIST_BRANCHES: (input: LIST_BRANCHESInput) => Promise<LIST_BRANCHESOutput>;
    /**
     * List files in a DECONFIG branch with optional prefix filtering and content inclusion
     */
    LIST_FILES: (input: LIST_FILESInput) => Promise<LIST_FILESOutput>;
    /**
     * Merge another branch into the current one with configurable strategy
     */
    MERGE_BRANCH: (input: MERGE_BRANCHInput) => Promise<MERGE_BRANCHOutput>;
    /**
     * Create a new model
     */
    MODELS_CREATE: (input: MODELS_CREATEInput) => Promise<MODELS_CREATEOutput>;
    /**
     * Delete a model by id
     */
    MODELS_DELETE: (input: MODELS_DELETEInput) => Promise<MODELS_DELETEOutput>;
    /**
     * Get a model by id
     */
    MODELS_GET: (input: MODELS_GETInput) => Promise<MODELS_GETOutput>;
    /**
     * List models for the current user
     */
    MODELS_LIST: (input: MODELS_LISTInput) => Promise<MODELS_LISTOutput>;
    /**
     * Update an existing model
     */
    MODELS_UPDATE: (input: MODELS_UPDATEInput) => Promise<MODELS_UPDATEOutput>;
    /**
     * Create an OAuth code for a given API key
     */
    OAUTH_CODE_CREATE: (
      input: OAUTH_CODE_CREATEInput,
    ) => Promise<OAUTH_CODE_CREATEOutput>;
    /**
     * Pre-authorize an amount of money for the current tenant's wallet
     */
    PRE_AUTHORIZE_AMOUNT: (
      input: PRE_AUTHORIZE_AMOUNTInput,
    ) => Promise<PRE_AUTHORIZE_AMOUNTOutput>;
    /**
     * Create a new prompt
     */
    PROMPTS_CREATE: (
      input: PROMPTS_CREATEInput,
    ) => Promise<PROMPTS_CREATEOutput>;
    /**
     * Delete a prompt by id
     */
    PROMPTS_DELETE: (
      input: PROMPTS_DELETEInput,
    ) => Promise<PROMPTS_DELETEOutput>;
    /**
     * Get a prompt by id
     */
    PROMPTS_GET: (input: PROMPTS_GETInput) => Promise<PROMPTS_GETOutput>;
    /**
     * Get the versions of a prompt
     */
    PROMPTS_GET_VERSIONS: (
      input: PROMPTS_GET_VERSIONSInput,
    ) => Promise<PROMPTS_GET_VERSIONSOutput>;
    /**
     * List prompts for the current workspace
     */
    PROMPTS_LIST: (input: PROMPTS_LISTInput) => Promise<PROMPTS_LISTOutput>;
    /**
     * Rename a prompt version
     */
    PROMPTS_RENAME_VERSION: (
      input: PROMPTS_RENAME_VERSIONInput,
    ) => Promise<PROMPTS_RENAME_VERSIONOutput>;
    /**
     * Update an existing prompt
     */
    PROMPTS_UPDATE: (
      input: PROMPTS_UPDATEInput,
    ) => Promise<PROMPTS_UPDATEOutput>;
    /**
     * Put a file in a DECONFIG branch (create or update) with optional conflict detection
     */
    PUT_FILE: (input: PUT_FILEInput) => Promise<PUT_FILEOutput>;
    /**
     * Read a file from a DECONFIG branch
     */
    READ_FILE: (input: READ_FILEInput) => Promise<READ_FILEOutput>;
    /**
     * Redeem a voucher for the current tenant's wallet
     */
    REDEEM_VOUCHER: (
      input: REDEEM_VOUCHERInput,
    ) => Promise<REDEEM_VOUCHEROutput>;
    /**
     * List all apps in the registry for the current workspace
     */
    REGISTRY_LIST_APPS: (
      input: REGISTRY_LIST_APPSInput,
    ) => Promise<REGISTRY_LIST_APPSOutput>;
    /**
     * List published apps by the current workspace
     */
    REGISTRY_LIST_PUBLISHED_APPS: (
      input: REGISTRY_LIST_PUBLISHED_APPSInput,
    ) => Promise<REGISTRY_LIST_PUBLISHED_APPSOutput>;
    /**
     * List all registry scopes
     */
    REGISTRY_LIST_SCOPES: (
      input: REGISTRY_LIST_SCOPESInput,
    ) => Promise<REGISTRY_LIST_SCOPESOutput>;
    /**
     * Publish an app to the registry (automatically claims scope on first use)
     */
    REGISTRY_PUBLISH_APP: (
      input: REGISTRY_PUBLISH_APPInput,
    ) => Promise<REGISTRY_PUBLISH_APPOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Add a custom view or resource to a team
     */
    TEAMS_ADD_VIEW: (
      input: TEAMS_ADD_VIEWInput,
    ) => Promise<TEAMS_ADD_VIEWOutput>;
    /**
     * Remove a custom view or resource from a team
     */
    TEAMS_REMOVE_VIEW: (
      input: TEAMS_REMOVE_VIEWInput,
    ) => Promise<TEAMS_REMOVE_VIEWOutput>;
    /**
     * Get a thread by thread id (without messages)
     */
    THREADS_GET: (input: THREADS_GETInput) => Promise<THREADS_GETOutput>;
    /**
     * Get only the messages for a thread by thread id
     */
    THREADS_GET_MESSAGES: (
      input: THREADS_GET_MESSAGESInput,
    ) => Promise<THREADS_GET_MESSAGESOutput>;
    /**
     * List all threads in a workspace with cursor-based pagination and filtering
     */
    THREADS_LIST: (input: THREADS_LISTInput) => Promise<THREADS_LISTOutput>;
    /**
     * Update a thread's metadata
     */
    THREADS_UPDATE_METADATA: (
      input: THREADS_UPDATE_METADATAInput,
    ) => Promise<THREADS_UPDATE_METADATAOutput>;
    /**
     * Update a thread's title
     */
    THREADS_UPDATE_TITLE: (
      input: THREADS_UPDATE_TITLEInput,
    ) => Promise<THREADS_UPDATE_TITLEOutput>;
    /**
     * Activate a trigger
     */
    TRIGGERS_ACTIVATE: (
      input: TRIGGERS_ACTIVATEInput,
    ) => Promise<TRIGGERS_ACTIVATEOutput>;
    /**
     * Create a trigger
     */
    TRIGGERS_CREATE: (
      input: TRIGGERS_CREATEInput,
    ) => Promise<TRIGGERS_CREATEOutput>;
    /**
     * Create a cron trigger
     */
    TRIGGERS_CREATE_CRON: (
      input: TRIGGERS_CREATE_CRONInput,
    ) => Promise<TRIGGERS_CREATE_CRONOutput>;
    /**
     * Create a webhook trigger
     */
    TRIGGERS_CREATE_WEBHOOK: (
      input: TRIGGERS_CREATE_WEBHOOKInput,
    ) => Promise<TRIGGERS_CREATE_WEBHOOKOutput>;
    /**
     * Deactivate a trigger
     */
    TRIGGERS_DEACTIVATE: (
      input: TRIGGERS_DEACTIVATEInput,
    ) => Promise<TRIGGERS_DEACTIVATEOutput>;
    /**
     * Delete a trigger
     */
    TRIGGERS_DELETE: (
      input: TRIGGERS_DELETEInput,
    ) => Promise<TRIGGERS_DELETEOutput>;
    /**
     * Get a trigger by ID
     */
    TRIGGERS_GET: (input: TRIGGERS_GETInput) => Promise<TRIGGERS_GETOutput>;
    /**
     * Get the webhook URL for a trigger
     */
    TRIGGERS_GET_WEBHOOK_URL: (
      input: TRIGGERS_GET_WEBHOOK_URLInput,
    ) => Promise<TRIGGERS_GET_WEBHOOK_URLOutput>;
    /**
     * List all triggers
     */
    TRIGGERS_LIST: (input: TRIGGERS_LISTInput) => Promise<TRIGGERS_LISTOutput>;
    /**
     * Update a trigger
     */
    TRIGGERS_UPDATE: (
      input: TRIGGERS_UPDATEInput,
    ) => Promise<TRIGGERS_UPDATEOutput>;
  }>;
  DECO_CHAT_API: Mcp<{
    /**
     * Make HTTP requests to any URL. Supports multiple HTTP methods (GET, POST, PUT, DELETE, PATCH, HEAD), custom headers, request body, and response parsing. Use this when you need to fetch data from external APIs or make HTTP calls that don't have a specific integration available. Supports both text and JSON response parsing.
     */
    HTTP_FETCH: (input: HTTP_FETCHInput) => Promise<HTTP_FETCHOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * List tools of a given integration
     */
    INTEGRATIONS_LIST_TOOLS: (
      input: INTEGRATIONS_LIST_TOOLSInput,
    ) => Promise<INTEGRATIONS_LIST_TOOLSOutput>;
    /**
     * List all team invites for the current logged in user
     */
    MY_INVITES_LIST: (
      input: MY_INVITES_LISTInput,
    ) => Promise<MY_INVITES_LISTOutput>;
    /**
     * Get the current user's profile
     */
    PROFILES_GET: (input: PROFILES_GETInput) => Promise<PROFILES_GETOutput>;
    /**
     * Update the current user's profile
     */
    PROFILES_UPDATE: (
      input: PROFILES_UPDATEInput,
    ) => Promise<PROFILES_UPDATEOutput>;
    /**
     * Register that the user accessed a project
     */
    PROJECT_ACTIVITY_REGISTER: (
      input: PROJECT_ACTIVITY_REGISTERInput,
    ) => Promise<PROJECT_ACTIVITY_REGISTEROutput>;
    /**
     * List projects for an organization
     */
    PROJECTS_LIST: (input: PROJECTS_LISTInput) => Promise<PROJECTS_LISTOutput>;
    /**
     * List recent projects for the current user based on activity
     */
    PROJECTS_RECENT: (
      input: PROJECTS_RECENTInput,
    ) => Promise<PROJECTS_RECENTOutput>;
    /**
     * Update an existing project's properties
     */
    PROJECTS_UPDATE: (
      input: PROJECTS_UPDATEInput,
    ) => Promise<PROJECTS_UPDATEOutput>;
    /**
     * Get an app from the registry
     */
    REGISTRY_GET_APP: (
      input: REGISTRY_GET_APPInput,
    ) => Promise<REGISTRY_GET_APPOutput>;
    /**
     * Accept a team invitation
     */
    TEAM_INVITE_ACCEPT: (
      input: TEAM_INVITE_ACCEPTInput,
    ) => Promise<TEAM_INVITE_ACCEPTOutput>;
    /**
     * Delete a team invitation
     */
    TEAM_INVITE_DELETE: (
      input: TEAM_INVITE_DELETEInput,
    ) => Promise<TEAM_INVITE_DELETEOutput>;
    /**
     * Register that the user accessed a team
     */
    TEAM_MEMBER_ACTIVITY_REGISTER: (
      input: TEAM_MEMBER_ACTIVITY_REGISTERInput,
    ) => Promise<TEAM_MEMBER_ACTIVITY_REGISTEROutput>;
    /**
     * Get all members of a team
     */
    TEAM_MEMBERS_GET: (
      input: TEAM_MEMBERS_GETInput,
    ) => Promise<TEAM_MEMBERS_GETOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Remove a member from a team
     */
    TEAM_MEMBERS_REMOVE: (
      input: TEAM_MEMBERS_REMOVEInput,
    ) => Promise<TEAM_MEMBERS_REMOVEOutput>;
    /**
     * Update a team member. Usefull for updating admin status.
     */
    TEAM_MEMBERS_UPDATE: (
      input: TEAM_MEMBERS_UPDATEInput,
    ) => Promise<TEAM_MEMBERS_UPDATEOutput>;
    /**
     * Update a member's role in a team
     */
    TEAM_MEMBERS_UPDATE_ROLE: (
      input: TEAM_MEMBERS_UPDATE_ROLEInput,
    ) => Promise<TEAM_MEMBERS_UPDATE_ROLEOutput>;
    /**
     * Report a bug or idea within a team/project context
     */
    TEAM_REPORT_ISSUE_CREATE: (
      input: TEAM_REPORT_ISSUE_CREATEInput,
    ) => Promise<TEAM_REPORT_ISSUE_CREATEOutput>;
    /**
     * Create a new team role with associated policies and permissions
     */
    TEAM_ROLE_CREATE: (
      input: TEAM_ROLE_CREATEInput,
    ) => Promise<TEAM_ROLE_CREATEOutput>;
    /**
     * Delete a team role and its associated policies (only team-specific roles)
     */
    TEAM_ROLE_DELETE: (
      input: TEAM_ROLE_DELETEInput,
    ) => Promise<TEAM_ROLE_DELETEOutput>;
    /**
     * Get detailed information about a specific team role
     */
    TEAM_ROLE_GET: (input: TEAM_ROLE_GETInput) => Promise<TEAM_ROLE_GETOutput>;
    /**
     * Update a team role and its associated policies
     */
    TEAM_ROLE_UPDATE: (
      input: TEAM_ROLE_UPDATEInput,
    ) => Promise<TEAM_ROLE_UPDATEOutput>;
    /**
     * Get all roles available for a team, including basic deco roles
     */
    TEAM_ROLES_LIST: (
      input: TEAM_ROLES_LISTInput,
    ) => Promise<TEAM_ROLES_LISTOutput>;
    /**
     * Create a new team
     */
    TEAMS_CREATE: (input: TEAMS_CREATEInput) => Promise<TEAMS_CREATEOutput>;
    /**
     * Delete a team by id
     */
    TEAMS_DELETE: (input: TEAMS_DELETEInput) => Promise<TEAMS_DELETEOutput>;
    /**
     * Get a team by slug
     */
    TEAMS_GET: (input: TEAMS_GETInput) => Promise<TEAMS_GETOutput>;
    /**
     * Get the theme for a workspace
     */
    TEAMS_GET_THEME: (
      input: TEAMS_GET_THEMEInput,
    ) => Promise<TEAMS_GET_THEMEOutput>;
    /**
     * List teams for the current user
     */
    TEAMS_LIST: (input: TEAMS_LISTInput) => Promise<TEAMS_LISTOutput>;
    /**
     * Update an existing team including theme customization
     */
    TEAMS_UPDATE: (input: TEAMS_UPDATEInput) => Promise<TEAMS_UPDATEOutput>;
  }>;
  SELF: Mcp<{
    /**
     * Use AI to determine which tool to call and generate its input based on a natural language query
     */
    AI_TOOL_EXECUTOR: (
      input: AI_TOOL_EXECUTORInput,
    ) => Promise<AI_TOOL_EXECUTOROutput>;
    /**
     * Create or update API key with authorization for all tools used in workflow
     */
    AUTHORIZE_WORKFLOW: (
      input: AUTHORIZE_WORKFLOWInput,
    ) => Promise<AUTHORIZE_WORKFLOWOutput>;
    /**
     * Call a specific tool from an installed integration
     */
    CALL_INTEGRATION_TOOL: (
      input: CALL_INTEGRATION_TOOLInput,
    ) => Promise<CALL_INTEGRATION_TOOLOutput>;
    /**
     * OAuth for Deco Chat
     */
    DECO_CHAT_OAUTH_START: (
      input: DECO_CHAT_OAUTH_STARTInput,
    ) => Promise<DECO_CHAT_OAUTH_STARTOutput>;
    /**
     * Validate the state of the OAuth flow
     */
    DECO_CHAT_STATE_VALIDATION: (
      input: DECO_CHAT_STATE_VALIDATIONInput,
    ) => Promise<DECO_CHAT_STATE_VALIDATIONOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Create a workflow with alternating code and tool_call steps.
     * ## Execution Pattern
     * Workflows follow a strict alternating pattern where **each step receives the previous step's output**:
     * ```
     * Input → Code → Tool Call → Code → Tool Call → Code (final) → Output
     * ```
     * **Key Rules:**
     * 1. **Code steps transform data** for the next tool_call or final output
     * 2. **Tool calls receive** the previous step's output as their input
     * 3. **Final step must be code** that returns data matching the workflow's output schema
     * ## Code Step Execute Function
     * Code steps must export a default async function. Available API:
     * ```javascript
     * export default async function(ctx) {
     * // Read workflow input (original input passed to workflow)
     * const workflowInput = await ctx.readWorkflowInput();
     * // Read result from a previous step by name
     * const prevResult = await ctx.readStepResult('step-name');
     * // Call integration tools (must declare in dependencies array)
     * const result = await ctx.env['i:slack-123'].send_message({
     * channel: '#general',
     * text: 'Hello'
     * });
     * // Sleep utilities
     * await ctx.sleep('wait-name', 5000);  // milliseconds
     * await ctx.sleepUntil('wait-name', Date.now() + 5000);  // timestamp
     * // Return data for next step (must match next tool's input schema)
     * return { field1: prevResult.data, field2: workflowInput.userId };
     * }
     * ```
     * **Code Step Structure:**
     * ```json
     * {
     * "type": "code",
     * "def": {
     * "name": "transform-data",
     * "description": "Transform previous result for next tool",
     * "execute": "export default async function(ctx) { ... }",
     * "dependencies": [{ "integrationId": "i:slack-123" }]  // Optional, only if using ctx.env
     * }
     * }
     * ```
     * ## Tool Call Step Structure
     * Tool calls execute external integrations with the previous step's output:
     * ```json
     * {
     * "type": "tool_call",
     * "def": {
     * "name": "call-external-api",
     * "description": "Execute external tool",
     * "tool_name": "send_message",
     * "integration": "i:slack",
     * "options": {
     * "retries": { "limit": 3, "delay": 1000 },
     * "timeout": 30000
     * }
     * }
     * }
     * ```
     * **Integration IDs:**
     * - Don't know the ID? Use a placeholder like `i:slack` or `i:database`
     * - Validation will show available integrations if the ID doesn't exist
     * - The system will guide you to the correct ID
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     * ## Best Practices
     * 1. **Alternate code → tool_call → code → tool_call** - Code prepares data for tools
     * 2. **Each code step returns data** matching the next tool call's input schema
     * 3. **Use placeholders for integration IDs** - Validation errors will list available integrations
     * 4. **Final code step** aggregates results and returns output matching workflow's output schema
     * 5. **Keep transformations simple** - Each code step should do one thing
     * 6. **Use stopAfter parameter** to test steps incrementally
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions (code and tool_call steps)
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update a workflow while maintaining the alternating code → tool_call pattern.
     * ## Execution Pattern Reminder
     * ```
     * Input → Code → Tool Call → Code → Tool Call → Code (final) → Output
     * ```
     * **Key Rules:**
     * 1. **Each step receives the previous step's output**
     * 2. **Code steps transform data** for the next tool_call
     * 3. **Final step must be code** returning data matching output schema
     * ## Code Step Execute API
     * ```javascript
     * export default async function(ctx) {
     * const workflowInput = await ctx.readWorkflowInput();
     * const prevResult = await ctx.readStepResult('step-name');
     * const toolResult = await ctx.env['i:integration'].tool_name({ args });
     * await ctx.sleep('name', 5000);
     * await ctx.sleepUntil('name', timestamp);
     * return { data: 'for next step' };
     * }
     * ```
     * ## Update Guidelines
     * 1. **Maintain alternation** - code → tool_call → code → tool_call
     * 2. **Match schemas** - Each code step output must match next tool's input schema
     * 3. **Use placeholders for integration IDs** - Validation will show available integrations
     * 4. **Update dependencies** - Add `{ integrationId }` to code step's dependencies if using ctx.env
     * 5. **Test incrementally** - Use stopAfter to test each updated step
     * ## Common Patterns
     * **Adding a tool call:**
     * - Add code step before it to transform data
     * - Add tool_call with placeholder ID (e.g., `i:slack`)
     * - Add code step after to handle result
     * - Validation will guide you to correct IDs
     * **Fixing integration IDs:**
     * - Use placeholder IDs - validation errors list all available integrations
     * - Copy the correct ID from the error message
     * **HTTP Requests:**
     * - `fetch` is NOT available in this environment
     * - To make HTTP requests, use the `i:http` integration with the `HTTP_FETCH` tool
     * - Example: `await ctx.env['i:http'].HTTP_FETCH({ url: '...', method: 'GET' })`
     * - Remember to add `{ integrationId: 'i:http' }` to dependencies
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Get the status and output of a workflow run.
     * This tool retrieves the current status and results of a workflow execution, including:
     * - Current execution status (pending, running, completed, failed)
     * - Results from completed steps
     * - Final workflow output (if completed)
     * - Error information (if failed)
     * - Execution logs and timing information
     * Use this tool to monitor workflow progress, retrieve results, or debug failed executions.
     */
    DECO_WORKFLOW_GET_STATUS: (
      input: DECO_WORKFLOW_GET_STATUSInput,
    ) => Promise<DECO_WORKFLOW_GET_STATUSOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes that consist of alternating steps between tool calls (calling integration tools) and code steps (data transformation). Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to all steps via `ctx.readWorkflowInput()`
     * - Should match the structure expected by the workflow's first step
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
    /**
     * Get catalog of top workspace tools available for code generation
     */
    DISCOVER_WORKSPACE_TOOLS: (
      input: DISCOVER_WORKSPACE_TOOLSInput,
    ) => Promise<DISCOVER_WORKSPACE_TOOLSOutput>;
    /**
     * Execute a previously generated tool specification with provided input
     */
    EXECUTE_TOOL_SPEC: (
      input: EXECUTE_TOOL_SPECInput,
    ) => Promise<EXECUTE_TOOL_SPECOutput>;
    /**
     * Generate a workflow step using AI based on objective
     */
    GENERATE_STEP: (input: GENERATE_STEPInput) => Promise<GENERATE_STEPOutput>;
    /**
     * Generate a custom input view for a specific workflow step field using AI
     */
    GENERATE_STEP_INPUT_VIEW: (
      input: GENERATE_STEP_INPUT_VIEWInput,
    ) => Promise<GENERATE_STEP_INPUT_VIEWOutput>;
    /**
     * Generate a custom output view for a specific workflow step using AI
     */
    GENERATE_STEP_OUTPUT_VIEW: (
      input: GENERATE_STEP_OUTPUT_VIEWInput,
    ) => Promise<GENERATE_STEP_OUTPUT_VIEWOutput>;
    /**
     * Generate a complete tool specification using AI based on a natural language description
     */
    GENERATE_TOOL_SPEC: (
      input: GENERATE_TOOL_SPECInput,
    ) => Promise<GENERATE_TOOL_SPECOutput>;
    /**
     * Generate a custom input or output view definition using AI. Returns a JSON structure that can be rendered as UI components.
     */
    GENERATE_VIEW: (input: GENERATE_VIEWInput) => Promise<GENERATE_VIEWOutput>;
    /**
     * Get detailed information about a specific installed integration
     */
    GET_INTEGRATION_DETAILS: (
      input: GET_INTEGRATION_DETAILSInput,
    ) => Promise<GET_INTEGRATION_DETAILSOutput>;
    /**
     * Get the current logged in user
     */
    GET_USER: (input: GET_USERInput) => Promise<GET_USEROutput>;
    /**
     * Get example view definitions for different use cases
     */
    GET_VIEW_EXAMPLES: (
      input: GET_VIEW_EXAMPLESInput,
    ) => Promise<GET_VIEW_EXAMPLESOutput>;
    /**
     * Generate a workflow step that directly calls a specific tool (without AI)
     */
    IMPORT_TOOL_AS_STEP: (
      input: IMPORT_TOOL_AS_STEPInput,
    ) => Promise<IMPORT_TOOL_AS_STEPOutput>;
    /**
     * List all available tools from all integrations in the workspace for use in generated code
     */
    LIST_AVAILABLE_TOOLS: (
      input: LIST_AVAILABLE_TOOLSInput,
    ) => Promise<LIST_AVAILABLE_TOOLSOutput>;
    /**
     * List all installed integrations and tools available in the current workspace
     */
    LIST_INSTALLED_INTEGRATIONS: (
      input: LIST_INSTALLED_INTEGRATIONSInput,
    ) => Promise<LIST_INSTALLED_INTEGRATIONSOutput>;
    /**
     * List all available tools and integrations that can be installed from the registry
     */
    LIST_REGISTRY_APPS: (
      input: LIST_REGISTRY_APPSInput,
    ) => Promise<LIST_REGISTRY_APPSOutput>;
    /**
     * List all available scopes in the registry
     */
    LIST_REGISTRY_SCOPES: (
      input: LIST_REGISTRY_SCOPESInput,
    ) => Promise<LIST_REGISTRY_SCOPESOutput>;
    /**
     * Execute a dynamically generated tool with provided specification and input
     */
    RUN_GENERATED_TOOL: (
      input: RUN_GENERATED_TOOLInput,
    ) => Promise<RUN_GENERATED_TOOLOutput>;
    /**
     * Execute a workflow step with @ref resolution and optional authorization
     */
    RUN_WORKFLOW_STEP: (
      input: RUN_WORKFLOW_STEPInput,
    ) => Promise<RUN_WORKFLOW_STEPOutput>;
    /**
     * Validate a view definition structure and provide feedback
     */
    VALIDATE_VIEW: (input: VALIDATE_VIEWInput) => Promise<VALIDATE_VIEWOutput>;
  }>;
}

export const Scopes = {
  REGISTRY: {
    REGISTRY_LIST_APPS: "REGISTRY::REGISTRY_LIST_APPS",
    REGISTRY_LIST_PUBLISHED_APPS: "REGISTRY::REGISTRY_LIST_PUBLISHED_APPS",
    REGISTRY_LIST_SCOPES: "REGISTRY::REGISTRY_LIST_SCOPES",
    REGISTRY_PUBLISH_APP: "REGISTRY::REGISTRY_PUBLISH_APP",
  },
  AI_GATEWAY: {
    AI_GENERATE: "AI_GATEWAY::AI_GENERATE",
    AI_GENERATE_OBJECT: "AI_GATEWAY::AI_GENERATE_OBJECT",
  },
  APIKEYS: {
    API_KEYS_CHECK_ACCESS: "APIKEYS::API_KEYS_CHECK_ACCESS",
    API_KEYS_CREATE: "APIKEYS::API_KEYS_CREATE",
    API_KEYS_DELETE: "APIKEYS::API_KEYS_DELETE",
    API_KEYS_DISABLE: "APIKEYS::API_KEYS_DISABLE",
    API_KEYS_ENABLE: "APIKEYS::API_KEYS_ENABLE",
    API_KEYS_GET: "APIKEYS::API_KEYS_GET",
    API_KEYS_LIST: "APIKEYS::API_KEYS_LIST",
    API_KEYS_REISSUE: "APIKEYS::API_KEYS_REISSUE",
    API_KEYS_UPDATE: "APIKEYS::API_KEYS_UPDATE",
    API_KEYS_VALIDATE: "APIKEYS::API_KEYS_VALIDATE",
  },
  INTEGRATIONS: {
    DECO_GET_APP_SCHEMA: "INTEGRATIONS::DECO_GET_APP_SCHEMA",
    DECO_INTEGRATION_INSTALL: "INTEGRATIONS::DECO_INTEGRATION_INSTALL",
    DECO_INTEGRATION_OAUTH_START: "INTEGRATIONS::DECO_INTEGRATION_OAUTH_START",
    DECO_INTEGRATIONS_SEARCH: "INTEGRATIONS::DECO_INTEGRATIONS_SEARCH",
    INTEGRATIONS_CALL_TOOL: "INTEGRATIONS::INTEGRATIONS_CALL_TOOL",
    INTEGRATIONS_CREATE: "INTEGRATIONS::INTEGRATIONS_CREATE",
    INTEGRATIONS_DELETE: "INTEGRATIONS::INTEGRATIONS_DELETE",
    INTEGRATIONS_GET: "INTEGRATIONS::INTEGRATIONS_GET",
    INTEGRATIONS_GET_API_KEY: "INTEGRATIONS::INTEGRATIONS_GET_API_KEY",
    INTEGRATIONS_LIST: "INTEGRATIONS::INTEGRATIONS_LIST",
    INTEGRATIONS_UPDATE: "INTEGRATIONS::INTEGRATIONS_UPDATE",
  },
  TOOLS: {
    DECO_RESOURCE_TOOL_CREATE: "TOOLS::DECO_RESOURCE_TOOL_CREATE",
    DECO_RESOURCE_TOOL_DELETE: "TOOLS::DECO_RESOURCE_TOOL_DELETE",
    DECO_RESOURCE_TOOL_READ: "TOOLS::DECO_RESOURCE_TOOL_READ",
    DECO_RESOURCE_TOOL_SEARCH: "TOOLS::DECO_RESOURCE_TOOL_SEARCH",
    DECO_RESOURCE_TOOL_UPDATE: "TOOLS::DECO_RESOURCE_TOOL_UPDATE",
    DECO_TOOL_CALL_TOOL: "TOOLS::DECO_TOOL_CALL_TOOL",
    DECO_TOOL_RUN_TOOL: "TOOLS::DECO_TOOL_RUN_TOOL",
    DECO_VIEW_RENDER_TOOL_DETAIL: "TOOLS::DECO_VIEW_RENDER_TOOL_DETAIL",
  },
  DECONFIG: {
    CREATE_BRANCH: "DECONFIG::CREATE_BRANCH",
    DELETE_BRANCH: "DECONFIG::DELETE_BRANCH",
    DELETE_FILE: "DECONFIG::DELETE_FILE",
    DIFF_BRANCH: "DECONFIG::DIFF_BRANCH",
    LIST_BRANCHES: "DECONFIG::LIST_BRANCHES",
    LIST_FILES: "DECONFIG::LIST_FILES",
    MERGE_BRANCH: "DECONFIG::MERGE_BRANCH",
    PUT_FILE: "DECONFIG::PUT_FILE",
    READ_FILE: "DECONFIG::READ_FILE",
  },
  WORKFLOWS_MANAGEMENT: {
    DECO_CHAT_VIEWS_LIST: "WORKFLOWS_MANAGEMENT::DECO_CHAT_VIEWS_LIST",
    DECO_RESOURCE_WORKFLOW_CREATE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_CREATE",
    DECO_RESOURCE_WORKFLOW_DELETE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_DELETE",
    DECO_RESOURCE_WORKFLOW_READ:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_READ",
    DECO_RESOURCE_WORKFLOW_SEARCH:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_SEARCH",
    DECO_RESOURCE_WORKFLOW_UPDATE:
      "WORKFLOWS_MANAGEMENT::DECO_RESOURCE_WORKFLOW_UPDATE",
    DECO_VIEW_RENDER_WORKFLOW_DETAIL:
      "WORKFLOWS_MANAGEMENT::DECO_VIEW_RENDER_WORKFLOW_DETAIL",
    DECO_WORKFLOW_GET_STATUS: "WORKFLOWS_MANAGEMENT::DECO_WORKFLOW_GET_STATUS",
    DECO_WORKFLOW_START: "WORKFLOWS_MANAGEMENT::DECO_WORKFLOW_START",
  },
};
