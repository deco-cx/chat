// Generated types - do not edit manually

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String = string;
/**
 * The description of the tool
 */
export type String_1 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_2 = string;

export interface DECO_RESOURCE_TOOL_CREATEInput {
  data: Object;
}
/**
 * Resource data to create
 */
export interface Object {
  name: String;
  description: String_1;
  inputSchema: Object_1;
  outputSchema: Object_2;
  execute: String_2;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_1 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_2 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_3 = string;
/**
 * The name of the tool
 */
export type String_4 = string;
/**
 * The description of the tool
 */
export type String_5 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_6 = string;
/**
 * Creation timestamp
 */
export type String_7 = string;
/**
 * Last update timestamp
 */
export type String_8 = string;
/**
 * User who created the resource
 */
export type String_9 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput {
  uri: String_3;
  data: Object_3;
  created_at?: String_7;
  updated_at?: String_8;
  created_by?: String_9;
}
/**
 * Created resource data
 */
export interface Object_3 {
  name: String_4;
  description: String_5;
  inputSchema: Object_4;
  outputSchema: Object_5;
  execute: String_6;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_4 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_5 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_10 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput {
  uri: String_10;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean = boolean;
/**
 * URI of the deleted resource
 */
export type String_11 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput {
  success: Boolean;
  uri: String_11;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_12 = string;

export interface DECO_RESOURCE_TOOL_READInput {
  uri: String_12;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_13 = string;
/**
 * The name of the tool
 */
export type String_14 = string;
/**
 * The description of the tool
 */
export type String_15 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_16 = string;
/**
 * Creation timestamp
 */
export type String_17 = string;
/**
 * Last update timestamp
 */
export type String_18 = string;
/**
 * User who created the resource
 */
export type String_19 = string;
/**
 * User who last updated the resource
 */
export type String_20 = string;

export interface DECO_RESOURCE_TOOL_READOutput {
  uri: String_13;
  data: Object_6;
  created_at?: String_17;
  updated_at?: String_18;
  created_by?: String_19;
  updated_by?: String_20;
}
/**
 * Resource data
 */
export interface Object_6 {
  name: String_14;
  description: String_15;
  inputSchema: Object_7;
  outputSchema: Object_8;
  execute: String_16;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_7 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_8 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_21 = string;
/**
 * Page number (1-based)
 */
export type Integer = number;
/**
 * Number of items per page
 */
export type Integer_1 = number;
/**
 * Field to sort by
 */
export type String_22 = string;
/**
 * Sort order
 */
export type String_23 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput {
  term?: String_21;
  page?: Integer;
  pageSize?: Integer_1;
  filters?: Object_9;
  sortBy?: String_22;
  sortOrder?: String_23;
}
/**
 * Additional filters to apply
 */
export interface Object_9 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_24 = string;
export type String_25 = string;
/**
 * Description of the resource
 */
export type String_26 = string;
/**
 * URL to the resource icon
 */
export type String_27 = string;
/**
 * The name of the tool
 */
export type String_28 = string;
/**
 * The description of the tool
 */
export type String_29 = string;
/**
 * Creation timestamp
 */
export type String_30 = string;
/**
 * Last update timestamp
 */
export type String_31 = string;
/**
 * User who created the resource
 */
export type String_32 = string;
/**
 * User who last updated the resource
 */
export type String_33 = string;
/**
 * Array of matching resources
 */
export type Array = Object_10[];
/**
 * Total number of matching resources
 */
export type Integer_2 = number;
/**
 * Current page number
 */
export type Integer_3 = number;
/**
 * Number of items per page
 */
export type Integer_4 = number;
/**
 * Total number of pages
 */
export type Integer_5 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_1 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_2 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput {
  items: Array;
  totalCount: Integer_2;
  page: Integer_3;
  pageSize: Integer_4;
  totalPages: Integer_5;
  hasNextPage: Boolean_1;
  hasPreviousPage: Boolean_2;
}
export interface Object_10 {
  uri: String_24;
  /**
   * Resource data with required name
   */
  data: Object_11 & Object_12;
  created_at?: String_30;
  updated_at?: String_31;
  created_by?: String_32;
  updated_by?: String_33;
}
export interface Object_11 {
  name: String_25;
  description?: String_26;
  icon?: String_27;
}
export interface Object_12 {
  name: String_28;
  description: String_29;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_34 = string;
/**
 * The name of the tool
 */
export type String_35 = string;
/**
 * The description of the tool
 */
export type String_36 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_37 = string;

export interface DECO_RESOURCE_TOOL_UPDATEInput {
  uri: String_34;
  data: Object_13;
}
/**
 * Updated resource data
 */
export interface Object_13 {
  name: String_35;
  description: String_36;
  inputSchema: Object_14;
  outputSchema: Object_15;
  execute: String_37;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_14 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_15 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_38 = string;
/**
 * The name of the tool
 */
export type String_39 = string;
/**
 * The description of the tool
 */
export type String_40 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_41 = string;
/**
 * Original creation timestamp
 */
export type String_42 = string;
/**
 * Last update timestamp
 */
export type String_43 = string;
/**
 * User who originally created the resource
 */
export type String_44 = string;
/**
 * User who last updated the resource
 */
export type String_45 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput {
  uri: String_38;
  data: Object_16;
  created_at?: String_42;
  updated_at?: String_43;
  created_by?: String_44;
  updated_by?: String_45;
}
/**
 * Updated resource data
 */
export interface Object_16 {
  name: String_39;
  description: String_40;
  inputSchema: Object_17;
  outputSchema: Object_18;
  execute: String_41;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_17 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_18 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_46 = string;

export interface DECO_TOOL_CALL_TOOLInput {
  uri: String_46;
  input: Object_19;
}
/**
 * The input of the code
 */
export interface Object_19 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_47 = "log" | "warn" | "error";
export type String_48 = string;
/**
 * Console logs from the execution
 */
export type Array_1 = Object_20[];

export interface DECO_TOOL_CALL_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_1;
}
export interface Object_20 {
  type: String_47;
  content: String_48;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_49 = string;
/**
 * The description of the tool
 */
export type String_50 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_51 = string;

export interface DECO_TOOL_RUN_TOOLInput {
  tool: Object_21;
  input: Object_24;
}
export interface Object_21 {
  name: String_49;
  description: String_50;
  inputSchema: Object_22;
  outputSchema: Object_23;
  execute: String_51;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_22 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_23 {
  [k: string]: unknown;
}
/**
 * The input of the code
 */
export interface Object_24 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_52 = "log" | "warn" | "error";
export type String_53 = string;
/**
 * Console logs from the execution
 */
export type Array_2 = Object_25[];

export interface DECO_TOOL_RUN_TOOLOutput {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_2;
}
export interface Object_25 {
  type: String_52;
  content: String_53;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_54 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput {
  resource: String_54;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_55 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_56 = string;
export type String_57 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_3 = String_57[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput {
  url: String_55;
  prompt?: String_56;
  tools?: Array_3;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_58 = string;
export type String_59 = "HTTP";
export type String_60 = string;
export type String_61 = string;
export type String_62 = "SSE";
export type String_63 = string;
export type String_64 = string;
export type String_65 = string;
export type String_66 = "Websocket";
export type String_67 = string;
export type String_68 = string;
export type String_69 = "Deco";
export type String_70 = string;
export type String_71 = string;
export type String_72 = "INNATE";
export type String_73 = string;
export type String_74 = string;
export type String_75 = string;
export type Integer_6 = number;
export type String_76 = string;

export interface INTEGRATIONS_CALL_TOOLInput {
  id?: String_58;
  connection?: Object_26 | Object_27 | Object_29 | Object_30 | Object_31;
  params: Object_32;
}
export interface Object_26 {
  type: String_59;
  url: String_60;
  token?: String_61;
}
export interface Object_27 {
  type: String_62;
  url: String_63;
  token?: String_64;
  headers?: Object_28;
}
export interface Object_28 {
  [k: string]: String_65;
}
export interface Object_29 {
  type: String_66;
  url: String_67;
  token?: String_68;
}
export interface Object_30 {
  type: String_69;
  tenant: String_70;
  token?: String_71;
}
export interface Object_31 {
  type: String_72;
  name: String_73;
  workspace?: String_74;
}
export interface Object_32 {
  _meta?: Object_33;
  name: String_76;
  arguments?: Object_34;
  [k: string]: unknown;
}
export interface Object_33 {
  progressToken?: String_75 | Integer_6;
  [k: string]: unknown;
}
export interface Object_34 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_77 = "HTTP";
export type String_78 = string;
export type String_79 = string;
export type String_80 = "SSE";
export type String_81 = string;
export type String_82 = string;
export type String_83 = string;
export type String_84 = "Websocket";
export type String_85 = string;
export type String_86 = string;
export type String_87 = "Deco";
export type String_88 = string;
export type String_89 = string;
export type String_90 = "INNATE";
export type String_91 = string;
export type String_92 = string;
/**
 * Whether to ignore the cache when listing tools
 */
export type Boolean_3 = boolean;

export interface INTEGRATIONS_LIST_TOOLSInput {
  connection: Object_35 | Object_36 | Object_38 | Object_39 | Object_40;
  ignoreCache?: Boolean_3;
}
export interface Object_35 {
  type: String_77;
  url: String_78;
  token?: String_79;
}
export interface Object_36 {
  type: String_80;
  url: String_81;
  token?: String_82;
  headers?: Object_37;
}
export interface Object_37 {
  [k: string]: String_83;
}
export interface Object_38 {
  type: String_84;
  url: String_85;
  token?: String_86;
}
export interface Object_39 {
  type: String_87;
  tenant: String_88;
  token?: String_89;
}
export interface Object_40 {
  type: String_90;
  name: String_91;
  workspace?: String_92;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_LIST_TOOLSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MY_INVITES_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_4 = unknown[];

export interface MY_INVITES_LISTOutput {
  items: Array_4;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull = String_93 | Null;
export type String_93 = string;
export type Null = null;
export type String_94 = string;
export type NumberNull = Number | Null_1;
export type Number = number;
export type Null_1 = null;
export type BooleanNull = Boolean_4 | Null_2;
export type Boolean_4 = boolean;
export type Null_2 = null;
export type StringNull_1 = String_95 | Null_3;
export type String_95 = string;
export type Null_3 = null;

export interface PROFILES_UPDATEInput {
  name?: StringNull;
  email?: String_94;
  deco_user_id?: NumberNull;
  is_new_user?: BooleanNull;
  phone?: StringNull_1;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROFILES_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_96 = string;
export type String_97 = string;

export interface PROJECT_ACTIVITY_REGISTERInput {
  org: String_96;
  project: String_97;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECT_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_98 = string;

export interface PROJECTS_LISTInput {
  org: String_98;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROJECTS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Integer_7 = number;

export interface PROJECTS_RECENTInput {
  limit?: Integer_7;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_99 = string;
export type String_100 = string;
export type String_101 = string;
export type StringNull_2 = String_102 | Null_4;
export type String_102 = string;
export type Null_4 = null;
export type Number_1 = number;
export type String_103 = string;
export type StringNull_3 = String_104 | Null_5;
export type String_104 = string;
export type Null_5 = null;
export type String_105 = string;
export type Array_5 = Object_41[];

export interface PROJECTS_RECENTOutput {
  items: Array_5;
}
export interface Object_41 {
  id: String_99;
  title: String_100;
  slug: String_101;
  avatar_url: StringNull_2;
  org: Object_42;
  last_accessed_at?: String_105;
}
export interface Object_42 {
  id: Number_1;
  slug: String_103;
  avatar_url?: StringNull_3;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the app to get
 */
export type String_106 = string;
/**
 * The id of the app to get
 */
export type String_107 = string;

export interface REGISTRY_GET_APPInput {
  name?: String_106;
  id?: String_107;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_108 = string;
export type String_109 = string;
export type String_110 = string;
export type String_111 = string;
export type String_112 = string;
export type String_113 = string;
export type String_114 = string;
export type String_115 = string;
export type String_116 = "HTTP";
export type String_117 = string;
export type String_118 = string;
export type String_119 = "SSE";
export type String_120 = string;
export type String_121 = string;
export type String_122 = string;
export type String_123 = "Websocket";
export type String_124 = string;
export type String_125 = string;
export type String_126 = "Deco";
export type String_127 = string;
export type String_128 = string;
export type String_129 = "INNATE";
export type String_130 = string;
export type String_131 = string;
export type String_132 = string;
export type String_133 = string;
export type Boolean_5 = boolean;
export type String_134 = string;
export type Boolean_6 = boolean;
export type String_135 = string;
export type String_136 = string;
export type String_137 = string;
export type Array_6 = Object_49[];
export type Null_6 = null;

export interface REGISTRY_GET_APPOutput {
  id: String_108;
  workspace: String_109;
  scopeId: String_110;
  scopeName: String_111;
  appName: String_112;
  name: String_113;
  description?: String_114;
  icon?: String_115;
  connection: Object_43 | Object_44 | Object_46 | Object_47 | Object_48;
  createdAt: String_132;
  updatedAt: String_133;
  unlisted: Boolean_5;
  friendlyName?: String_134;
  verified?: Boolean_6;
  tools?: Array_6;
  metadata?: Object_53 | Null_6;
}
export interface Object_43 {
  type: String_116;
  url: String_117;
  token?: String_118;
}
export interface Object_44 {
  type: String_119;
  url: String_120;
  token?: String_121;
  headers?: Object_45;
}
export interface Object_45 {
  [k: string]: String_122;
}
export interface Object_46 {
  type: String_123;
  url: String_124;
  token?: String_125;
}
export interface Object_47 {
  type: String_126;
  tenant: String_127;
  token?: String_128;
}
export interface Object_48 {
  type: String_129;
  name: String_130;
  workspace?: String_131;
}
export interface Object_49 {
  id: String_135;
  name: String_136;
  description?: String_137;
  inputSchema: Object_50;
  outputSchema?: Object_51;
  metadata?: Object_52;
}
export interface Object_50 {
  [k: string]: unknown;
}
export interface Object_51 {
  [k: string]: unknown;
}
export interface Object_52 {
  [k: string]: unknown;
}
export interface Object_53 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_138 = string;

export interface TEAM_INVITE_ACCEPTInput {
  id: String_138;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_ACCEPTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_139 = string;

export interface TEAM_INVITE_DELETEInput {
  id: String_139;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_INVITE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_2 = number;

export interface TEAM_MEMBER_ACTIVITY_REGISTERInput {
  teamId: Number_2;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBER_ACTIVITY_REGISTEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_3 = number;
export type Boolean_7 = boolean;

export interface TEAM_MEMBERS_GETInput {
  teamId: Number_3;
  withActivity?: Boolean_7;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_140 = string;
export type String_141 = string;
export type Number_4 = number;
export type String_142 = string;
export type Array_8 = Object_55[];
export type Array_7 = Object_54[];

export interface TEAM_MEMBERS_INVITEInput {
  teamId: String_140;
  invitees: Array_7;
}
export interface Object_54 {
  email: String_141;
  roles: Array_8;
}
export interface Object_55 {
  id: Number_4;
  name: String_142;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_5 = number;
export type Number_6 = number;

export interface TEAM_MEMBERS_REMOVEInput {
  teamId: Number_5;
  memberId: Number_6;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_REMOVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_7 = number;
export type Number_8 = number;
export type Boolean_8 = boolean;

export interface TEAM_MEMBERS_UPDATEInput {
  teamId: Number_7;
  memberId: Number_8;
  data: Object_56;
}
export interface Object_56 {
  admin?: Boolean_8;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_9 = number;
export type String_143 = string;
export type Number_10 = number;
export type String_144 = "grant" | "revoke";

export interface TEAM_MEMBERS_UPDATE_ROLEInput {
  teamId: Number_9;
  userId: String_143;
  roleId: Number_10;
  action: String_144;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_UPDATE_ROLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_145 = string;
export type String_146 = string;
export type String_147 = "Bug" | "Idea";
export type String_148 = string;
export type String_149 = string;
export type String_150 = string;

export interface TEAM_REPORT_ISSUE_CREATEInput {
  orgSlug?: String_145;
  projectSlug?: String_146;
  type: String_147;
  content: String_148;
  url?: String_149;
  path?: String_150;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_REPORT_ISSUE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_11 = number;
export type String_151 = string;
export type String_152 = string;
export type String_153 = string;
export type String_154 = "allow" | "deny";
export type String_155 = string;
export type Array_9 = Object_59[];
export type String_156 = string;
export type Array_10 = String_156[];
export type String_157 = string;
export type String_158 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_11 = Object_60[];

export interface TEAM_ROLE_CREATEInput {
  teamId: Number_11;
  roleData: Object_57;
}
export interface Object_57 {
  name: String_151;
  description?: String_152;
  tools: Object_58;
  agents?: Array_10;
  members?: Array_11;
}
export interface Object_58 {
  [k: string]: Array_9;
}
export interface Object_59 {
  toolName: String_153;
  effect: String_154;
  policyId?: String_155;
}
export interface Object_60 {
  user_id: String_157;
  action: String_158;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_12 = number;
export type Number_13 = number;

export interface TEAM_ROLE_DELETEInput {
  teamId: Number_12;
  roleId: Number_13;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_14 = number;
export type Number_15 = number;

export interface TEAM_ROLE_GETInput {
  teamId: Number_14;
  roleId: Number_15;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_16 = number;
export type Number_17 = number;
export type String_159 = string;
export type String_160 = string;
export type String_161 = string;
export type String_162 = "allow" | "deny";
export type String_163 = string;
export type Array_12 = Object_63[];
export type String_164 = string;
export type Array_13 = String_164[];
export type String_165 = string;
export type String_166 = "grant" | "revoke";
/**
 * Only send member actions for changes (diff between original and current state)
 *     Members who already have the role and remain selected: no action needed (maintains access)
 *     Members who don't have the role and remain unselected: no action needed (maintains no access)
 */
export type Array_14 = Object_64[];

export interface TEAM_ROLE_UPDATEInput {
  teamId: Number_16;
  roleId: Number_17;
  roleData: Object_61;
}
export interface Object_61 {
  name: String_159;
  description?: String_160;
  tools: Object_62;
  agents?: Array_13;
  members?: Array_14;
}
export interface Object_62 {
  [k: string]: Array_12;
}
export interface Object_63 {
  toolName: String_161;
  effect: String_162;
  policyId?: String_163;
}
export interface Object_64 {
  user_id: String_165;
  action: String_166;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_ROLE_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_18 = number;

export interface TEAM_ROLES_LISTInput {
  teamId: Number_18;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_15 = unknown[];

export interface TEAM_ROLES_LISTOutput {
  items: Array_15;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_167 = string;
export type String_168 = string;

export interface TEAMS_CREATEInput {
  name: String_167;
  slug?: String_168;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_19 = number;

export interface TEAMS_DELETEInput {
  teamId: Number_19;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_169 = string;

export interface TEAMS_GETInput {
  slug: String_169;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_170 = string;

export interface TEAMS_GET_THEMEInput {
  slug: String_170;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_GET_THEMEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_16 = unknown[];

export interface TEAMS_LISTOutput {
  items: Array_16;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the team to update
 */
export type Number_20 = number;
/**
 * Team name
 */
export type String_171 = string;
/**
 * Team URL slug
 */
export type String_172 = string;
/**
 * Main background color of the application (OKLCH/hex format)
 */
export type String_173 = string;
/**
 * Main text color on background (OKLCH/hex format)
 */
export type String_174 = string;
/**
 * Background color for cards and panels (OKLCH/hex format)
 */
export type String_175 = string;
/**
 * Text color on cards and panels (OKLCH/hex format)
 */
export type String_176 = string;
/**
 * Background color for popovers and dropdowns (OKLCH/hex format)
 */
export type String_177 = string;
/**
 * Text color in popovers and dropdowns (OKLCH/hex format)
 */
export type String_178 = string;
/**
 * Primary brand color for buttons and highlights (OKLCH/hex format)
 */
export type String_179 = string;
/**
 * Text color on primary elements (OKLCH/hex format)
 */
export type String_180 = string;
/**
 * Lighter variant of primary color (OKLCH/hex format)
 */
export type String_181 = string;
/**
 * Darker variant of primary color (OKLCH/hex format)
 */
export type String_182 = string;
/**
 * Secondary color for less prominent elements (OKLCH/hex format)
 */
export type String_183 = string;
/**
 * Text color on secondary elements (OKLCH/hex format)
 */
export type String_184 = string;
/**
 * Muted background color for subtle elements (OKLCH/hex format)
 */
export type String_185 = string;
/**
 * Muted text color for secondary text (OKLCH/hex format)
 */
export type String_186 = string;
/**
 * Accent color for interactive elements (OKLCH/hex format)
 */
export type String_187 = string;
/**
 * Text color on accent elements (OKLCH/hex format)
 */
export type String_188 = string;
/**
 * Color for destructive actions and errors (OKLCH/hex format)
 */
export type String_189 = string;
/**
 * Text color on destructive elements (OKLCH/hex format)
 */
export type String_190 = string;
/**
 * Color for success states and positive actions (OKLCH/hex format)
 */
export type String_191 = string;
/**
 * Text color on success elements (OKLCH/hex format)
 */
export type String_192 = string;
/**
 * Color for warning states and caution indicators (OKLCH/hex format)
 */
export type String_193 = string;
/**
 * Text color on warning elements (OKLCH/hex format)
 */
export type String_194 = string;
/**
 * Border color for elements (OKLCH/hex format)
 */
export type String_195 = string;
/**
 * Border color for input fields (OKLCH/hex format)
 */
export type String_196 = string;
/**
 * Background color for sidebar navigation (OKLCH/hex format)
 */
export type String_197 = string;
/**
 * Text color in sidebar navigation (OKLCH/hex format)
 */
export type String_198 = string;
/**
 * Accent background color for sidebar elements (OKLCH/hex format)
 */
export type String_199 = string;
/**
 * Text color on sidebar accent elements (OKLCH/hex format)
 */
export type String_200 = string;
/**
 * Border color for sidebar elements (OKLCH/hex format)
 */
export type String_201 = string;
/**
 * Focus ring color for sidebar elements (OKLCH/hex format)
 */
export type String_202 = string;
/**
 * Background color for splash screen animation (OKLCH/hex format)
 */
export type String_203 = string;
/**
 * URL to team avatar/logo image
 */
export type String_204 = string;
/**
 * Use a Google Fonts font
 */
export type String_205 = "Google Fonts";
/**
 * Name of the Google Font (e.g., 'Inter', 'Roboto', 'Open Sans')
 */
export type String_206 = string;
/**
 * Use a custom uploaded font
 */
export type String_207 = "Custom";
/**
 * Display name for the custom font
 */
export type String_208 = string;
/**
 * URL to the custom font file
 */
export type String_209 = string;

export interface TEAMS_UPDATEInput {
  id: Number_20;
  data: Object_65;
}
export interface Object_65 {
  name?: String_171;
  slug?: String_172;
  theme?: Object_66;
}
/**
 * Theme configuration for the workspace. Only include the properties you want to change - existing values will be preserved.
 */
export interface Object_66 {
  variables?: Object_67;
  picture?: String_204;
  /**
   * Font configuration for the workspace
   */
  font?: Object_68 | Object_69;
}
/**
 * CSS custom properties for theme colors. Use OKLCH format (preferred) or hex colors.
 */
export interface Object_67 {
  "--background"?: String_173;
  "--foreground"?: String_174;
  "--card"?: String_175;
  "--card-foreground"?: String_176;
  "--popover"?: String_177;
  "--popover-foreground"?: String_178;
  "--primary"?: String_179;
  "--primary-foreground"?: String_180;
  "--primary-light"?: String_181;
  "--primary-dark"?: String_182;
  "--secondary"?: String_183;
  "--secondary-foreground"?: String_184;
  "--muted"?: String_185;
  "--muted-foreground"?: String_186;
  "--accent"?: String_187;
  "--accent-foreground"?: String_188;
  "--destructive"?: String_189;
  "--destructive-foreground"?: String_190;
  "--success"?: String_191;
  "--success-foreground"?: String_192;
  "--warning"?: String_193;
  "--warning-foreground"?: String_194;
  "--border"?: String_195;
  "--input"?: String_196;
  "--sidebar"?: String_197;
  "--sidebar-foreground"?: String_198;
  "--sidebar-accent"?: String_199;
  "--sidebar-accent-foreground"?: String_200;
  "--sidebar-border"?: String_201;
  "--sidebar-ring"?: String_202;
  "--splash"?: String_203;
}
export interface Object_68 {
  type: String_205;
  name: String_206;
}
export interface Object_69 {
  type: String_207;
  name: String_208;
  url: String_209;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_210 = string;
/**
 * Human-readable name of the agent
 */
export type String_211 = string;
/**
 * URL to the agent's avatar image
 */
export type String_212 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_213 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_214 = string;
export type String_215 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_17 = String_215[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_21 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_1 = Number_22 | Null_7;
export type Number_22 = number;
export type Null_7 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_216 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_217 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_23 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_9 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_10 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_218 = string;
/**
 * URL for the view
 */
export type String_219 = string;
/**
 * Name of the view
 */
export type String_220 = string;
/**
 * Views where the agent can be used
 */
export type Array_18 = Object_73[];
/**
 * Visibility of the agent
 */
export type String_221 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_222 = string;
export type Null_8 = null;
export type Number_24 = number;
export type Null_9 = null;

export interface AGENTS_CREATEInput {
  id?: String_210;
  name?: String_211;
  avatar?: String_212;
  instructions?: String_213;
  description?: String_214;
  tools_set?: Object_70;
  max_steps?: Number_21;
  max_tokens?: NumberNull_1;
  model?: String_216;
  memory?: Object_71;
  views?: Array_18;
  visibility?: String_221;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_222
      )
    | Null_8;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_24
      )
    | Null_9;
}
/**
 * Tools available to the agent
 */
export interface Object_70 {
  [k: string]: Array_17;
}
/**
 * Memory to use for the agent
 */
export interface Object_71 {
  discriminator?: String_217;
  last_messages?: Number_23;
  semantic_recall?: Boolean_9;
  working_memory?: Object_72;
}
/**
 * Working memory to use for the agent
 */
export interface Object_72 {
  enabled?: Boolean_10;
  template?: String_218;
}
export interface Object_73 {
  url: String_219;
  name: String_220;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_223 = string;
/**
 * Human-readable name of the agent
 */
export type String_224 = string;
/**
 * URL to the agent's avatar image
 */
export type String_225 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_226 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_227 = string;
export type String_228 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_19 = String_228[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_25 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_2 = Number_26 | Null_10;
export type Number_26 = number;
export type Null_10 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_229 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_230 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_27 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_11 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_12 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_231 = string;
/**
 * URL for the view
 */
export type String_232 = string;
/**
 * Name of the view
 */
export type String_233 = string;
/**
 * Views where the agent can be used
 */
export type Array_20 = Object_77[];
/**
 * Visibility of the agent
 */
export type String_234 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_235 = string;
export type Null_11 = null;
export type Number_28 = number;
export type Null_12 = null;

export interface AGENTS_CREATEOutput {
  id: String_223;
  name: String_224;
  avatar: String_225;
  instructions: String_226;
  description?: String_227;
  tools_set: Object_74;
  max_steps?: Number_25;
  max_tokens?: NumberNull_2;
  model?: String_229;
  memory?: Object_75;
  views: Array_20;
  visibility: String_234;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_235
      )
    | Null_11;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_28
      )
    | Null_12;
}
/**
 * Tools available to the agent
 */
export interface Object_74 {
  [k: string]: Array_19;
}
/**
 * Memory to use for the agent
 */
export interface Object_75 {
  discriminator?: String_230;
  last_messages?: Number_27;
  semantic_recall?: Boolean_11;
  working_memory?: Object_76;
}
/**
 * Working memory to use for the agent
 */
export interface Object_76 {
  enabled?: Boolean_12;
  template?: String_231;
}
export interface Object_77 {
  url: String_232;
  name: String_233;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_236 = string;

export interface AGENTS_DELETEInput {
  id: String_236;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_13 = boolean;

export interface AGENTS_DELETEOutput {
  deleted: Boolean_13;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_237 = string;

export interface AGENTS_GETInput {
  id: String_237;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_238 = string;
/**
 * Human-readable name of the agent
 */
export type String_239 = string;
/**
 * URL to the agent's avatar image
 */
export type String_240 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_241 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_242 = string;
export type String_243 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_21 = String_243[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_29 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_3 = Number_30 | Null_13;
export type Number_30 = number;
export type Null_13 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_244 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_245 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_31 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_14 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_15 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_246 = string;
/**
 * URL for the view
 */
export type String_247 = string;
/**
 * Name of the view
 */
export type String_248 = string;
/**
 * Views where the agent can be used
 */
export type Array_22 = Object_81[];
/**
 * Visibility of the agent
 */
export type String_249 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_250 = string;
export type Null_14 = null;
export type Number_32 = number;
export type Null_15 = null;

export interface AGENTS_GETOutput {
  id: String_238;
  name: String_239;
  avatar: String_240;
  instructions: String_241;
  description?: String_242;
  tools_set: Object_78;
  max_steps?: Number_29;
  max_tokens?: NumberNull_3;
  model?: String_244;
  memory?: Object_79;
  views: Array_22;
  visibility: String_249;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_250
      )
    | Null_14;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_32
      )
    | Null_15;
}
/**
 * Tools available to the agent
 */
export interface Object_78 {
  [k: string]: Array_21;
}
/**
 * Memory to use for the agent
 */
export interface Object_79 {
  discriminator?: String_245;
  last_messages?: Number_31;
  semantic_recall?: Boolean_14;
  working_memory?: Object_80;
}
/**
 * Working memory to use for the agent
 */
export interface Object_80 {
  enabled?: Boolean_15;
  template?: String_246;
}
export interface Object_81 {
  url: String_247;
  name: String_248;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AGENTS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_251 = string;
/**
 * Human-readable name of the agent
 */
export type String_252 = string;
/**
 * URL to the agent's avatar image
 */
export type String_253 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_254 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_255 = string;
export type String_256 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_24 = String_256[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_33 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_4 = Number_34 | Null_16;
export type Number_34 = number;
export type Null_16 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_257 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_258 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_35 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_16 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_17 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_259 = string;
/**
 * URL for the view
 */
export type String_260 = string;
/**
 * Name of the view
 */
export type String_261 = string;
/**
 * Views where the agent can be used
 */
export type Array_25 = Object_86[];
/**
 * Visibility of the agent
 */
export type String_262 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_263 = string;
export type Null_17 = null;
export type Number_36 = number;
export type Null_18 = null;
export type StringNull_4 = String_264 | Null_19;
export type String_264 = string;
export type Null_19 = null;
export type StringNull_5 = String_265 | Null_20;
export type String_265 = string;
export type Null_20 = null;
export type Array_23 = Object_82[];

export interface AGENTS_LISTOutput {
  items: Array_23;
}
export interface Object_82 {
  id: String_251;
  name: String_252;
  avatar: String_253;
  instructions: String_254;
  description?: String_255;
  tools_set: Object_83;
  max_steps?: Number_33;
  max_tokens?: NumberNull_4;
  model?: String_257;
  memory?: Object_84;
  views: Array_25;
  visibility: String_262;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_263
      )
    | Null_17;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_36
      )
    | Null_18;
  lastAccess?: StringNull_4;
  lastAccessor?: StringNull_5;
}
/**
 * Tools available to the agent
 */
export interface Object_83 {
  [k: string]: Array_24;
}
/**
 * Memory to use for the agent
 */
export interface Object_84 {
  discriminator?: String_258;
  last_messages?: Number_35;
  semantic_recall?: Boolean_16;
  working_memory?: Object_85;
}
/**
 * Working memory to use for the agent
 */
export interface Object_85 {
  enabled?: Boolean_17;
  template?: String_259;
}
export interface Object_86 {
  url: String_260;
  name: String_261;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_266 = string;
/**
 * Unique identifier for the agent
 */
export type String_267 = string;
/**
 * Human-readable name of the agent
 */
export type String_268 = string;
/**
 * URL to the agent's avatar image
 */
export type String_269 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_270 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_271 = string;
export type String_272 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_26 = String_272[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_37 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_5 = Number_38 | Null_21;
export type Number_38 = number;
export type Null_21 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_273 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_274 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_39 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_18 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_19 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_275 = string;
/**
 * URL for the view
 */
export type String_276 = string;
/**
 * Name of the view
 */
export type String_277 = string;
/**
 * Views where the agent can be used
 */
export type Array_27 = Object_91[];
/**
 * Visibility of the agent
 */
export type String_278 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_279 = string;
export type Null_22 = null;
export type Number_40 = number;
export type Null_23 = null;

export interface AGENTS_UPDATEInput {
  id: String_266;
  agent: Object_87;
}
export interface Object_87 {
  id?: String_267;
  name?: String_268;
  avatar?: String_269;
  instructions?: String_270;
  description?: String_271;
  tools_set?: Object_88;
  max_steps?: Number_37;
  max_tokens?: NumberNull_5;
  model?: String_273;
  memory?: Object_89;
  views?: Array_27;
  visibility?: String_278;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_279
      )
    | Null_22;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_40
      )
    | Null_23;
}
/**
 * Tools available to the agent
 */
export interface Object_88 {
  [k: string]: Array_26;
}
/**
 * Memory to use for the agent
 */
export interface Object_89 {
  discriminator?: String_274;
  last_messages?: Number_39;
  semantic_recall?: Boolean_18;
  working_memory?: Object_90;
}
/**
 * Working memory to use for the agent
 */
export interface Object_90 {
  enabled?: Boolean_19;
  template?: String_275;
}
export interface Object_91 {
  url: String_276;
  name: String_277;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the agent
 */
export type String_280 = string;
/**
 * Human-readable name of the agent
 */
export type String_281 = string;
/**
 * URL to the agent's avatar image
 */
export type String_282 = string;
/**
 * System prompt/instructions for the agent
 */
export type String_283 = string;
/**
 * Brief description of the agent's purpose or capabilities
 */
export type String_284 = string;
export type String_285 = string;
/**
 * Tool names for a given integrationId. Add an empty array for enabling all tools of this integration. This should prevent bugs
 */
export type Array_28 = String_285[];
/**
 * Maximum number of steps the agent can take, defaults to 7
 */
export type Number_41 = number;
/**
 * Maximum number of tokens the agent can use, defaults to 8192
 */
export type NumberNull_6 = Number_42 | Null_24;
export type Number_42 = number;
export type Null_24 = null;
/**
 * Model to use for the agent - either a well-known model ID or UUID for BYOK models
 */
export type String_286 = string;
/**
 * A memory discriminator for the tenant
 */
export type String_287 = string;
/**
 * The number of messages to keep in memory
 */
export type Number_43 = number;
/**
 * Whether to use semantic recall
 */
export type Boolean_20 = boolean;
/**
 * Whether to use working memory
 */
export type Boolean_21 = boolean;
/**
 * The template or JSON schema string to use for working memory
 */
export type String_288 = string;
/**
 * URL for the view
 */
export type String_289 = string;
/**
 * Name of the view
 */
export type String_290 = string;
/**
 * Views where the agent can be used
 */
export type Array_29 = Object_95[];
/**
 * Visibility of the agent
 */
export type String_291 = "PUBLIC" | "WORKSPACE" | "PRIVATE";
export type String_292 = string;
export type Null_25 = null;
export type Number_44 = number;
export type Null_26 = null;

export interface AGENTS_UPDATEOutput {
  id: String_280;
  name: String_281;
  avatar: String_282;
  instructions: String_283;
  description?: String_284;
  tools_set: Object_92;
  max_steps?: Number_41;
  max_tokens?: NumberNull_6;
  model?: String_286;
  memory?: Object_93;
  views: Array_29;
  visibility: String_291;
  /**
   * Access control by role
   */
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_292
      )
    | Null_25;
  /**
   * Temperature of the LLM. Must be between 0 and 1.
   */
  temperature?:
    | (
        | {
            [k: string]: unknown;
          }
        | Number_44
      )
    | Null_26;
}
/**
 * Tools available to the agent
 */
export interface Object_92 {
  [k: string]: Array_28;
}
/**
 * Memory to use for the agent
 */
export interface Object_93 {
  discriminator?: String_287;
  last_messages?: Number_43;
  semantic_recall?: Boolean_20;
  working_memory?: Object_94;
}
/**
 * Working memory to use for the agent
 */
export interface Object_94 {
  enabled?: Boolean_21;
  template?: String_288;
}
export interface Object_95 {
  url: String_289;
  name: String_290;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_293 = string;
export type String_294 = "user" | "assistant" | "system";
export type String_295 = string;
export type String_296 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_297 = string;
/**
 * Media type of the attachment
 */
export type String_298 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_299 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_31 = Object_97[];
/**
 * Array of messages for the conversation
 */
export type Array_30 = Object_96[];
/**
 * Skip transaction creation
 */
export type Boolean_22 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_300 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_45 = number;
/**
 * Temperature for the generation
 */
export type Number_46 = number;
export type String_301 = string;
export type Array_32 = String_301[];

export interface AI_GENERATEInput {
  messages: Array_30;
  skipTransaction?: Boolean_22;
  model?: String_300;
  maxTokens?: Number_45;
  temperature?: Number_46;
  tools?: Object_98;
}
export interface Object_96 {
  id?: String_293;
  role: String_294;
  content: String_295;
  createdAt?: String_296;
  experimental_attachments?: Array_31;
}
export interface Object_97 {
  name?: String_297;
  contentType?: String_298;
  url: String_299;
}
/**
 * Tools available for the generation
 */
export interface Object_98 {
  [k: string]: Array_32;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The generated text response
 */
export type String_302 = string;
/**
 * Number of tokens in the prompt
 */
export type Number_47 = number;
/**
 * Number of tokens in the completion
 */
export type Number_48 = number;
/**
 * Total number of tokens used
 */
export type Number_49 = number;
/**
 * Transaction ID
 */
export type String_303 = string;
/**
 * Reason why generation finished
 */
export type String_304 = string;

export interface AI_GENERATEOutput {
  text: String_302;
  usage: Object_99;
  finishReason?: String_304;
}
/**
 * Token usage information
 */
export interface Object_99 {
  promptTokens: Number_47;
  completionTokens: Number_48;
  totalTokens: Number_49;
  transactionId?: String_303;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_305 = string;
export type String_306 = "user" | "assistant" | "system";
export type String_307 = string;
export type String_308 = string;
/**
 * The name of the attachment, usually the file name
 */
export type String_309 = string;
/**
 * Media type of the attachment
 */
export type String_310 = string;
/**
 * URL of the attachment (hosted file or Data URL)
 */
export type String_311 = string;
/**
 * Additional attachments to be sent along with the message
 */
export type Array_34 = Object_101[];
/**
 * Array of messages for the conversation
 */
export type Array_33 = Object_100[];
/**
 * Skip transaction creation
 */
export type Boolean_23 = boolean;
/**
 * Model ID to use for generation (defaults to workspace default)
 */
export type String_312 = string;
/**
 * Maximum number of tokens to generate
 */
export type Number_50 = number;
/**
 * Temperature for the generation
 */
export type Number_51 = number;
export type String_313 = string;
export type Array_35 = String_313[];

export interface AI_GENERATE_OBJECTInput {
  messages: Array_33;
  schema: Object_102;
  skipTransaction?: Boolean_23;
  model?: String_312;
  maxTokens?: Number_50;
  temperature?: Number_51;
  tools?: Object_103;
}
export interface Object_100 {
  id?: String_305;
  role: String_306;
  content: String_307;
  createdAt?: String_308;
  experimental_attachments?: Array_34;
}
export interface Object_101 {
  name?: String_309;
  contentType?: String_310;
  url: String_311;
}
/**
 * JSON Schema that defines the structure of the object to generate
 */
export interface Object_102 {
  [k: string]: unknown;
}
/**
 * Tools available for the generation
 */
export interface Object_103 {
  [k: string]: Array_35;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Number of tokens in the prompt
 */
export type Number_52 = number;
/**
 * Number of tokens in the completion
 */
export type Number_53 = number;
/**
 * Total number of tokens used
 */
export type Number_54 = number;
/**
 * Transaction ID
 */
export type String_314 = string;
/**
 * Reason why generation finished
 */
export type String_315 = string;

export interface AI_GENERATE_OBJECTOutput {
  /**
   * The generated object according to the provided schema
   */
  object?: {
    [k: string]: unknown;
  };
  usage: Object_104;
  finishReason?: String_315;
}
/**
 * Token usage information
 */
export interface Object_104 {
  promptTokens: Number_52;
  completionTokens: Number_53;
  totalTokens: Number_54;
  transactionId?: String_314;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The API key to check access for, if not provided, the current key from context will be used
 */
export type String_316 = string;
export type String_317 = string;
/**
 * All tools that wants to check access
 */
export type Array_36 = String_317[];

export interface API_KEYS_CHECK_ACCESSInput {
  key?: String_316;
  tools: Array_36;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_24 = boolean;

export interface API_KEYS_CHECK_ACCESSOutput {
  access: Object_105;
}
export interface Object_105 {
  [k: string]: Boolean_24;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the API key
 */
export type String_318 = string;
export type String_319 = "allow" | "deny";
export type String_320 = string;
export type String_321 = "is_integration";
export type String_322 = string;
/**
 * Policies for the API key
 */
export type Array_37 = Object_106[];
export type String_323 = string;
export type String_324 = string;

export interface API_KEYS_CREATEInput {
  name: String_318;
  policies?: Array_37;
  claims?: Object_108;
}
export interface Object_106 {
  effect: String_319;
  resource: String_320;
  matchCondition?: Object_107;
}
export interface Object_107 {
  resource: String_321;
  integrationId: String_322;
}
/**
 * App Claims to be added to the API key
 */
export interface Object_108 {
  appName: String_323;
  integrationId: String_324;
  state?: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to delete
 */
export type String_325 = string;

export interface API_KEYS_DELETEInput {
  id: String_325;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to disable
 */
export type String_326 = string;

export interface API_KEYS_DISABLEInput {
  id: String_326;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_DISABLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to enable
 */
export type String_327 = string;

export interface API_KEYS_ENABLEInput {
  id: String_327;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_ENABLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_328 = string;

export interface API_KEYS_GETInput {
  id: String_328;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key
 */
export type String_329 = string;
/**
 * New name for the API key
 */
export type String_330 = string;
/**
 * Whether the API key is enabled
 */
export type Boolean_25 = boolean;
export type String_331 = "allow" | "deny";
export type String_332 = string;
export type String_333 = "is_integration";
export type String_334 = string;
/**
 * Policies for the API key
 */
export type Array_38 = Object_109[];

export interface API_KEYS_UPDATEInput {
  id: String_329;
  name?: String_330;
  enabled?: Boolean_25;
  policies?: Array_38;
}
export interface Object_109 {
  effect: String_331;
  resource: String_332;
  matchCondition?: Object_110;
}
export interface Object_110 {
  resource: String_333;
  integrationId: String_334;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the API key to validate
 */
export type String_335 = string;

export interface API_KEYS_VALIDATEInput {
  id: String_335;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface API_KEYS_VALIDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The channel discriminator
 */
export type String_336 = string;
/**
 * The ID of the integration to use
 */
export type String_337 = string;
/**
 * The ID of the agent to join the channel.
 */
export type String_338 = string;
/**
 * The name of the channel
 */
export type String_339 = string;

export interface CHANNELS_CREATEInput {
  discriminator: String_336;
  integrationId: String_337;
  agentId?: String_338;
  name?: String_339;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_340 = string;

export interface CHANNELS_DELETEInput {
  id: String_340;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_341 = string;

export interface CHANNELS_GETInput {
  id: String_341;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to join, use only UUIDs.
 */
export type String_342 = string;
/**
 * The ID of the agent to join the channel to, use only UUIDs.
 */
export type String_343 = string;

export interface CHANNELS_JOINInput {
  id: String_342;
  agentId: String_343;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_JOINOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the channel to unlink, use only UUIDs.
 */
export type String_344 = string;
/**
 * The ID of the agent to unlink, use only UUIDs.
 */
export type String_345 = string;

export interface CHANNELS_LEAVEInput {
  id: String_344;
  agentId: String_345;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LEAVEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CHANNELS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_346 = string;
export type String_347 = string;
export type String_348 = string;
/**
 * The amount (in microdollars) of money to commit. Specified in USD dollars.
 */
export type StringNumber = String_349 | Number_55;
export type String_349 = string;
export type Number_55 = number;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTInput {
  identifier?: String_346;
  contractId: String_347;
  vendorId: String_348;
  amount: StringNumber;
  metadata?: Object_111;
}
export interface Object_111 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_350 = string;

export interface COMMIT_PRE_AUTHORIZED_AMOUNTOutput {
  id: String_350;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_351 = string;
export type String_352 = string;
export type StringNumber_1 = String_353 | Number_56;
export type String_353 = string;
export type Number_56 = number;
export type String_354 = string;
export type String_355 = string;
export type Array_40 = String_355[];
export type Array_39 = Object_113[];
export type String_356 = string;
export type String_357 = string;

export interface CONTRACT_REGISTERInput {
  contract: Object_112;
  author: Object_114;
}
export interface Object_112 {
  body?: String_351;
  clauses?: Array_39;
}
export interface Object_113 {
  id: String_352;
  price: StringNumber_1;
  description?: String_354;
  usedByTools?: Array_40;
}
export interface Object_114 {
  scope: String_356;
  name: String_357;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_358 = string;

export interface CONTRACT_REGISTEROutput {
  appName: String_358;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to create
 */
export type String_359 = string;
/**
 * The source branch to branch from (optional - creates empty branch if not provided)
 */
export type String_360 = string;

export interface CREATE_BRANCHInput {
  branchName: String_359;
  sourceBranch?: String_360;
  metadata?: Object_115;
}
/**
 * Optional metadata for the branch
 */
export interface Object_115 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_361 = string;
export type String_362 = string;
export type Number_57 = number;

export interface CREATE_BRANCHOutput {
  branchName: String_361;
  sourceBranch?: String_362;
  createdAt: Number_57;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_58 = number;
export type String_363 = string;
export type String_364 = string;

export interface CREATE_CHECKOUT_SESSIONInput {
  amountUSDCents: Number_58;
  successUrl: String_363;
  cancelUrl: String_364;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_365 = string;

export interface CREATE_CHECKOUT_SESSIONOutput {
  url: String_365;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount of money to add to the voucher. Specified in USD dollars.
 */
export type Number_59 = number;

export interface CREATE_VOUCHERInput {
  amount: Number_59;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_366 = string;

export interface CREATE_VOUCHEROutput {
  id: String_366;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_26 = boolean;

export interface DATABASES_GET_METAInput {
  _legacy?: Boolean_26;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_60 = number;

export interface DATABASES_GET_METAOutput {
  bytes?: Number_60;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, only shows what would be migrated without executing
 */
export type Boolean_27 = boolean;
export type String_367 = string;
/**
 * Specific tables to migrate. If not provided, all tables will be migrated
 */
export type Array_41 = String_367[];
/**
 * Number of rows to migrate per batch
 */
export type Number_61 = number;

export interface DATABASES_MIGRATEInput {
  dryRun?: Boolean_27;
  tables?: Array_41;
  batchSize?: Number_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_28 = boolean;
export type String_368 = string;
export type Number_62 = number;
export type String_369 = "success" | "error" | "skipped";
export type String_370 = string;
export type Array_42 = Object_116[];
export type Number_63 = number;
export type Number_64 = number;

export interface DATABASES_MIGRATEOutput {
  success: Boolean_28;
  migratedTables: Array_42;
  totalRowsMigrated: Number_63;
  executionTimeMs: Number_64;
}
export interface Object_116 {
  tableName: String_368;
  rowCount: Number_62;
  status: String_369;
  error?: String_370;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The date to recover to
 */
export type String_371 = string;
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_29 = boolean;

export interface DATABASES_RECOVERYInput {
  date: String_371;
  _legacy?: Boolean_29;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_30 = boolean;

export interface DATABASES_RECOVERYOutput {
  success: Boolean_30;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The SQL query to run
 */
export type String_372 = string;
/**
 * The parameters to pass to the SQL query
 */
export type Array_43 = unknown[];
/**
 * If true, the query will be run against the legacy database
 */
export type Boolean_31 = boolean;

export interface DATABASES_RUN_SQLInput {
  sql: String_372;
  params?: Array_43;
  _legacy?: Boolean_31;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_32 = boolean;
export type Number_65 = number;
export type Number_66 = number;
export type Number_67 = number;
export type Number_68 = number;
export type Number_69 = number;
export type Boolean_33 = boolean;
export type String_373 = "WNAM" | "ENAM" | "WEUR" | "EEUR" | "APAC" | "OC";
export type Number_70 = number;
export type Number_71 = number;
export type Array_45 = unknown[];
export type Boolean_34 = boolean;
export type Array_44 = Object_117[];

export interface DATABASES_RUN_SQLOutput {
  result: Array_44;
}
export interface Object_117 {
  meta?: Object_118;
  results?: Array_45;
  success?: Boolean_34;
}
export interface Object_118 {
  changed_db?: Boolean_32;
  changes?: Number_65;
  duration?: Number_66;
  last_row_id?: Number_67;
  rows_read?: Number_68;
  rows_written?: Number_69;
  served_by_primary?: Boolean_33;
  served_by_region?: String_373;
  size_after?: Number_70;
  timings?: Object_119;
}
export interface Object_119 {
  sql_duration_ms?: Number_71;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_CHAT_VIEWS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_374 = string;
export type String_375 = string;
export type String_376 = string;
export type String_377 = string;
export type String_378 = string;
export type String_379 = string;
export type String_380 = string;
export type String_381 = string;
export type String_382 = string;
export type Array_47 = String_382[];
export type String_383 = string;
export type Array_48 = String_383[];
export type Array_46 = Object_120[];

export interface DECO_CHAT_VIEWS_LISTOutput {
  views: Array_46;
}
export interface Object_120 {
  id?: String_374;
  name?: String_375;
  title: String_376;
  description?: String_377;
  icon: String_378;
  url?: String_379;
  mimeTypePattern?: String_380;
  resourceName?: String_381;
  tools?: Array_47;
  rules?: Array_48;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_384 = string;

export interface DECO_GET_APP_SCHEMAInput {
  appName: String_384;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_385 = string;
export type Array_49 = String_385[];

export interface DECO_GET_APP_SCHEMAOutput {
  schema?: unknown;
  scopes?: Array_49;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to install. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_386 = string;
/**
 * The provider of the integration to install. To know the available providers, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_387 = string;
/**
 * The id of the app to install the integration for. To know the available app ids, use the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_388 = string;

export interface DECO_INTEGRATION_INSTALLInput {
  id: String_386;
  provider?: String_387;
  appId?: String_388;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the installation. Use this id to enable the integration using the DECO_INTEGRATIONS_SEARCH tool
 */
export type String_389 = string;

export interface DECO_INTEGRATION_INSTALLOutput {
  installationId: String_389;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the integration to start the OAuth flow for
 */
export type String_390 = string;
/**
 * The return URL for the OAuth flow. Will come with a query param including the mcp URL.
 */
export type String_391 = string;
/**
 * The install id of the integration to start the OAuth flow for
 */
export type String_392 = string;
/**
 * The provider of the integration to start the OAuth flow for
 */
export type String_393 = string;

export interface DECO_INTEGRATION_OAUTH_STARTInput {
  appName: String_390;
  returnUrl: String_391;
  installId: String_392;
  provider?: String_393;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DECO_INTEGRATION_OAUTH_STARTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search for
 */
export type String_394 = string;
/**
 * Whether to show contracts
 */
export type Boolean_35 = boolean;

export interface DECO_INTEGRATIONS_SEARCHInput {
  query?: String_394;
  showContracts?: Boolean_35;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_395 = string;
export type String_396 = string;
export type String_397 = string;
export type String_398 = string;
export type String_399 = string;
export type Null_27 = null;
export type String_400 = string;
export type Null_28 = null;
export type String_401 = string;
export type Null_29 = null;
export type String_402 = "HTTP";
export type String_403 = string;
export type String_404 = string;
export type String_405 = "SSE";
export type String_406 = string;
export type String_407 = string;
export type String_408 = string;
export type String_409 = "Websocket";
export type String_410 = string;
export type String_411 = string;
export type String_412 = "Deco";
export type String_413 = string;
export type String_414 = string;
export type String_415 = "INNATE";
export type String_416 = string;
export type String_417 = string;
export type Null_30 = null;
/**
 * The name of the tool
 */
export type String_418 = string;
/**
 * The description of the tool
 */
export type String_419 = string;
export type Array_51 = (Object_129 & Object_131)[];
export type Null_31 = null;
export type String_420 = string;
export type String_421 = string;
/**
 * The Integrations that match the query
 */
export type Array_50 = (Object_121 & Object_133)[];

export interface DECO_INTEGRATIONS_SEARCHOutput {
  integrations: Array_50;
}
export interface Object_121 {
  id: String_395;
  name: String_396;
  description?: String_397;
  icon?: String_398;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_399
      )
    | Null_27;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_400
      )
    | Null_28;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_401
      )
    | Null_29;
  connection: Object_122 | Object_123 | Object_125 | Object_126 | Object_127;
  metadata?: Object_128 | Null_30;
  tools?: Array_51 | Null_31;
}
export interface Object_122 {
  type: String_402;
  url: String_403;
  token?: String_404;
}
export interface Object_123 {
  type: String_405;
  url: String_406;
  token?: String_407;
  headers?: Object_124;
}
export interface Object_124 {
  [k: string]: String_408;
}
export interface Object_125 {
  type: String_409;
  url: String_410;
  token?: String_411;
}
export interface Object_126 {
  type: String_412;
  tenant: String_413;
  token?: String_414;
}
export interface Object_127 {
  type: String_415;
  name: String_416;
  workspace?: String_417;
}
export interface Object_128 {
  [k: string]: unknown;
}
export interface Object_129 {
  name: String_418;
  inputSchema: Object_130;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_130 {
  [k: string]: unknown;
}
export interface Object_131 {
  description?: String_419;
  outputSchema?: Object_132;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_132 {
  [k: string]: unknown;
}
export interface Object_133 {
  provider: String_420;
  friendlyName?: String_421;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_422 = string;
/**
 * The description of the tool
 */
export type String_423 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_424 = string;

export interface DECO_RESOURCE_TOOL_CREATEInput_1 {
  data: Object_134;
}
/**
 * Resource data to create
 */
export interface Object_134 {
  name: String_422;
  description: String_423;
  inputSchema: Object_135;
  outputSchema: Object_136;
  execute: String_424;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_135 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_136 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_425 = string;
/**
 * The name of the tool
 */
export type String_426 = string;
/**
 * The description of the tool
 */
export type String_427 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_428 = string;
/**
 * Creation timestamp
 */
export type String_429 = string;
/**
 * Last update timestamp
 */
export type String_430 = string;
/**
 * User who created the resource
 */
export type String_431 = string;

export interface DECO_RESOURCE_TOOL_CREATEOutput_1 {
  uri: String_425;
  data: Object_137;
  created_at?: String_429;
  updated_at?: String_430;
  created_by?: String_431;
}
/**
 * Created resource data
 */
export interface Object_137 {
  name: String_426;
  description: String_427;
  inputSchema: Object_138;
  outputSchema: Object_139;
  execute: String_428;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_138 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_139 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_432 = string;

export interface DECO_RESOURCE_TOOL_DELETEInput_1 {
  uri: String_432;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_36 = boolean;
/**
 * URI of the deleted resource
 */
export type String_433 = string;

export interface DECO_RESOURCE_TOOL_DELETEOutput_1 {
  success: Boolean_36;
  uri: String_433;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_434 = string;

export interface DECO_RESOURCE_TOOL_READInput_1 {
  uri: String_434;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_435 = string;
/**
 * The name of the tool
 */
export type String_436 = string;
/**
 * The description of the tool
 */
export type String_437 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_438 = string;
/**
 * Creation timestamp
 */
export type String_439 = string;
/**
 * Last update timestamp
 */
export type String_440 = string;
/**
 * User who created the resource
 */
export type String_441 = string;
/**
 * User who last updated the resource
 */
export type String_442 = string;

export interface DECO_RESOURCE_TOOL_READOutput_1 {
  uri: String_435;
  data: Object_140;
  created_at?: String_439;
  updated_at?: String_440;
  created_by?: String_441;
  updated_by?: String_442;
}
/**
 * Resource data
 */
export interface Object_140 {
  name: String_436;
  description: String_437;
  inputSchema: Object_141;
  outputSchema: Object_142;
  execute: String_438;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_141 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_142 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_443 = string;
/**
 * Page number (1-based)
 */
export type Integer_8 = number;
/**
 * Number of items per page
 */
export type Integer_9 = number;
/**
 * Field to sort by
 */
export type String_444 = string;
/**
 * Sort order
 */
export type String_445 = "asc" | "desc";

export interface DECO_RESOURCE_TOOL_SEARCHInput_1 {
  term?: String_443;
  page?: Integer_8;
  pageSize?: Integer_9;
  filters?: Object_143;
  sortBy?: String_444;
  sortOrder?: String_445;
}
/**
 * Additional filters to apply
 */
export interface Object_143 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_446 = string;
export type String_447 = string;
/**
 * Description of the resource
 */
export type String_448 = string;
/**
 * URL to the resource icon
 */
export type String_449 = string;
/**
 * The name of the tool
 */
export type String_450 = string;
/**
 * The description of the tool
 */
export type String_451 = string;
/**
 * Creation timestamp
 */
export type String_452 = string;
/**
 * Last update timestamp
 */
export type String_453 = string;
/**
 * User who created the resource
 */
export type String_454 = string;
/**
 * User who last updated the resource
 */
export type String_455 = string;
/**
 * Array of matching resources
 */
export type Array_52 = Object_144[];
/**
 * Total number of matching resources
 */
export type Integer_10 = number;
/**
 * Current page number
 */
export type Integer_11 = number;
/**
 * Number of items per page
 */
export type Integer_12 = number;
/**
 * Total number of pages
 */
export type Integer_13 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_37 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_38 = boolean;

export interface DECO_RESOURCE_TOOL_SEARCHOutput_1 {
  items: Array_52;
  totalCount: Integer_10;
  page: Integer_11;
  pageSize: Integer_12;
  totalPages: Integer_13;
  hasNextPage: Boolean_37;
  hasPreviousPage: Boolean_38;
}
export interface Object_144 {
  uri: String_446;
  /**
   * Resource data with required name
   */
  data: Object_145 & Object_146;
  created_at?: String_452;
  updated_at?: String_453;
  created_by?: String_454;
  updated_by?: String_455;
}
export interface Object_145 {
  name: String_447;
  description?: String_448;
  icon?: String_449;
}
export interface Object_146 {
  name: String_450;
  description: String_451;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_456 = string;
/**
 * The name of the tool
 */
export type String_457 = string;
/**
 * The description of the tool
 */
export type String_458 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_459 = string;

export interface DECO_RESOURCE_TOOL_UPDATEInput_1 {
  uri: String_456;
  data: Object_147;
}
/**
 * Updated resource data
 */
export interface Object_147 {
  name: String_457;
  description: String_458;
  inputSchema: Object_148;
  outputSchema: Object_149;
  execute: String_459;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_148 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_149 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_460 = string;
/**
 * The name of the tool
 */
export type String_461 = string;
/**
 * The description of the tool
 */
export type String_462 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_463 = string;
/**
 * Original creation timestamp
 */
export type String_464 = string;
/**
 * Last update timestamp
 */
export type String_465 = string;
/**
 * User who originally created the resource
 */
export type String_466 = string;
/**
 * User who last updated the resource
 */
export type String_467 = string;

export interface DECO_RESOURCE_TOOL_UPDATEOutput_1 {
  uri: String_460;
  data: Object_150;
  created_at?: String_464;
  updated_at?: String_465;
  created_by?: String_466;
  updated_by?: String_467;
}
/**
 * Updated resource data
 */
export interface Object_150 {
  name: String_461;
  description: String_462;
  inputSchema: Object_151;
  outputSchema: Object_152;
  execute: String_463;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_151 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_152 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique name of the workflow
 */
export type String_468 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_469 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_53 = [Object_156, ...Object_156[]];
/**
 * The type of step
 */
export type String_470 = "code" | "tool_call";
/**
 * The unique name of the code step within the workflow
 */
export type String_471 = string;
/**
 * A clear description of what this code step does
 */
export type String_472 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_473 = string;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_474 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_475 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_14 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_15 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_476 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_72 = number;
export type Null_32 = null;
/**
 * The name of the tool to call
 */
export type String_477 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_478 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEInput {
  data: Object_153;
}
/**
 * Resource data to create
 */
export interface Object_153 {
  name: String_468;
  description: String_469;
  inputSchema: Object_154;
  outputSchema: Object_155;
  steps: Array_53;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_154 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_155 {
  [k: string]: unknown;
}
export interface Object_156 {
  type: String_470;
  /**
   * The step definition based on the type
   */
  def: Object_157 | Object_158;
}
export interface Object_157 {
  name: String_471;
  description: String_472;
  execute: String_473;
}
export interface Object_158 {
  name: String_474;
  description: String_475;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_159 | Null_32;
  tool_name: String_477;
  integration: String_478;
}
export interface Object_159 {
  retries?: Object_160;
  timeout?: Number_72;
}
export interface Object_160 {
  limit?: Integer_14;
  delay?: Integer_15;
  backoff?: String_476;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the created resource
 */
export type String_479 = string;
/**
 * The unique name of the workflow
 */
export type String_480 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_481 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_54 = [Object_164, ...Object_164[]];
/**
 * The type of step
 */
export type String_482 = "code" | "tool_call";
/**
 * The unique name of the code step within the workflow
 */
export type String_483 = string;
/**
 * A clear description of what this code step does
 */
export type String_484 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_485 = string;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_486 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_487 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_16 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_17 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_488 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_73 = number;
export type Null_33 = null;
/**
 * The name of the tool to call
 */
export type String_489 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_490 = string;
/**
 * Creation timestamp
 */
export type String_491 = string;
/**
 * Last update timestamp
 */
export type String_492 = string;
/**
 * User who created the resource
 */
export type String_493 = string;

export interface DECO_RESOURCE_WORKFLOW_CREATEOutput {
  uri: String_479;
  data: Object_161;
  created_at?: String_491;
  updated_at?: String_492;
  created_by?: String_493;
}
/**
 * Created resource data
 */
export interface Object_161 {
  name: String_480;
  description: String_481;
  inputSchema: Object_162;
  outputSchema: Object_163;
  steps: Array_54;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_162 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_163 {
  [k: string]: unknown;
}
export interface Object_164 {
  type: String_482;
  /**
   * The step definition based on the type
   */
  def: Object_165 | Object_166;
}
export interface Object_165 {
  name: String_483;
  description: String_484;
  execute: String_485;
}
export interface Object_166 {
  name: String_486;
  description: String_487;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_167 | Null_33;
  tool_name: String_489;
  integration: String_490;
}
export interface Object_167 {
  retries?: Object_168;
  timeout?: Number_73;
}
export interface Object_168 {
  limit?: Integer_16;
  delay?: Integer_17;
  backoff?: String_488;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to delete
 */
export type String_494 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEInput {
  uri: String_494;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the deletion was successful
 */
export type Boolean_39 = boolean;
/**
 * URI of the deleted resource
 */
export type String_495 = string;

export interface DECO_RESOURCE_WORKFLOW_DELETEOutput {
  success: Boolean_39;
  uri: String_495;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to read
 */
export type String_496 = string;

export interface DECO_RESOURCE_WORKFLOW_READInput {
  uri: String_496;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_497 = string;
/**
 * The unique name of the workflow
 */
export type String_498 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_499 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_55 = [Object_172, ...Object_172[]];
/**
 * The type of step
 */
export type String_500 = "code" | "tool_call";
/**
 * The unique name of the code step within the workflow
 */
export type String_501 = string;
/**
 * A clear description of what this code step does
 */
export type String_502 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_503 = string;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_504 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_505 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_18 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_19 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_506 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_74 = number;
export type Null_34 = null;
/**
 * The name of the tool to call
 */
export type String_507 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_508 = string;
/**
 * Creation timestamp
 */
export type String_509 = string;
/**
 * Last update timestamp
 */
export type String_510 = string;
/**
 * User who created the resource
 */
export type String_511 = string;
/**
 * User who last updated the resource
 */
export type String_512 = string;

export interface DECO_RESOURCE_WORKFLOW_READOutput {
  uri: String_497;
  data: Object_169;
  created_at?: String_509;
  updated_at?: String_510;
  created_by?: String_511;
  updated_by?: String_512;
}
/**
 * Resource data
 */
export interface Object_169 {
  name: String_498;
  description: String_499;
  inputSchema: Object_170;
  outputSchema: Object_171;
  steps: Array_55;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_170 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_171 {
  [k: string]: unknown;
}
export interface Object_172 {
  type: String_500;
  /**
   * The step definition based on the type
   */
  def: Object_173 | Object_174;
}
export interface Object_173 {
  name: String_501;
  description: String_502;
  execute: String_503;
}
export interface Object_174 {
  name: String_504;
  description: String_505;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_175 | Null_34;
  tool_name: String_507;
  integration: String_508;
}
export interface Object_175 {
  retries?: Object_176;
  timeout?: Number_74;
}
export interface Object_176 {
  limit?: Integer_18;
  delay?: Integer_19;
  backoff?: String_506;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter resources
 */
export type String_513 = string;
/**
 * Page number (1-based)
 */
export type Integer_20 = number;
/**
 * Number of items per page
 */
export type Integer_21 = number;
/**
 * Field to sort by
 */
export type String_514 = string;
/**
 * Sort order
 */
export type String_515 = "asc" | "desc";

export interface DECO_RESOURCE_WORKFLOW_SEARCHInput {
  term?: String_513;
  page?: Integer_20;
  pageSize?: Integer_21;
  filters?: Object_177;
  sortBy?: String_514;
  sortOrder?: String_515;
}
/**
 * Additional filters to apply
 */
export interface Object_177 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource
 */
export type String_516 = string;
export type String_517 = string;
/**
 * Description of the resource
 */
export type String_518 = string;
/**
 * URL to the resource icon
 */
export type String_519 = string;
/**
 * The unique name of the workflow
 */
export type String_520 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_521 = string;
/**
 * Creation timestamp
 */
export type String_522 = string;
/**
 * Last update timestamp
 */
export type String_523 = string;
/**
 * User who created the resource
 */
export type String_524 = string;
/**
 * User who last updated the resource
 */
export type String_525 = string;
/**
 * Array of matching resources
 */
export type Array_56 = Object_178[];
/**
 * Total number of matching resources
 */
export type Integer_22 = number;
/**
 * Current page number
 */
export type Integer_23 = number;
/**
 * Number of items per page
 */
export type Integer_24 = number;
/**
 * Total number of pages
 */
export type Integer_25 = number;
/**
 * Whether there are more pages available
 */
export type Boolean_40 = boolean;
/**
 * Whether there are previous pages available
 */
export type Boolean_41 = boolean;

export interface DECO_RESOURCE_WORKFLOW_SEARCHOutput {
  items: Array_56;
  totalCount: Integer_22;
  page: Integer_23;
  pageSize: Integer_24;
  totalPages: Integer_25;
  hasNextPage: Boolean_40;
  hasPreviousPage: Boolean_41;
}
export interface Object_178 {
  uri: String_516;
  /**
   * Resource data with required name
   */
  data: Object_179 & Object_180;
  created_at?: String_522;
  updated_at?: String_523;
  created_by?: String_524;
  updated_by?: String_525;
}
export interface Object_179 {
  name: String_517;
  description?: String_518;
  icon?: String_519;
}
export interface Object_180 {
  name: String_520;
  description: String_521;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to update
 */
export type String_526 = string;
/**
 * The unique name of the workflow
 */
export type String_527 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_528 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_57 = [Object_184, ...Object_184[]];
/**
 * The type of step
 */
export type String_529 = "code" | "tool_call";
/**
 * The unique name of the code step within the workflow
 */
export type String_530 = string;
/**
 * A clear description of what this code step does
 */
export type String_531 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_532 = string;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_533 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_534 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_26 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_27 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_535 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_75 = number;
export type Null_35 = null;
/**
 * The name of the tool to call
 */
export type String_536 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_537 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEInput {
  uri: String_526;
  data: Object_181;
}
/**
 * Updated resource data
 */
export interface Object_181 {
  name: String_527;
  description: String_528;
  inputSchema: Object_182;
  outputSchema: Object_183;
  steps: Array_57;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_182 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_183 {
  [k: string]: unknown;
}
export interface Object_184 {
  type: String_529;
  /**
   * The step definition based on the type
   */
  def: Object_185 | Object_186;
}
export interface Object_185 {
  name: String_530;
  description: String_531;
  execute: String_532;
}
export interface Object_186 {
  name: String_533;
  description: String_534;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_187 | Null_35;
  tool_name: String_536;
  integration: String_537;
}
export interface Object_187 {
  retries?: Object_188;
  timeout?: Number_75;
}
export interface Object_188 {
  limit?: Integer_26;
  delay?: Integer_27;
  backoff?: String_535;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the updated resource
 */
export type String_538 = string;
/**
 * The unique name of the workflow
 */
export type String_539 = string;
/**
 * A comprehensive description of what this workflow accomplishes
 */
export type String_540 = string;
/**
 * Array of workflow steps that execute sequentially. The last step should be a code step that returns the final output.
 *
 * @minItems 1
 */
export type Array_58 = [Object_192, ...Object_192[]];
/**
 * The type of step
 */
export type String_541 = "code" | "tool_call";
/**
 * The unique name of the code step within the workflow
 */
export type String_542 = string;
/**
 * A clear description of what this code step does
 */
export type String_543 = string;
/**
 * ES module code that exports a default async function: (ctx: WellKnownOptions) => Promise<any>. Use ctx.readWorkflowInput() or ctx.readStepResult(stepName) to access data
 */
export type String_544 = string;
/**
 * The unique name of the tool call step within the workflow
 */
export type String_545 = string;
/**
 * A clear description of what this tool call step does
 */
export type String_546 = string;
/**
 * Number of retry attempts for this step (default: 0)
 */
export type Integer_28 = number;
/**
 * Delay in milliseconds between retry attempts (default: 0)
 */
export type Integer_29 = number;
/**
 * Backoff strategy for retry attempts (default: constant)
 */
export type String_547 = "constant" | "linear" | "exponential";
/**
 * Maximum execution time in milliseconds (default: Infinity)
 */
export type Number_76 = number;
export type Null_36 = null;
/**
 * The name of the tool to call
 */
export type String_548 = string;
/**
 * The name of the integration that provides this tool
 */
export type String_549 = string;
/**
 * Original creation timestamp
 */
export type String_550 = string;
/**
 * Last update timestamp
 */
export type String_551 = string;
/**
 * User who originally created the resource
 */
export type String_552 = string;
/**
 * User who last updated the resource
 */
export type String_553 = string;

export interface DECO_RESOURCE_WORKFLOW_UPDATEOutput {
  uri: String_538;
  data: Object_189;
  created_at?: String_550;
  updated_at?: String_551;
  created_by?: String_552;
  updated_by?: String_553;
}
/**
 * Updated resource data
 */
export interface Object_189 {
  name: String_539;
  description: String_540;
  inputSchema: Object_190;
  outputSchema: Object_191;
  steps: Array_58;
}
/**
 * JSON Schema defining the workflow's input parameters and data structure
 */
export interface Object_190 {
  [k: string]: unknown;
}
/**
 * JSON Schema defining the workflow's final output after all steps complete
 */
export interface Object_191 {
  [k: string]: unknown;
}
export interface Object_192 {
  type: String_541;
  /**
   * The step definition based on the type
   */
  def: Object_193 | Object_194;
}
export interface Object_193 {
  name: String_542;
  description: String_543;
  execute: String_544;
}
export interface Object_194 {
  name: String_545;
  description: String_546;
  /**
   * Step configuration options. Extend this object with custom properties for business user configuration
   */
  options?: Object_195 | Null_36;
  tool_name: String_548;
  integration: String_549;
}
export interface Object_195 {
  retries?: Object_196;
  timeout?: Number_76;
}
export interface Object_196 {
  limit?: Integer_28;
  delay?: Integer_29;
  backoff?: String_547;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URI of the tool to run
 */
export type String_554 = string;

export interface DECO_TOOL_CALL_TOOLInput_1 {
  uri: String_554;
  input: Object_197;
}
/**
 * The input of the code
 */
export interface Object_197 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_555 = "log" | "warn" | "error";
export type String_556 = string;
/**
 * Console logs from the execution
 */
export type Array_59 = Object_198[];

export interface DECO_TOOL_CALL_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_59;
}
export interface Object_198 {
  type: String_555;
  content: String_556;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the tool
 */
export type String_557 = string;
/**
 * The description of the tool
 */
export type String_558 = string;
/**
 * Inline ES module code with default export function. The code will be saved to /src/functions/{name}.ts
 */
export type String_559 = string;

export interface DECO_TOOL_RUN_TOOLInput_1 {
  tool: Object_199;
  input: Object_202;
}
export interface Object_199 {
  name: String_557;
  description: String_558;
  inputSchema: Object_200;
  outputSchema: Object_201;
  execute: String_559;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_200 {
  [k: string]: unknown;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_201 {
  [k: string]: unknown;
}
/**
 * The input of the code
 */
export interface Object_202 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_560 = "log" | "warn" | "error";
export type String_561 = string;
/**
 * Console logs from the execution
 */
export type Array_60 = Object_203[];

export interface DECO_TOOL_RUN_TOOLOutput_1 {
  /**
   * The result of the tool execution
   */
  result?: {
    [k: string]: unknown;
  };
  /**
   * Error if any
   */
  error?: {
    [k: string]: unknown;
  };
  logs?: Array_60;
}
export interface Object_203 {
  type: String_560;
  content: String_561;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_562 = string;

export interface DECO_VIEW_RENDER_TOOL_DETAILInput_1 {
  resource: String_562;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_563 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_564 = string;
export type String_565 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_61 = String_565[];

export interface DECO_VIEW_RENDER_TOOL_DETAILOutput_1 {
  url: String_563;
  prompt?: String_564;
  tools?: Array_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URI of the resource to render in the view
 */
export type String_566 = string;

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILInput {
  resource: String_566;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * URL to render the view
 */
export type String_567 = string;
/**
 * Optional LLM prompt for this view context
 */
export type String_568 = string;
export type String_569 = string;
/**
 * Optional array of tool names for this view context
 */
export type Array_62 = String_569[];

export interface DECO_VIEW_RENDER_WORKFLOW_DETAILOutput {
  url: String_567;
  prompt?: String_568;
  tools?: Array_62;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID of the workflow run
 */
export type String_570 = string;

export interface DECO_WORKFLOW_GET_STATUSInput {
  runId: String_570;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The current status of the workflow run
 */
export type String_571 = "pending" | "running" | "completed" | "failed";
/**
 * The name of the step currently being executed (if running)
 */
export type String_572 = string;
/**
 * Error message if the workflow failed
 */
export type String_573 = string;
export type String_574 = "log" | "warn" | "error";
export type String_575 = string;
/**
 * Console logs from the execution
 */
export type Array_63 = Object_205[];
/**
 * When the workflow started (timestamp)
 */
export type Number_77 = number;
/**
 * When the workflow ended (timestamp, if completed/failed)
 */
export type Number_78 = number;

export interface DECO_WORKFLOW_GET_STATUSOutput {
  status: String_571;
  currentStep?: String_572;
  stepResults: Object_204;
  /**
   * The final workflow result (if completed)
   */
  finalResult?: {
    [k: string]: unknown;
  };
  /**
   * Partial results from completed steps (if pending/running)
   */
  partialResult?: {
    [k: string]: unknown;
  };
  error?: String_573;
  logs: Array_63;
  startTime: Number_77;
  endTime?: Number_78;
}
/**
 * Results from completed steps
 */
export interface Object_204 {
  [k: string]: unknown;
}
export interface Object_205 {
  type: String_574;
  content: String_575;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The Resources 2.0 URI of the workflow to execute
 */
export type String_576 = string;
/**
 * Optional step name where execution should halt. The workflow will execute up to and including this step, then stop. Useful for partial execution, debugging, or step-by-step testing.
 */
export type String_577 = string;

export interface DECO_WORKFLOW_STARTInput {
  uri: String_576;
  input: Object_206;
  stopAfter?: String_577;
  state?: Object_207;
}
/**
 * The input data that will be validated against the workflow's input schema and passed to the first step
 */
export interface Object_206 {
  [k: string]: unknown;
}
/**
 * Optional pre-computed step results to inject into the workflow state. Format: { 'step-name': STEP_RESULT }. Allows skipping steps by providing their expected outputs, useful for resuming workflows or testing with known intermediate results.
 */
export interface Object_207 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The unique ID for tracking this workflow run
 */
export type String_578 = string;
/**
 * Error message if workflow start failed
 */
export type String_579 = string;

export interface DECO_WORKFLOW_STARTOutput {
  runId?: String_578;
  error?: String_579;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the branch to delete
 */
export type String_580 = string;

export interface DELETE_BRANCHInput {
  branchName: String_580;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_42 = boolean;
export type String_581 = string;
export type Number_79 = number;

export interface DELETE_BRANCHOutput {
  deleted: Boolean_42;
  branchName: String_581;
  filesDeleted?: Number_79;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_582 = string;
/**
 * The file path within the branch
 */
export type String_583 = string;

export interface DELETE_FILEInput {
  branch?: String_582;
  path: String_583;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_43 = boolean;

export interface DELETE_FILEOutput {
  deleted: Boolean_43;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The base branch to compare from (defaults to 'main')
 */
export type String_584 = string;
/**
 * The branch to compare against
 */
export type String_585 = string;

export interface DIFF_BRANCHInput {
  baseBranch?: String_584;
  compareBranch: String_585;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_586 = string;
export type String_587 = "added" | "modified" | "deleted";
export type String_588 = string;
export type String_589 = string;
export type Array_64 = Object_208[];

export interface DIFF_BRANCHOutput {
  differences: Array_64;
}
export interface Object_208 {
  path: String_586;
  type: String_587;
  baseAddress?: String_588;
  compareAddress?: String_589;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_590 = string;

export interface FS_DELETEInput {
  path: String_590;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The root directory to list files from
 */
export type String_591 = string;

export interface FS_LISTInput {
  prefix: String_591;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_65 = unknown[];

export interface FS_LISTOutput {
  items: Array_65;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_592 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_80 = number;

export interface FS_READInput {
  path: String_592;
  expiresIn?: Number_80;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to read the file from
 */
export type String_593 = string;

export interface FS_READOutput {
  url: String_593;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_594 = string;

export interface FS_READ_METADATAInput {
  path: String_594;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FS_READ_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_595 = string;
/**
 * Seconds until URL expires (default: 60)
 */
export type Number_81 = number;
/**
 * Content-Type for the file. This is required.
 */
export type String_596 = string;

export interface FS_WRITEInput {
  path: String_595;
  expiresIn?: Number_81;
  contentType: String_596;
  metadata?: Object_209;
}
/**
 * Metadata to be added to the file
 */
export interface Object_209 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL to upload the file to
 */
export type String_597 = string;

export interface FS_WRITEOutput {
  url: String_597;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_598 = "day" | "week" | "month";

export interface GET_AGENTS_USAGEInput {
  range: String_598;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_599 = string;
export type String_600 = string;
export type StringNull_6 = String_601 | Null_37;
export type String_601 = string;
export type Null_37 = null;
export type Number_82 = number;
export type String_602 = string;
export type String_603 = string;
export type Number_83 = number;
export type StringNull_7 = String_604 | Null_38;
export type String_604 = string;
export type Null_38 = null;
export type StringNull_8 = String_605 | Null_39;
export type String_605 = string;
export type Null_39 = null;
export type Array_67 = Object_211[];
export type Array_66 = Object_210[];

export interface GET_AGENTS_USAGEOutput {
  total: String_599;
  items: Array_66;
}
export interface Object_210 {
  id: String_600;
  label?: StringNull_6;
  total: Number_82;
  transactions: Array_67;
}
export interface Object_211 {
  id: String_602;
  timestamp: String_603;
  amount: Number_83;
  agentId?: StringNull_7;
  generatedBy?: StringNull_8;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_606 = "day" | "week" | "month" | "year";

export interface GET_BILLING_HISTORYInput {
  range: String_606;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_607 = string;
export type String_608 = string;
export type String_609 = string;
export type String_610 = string;
export type StringNull_9 = String_611 | Null_40;
export type String_611 = string;
export type Null_40 = null;
export type StringNull_10 = String_612 | Null_41;
export type String_612 = string;
export type Null_41 = null;
export type Array_68 = Object_212[];

export interface GET_BILLING_HISTORYOutput {
  items: Array_68;
}
export interface Object_212 {
  id: String_607;
  amount: String_608;
  timestamp: String_609;
  type: String_610;
  contractId?: StringNull_9;
  callerApp?: StringNull_10;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_613 = "day" | "week" | "month" | "year";

export interface GET_CONTRACTS_COMMITSInput {
  range: String_613;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_614 = string;
export type Number_84 = number;
export type String_615 = string;
export type StringNull_11 = String_616 | Null_42;
export type String_616 = string;
export type Null_42 = null;
export type String_617 = string;
export type Number_85 = number;
export type Array_70 = Object_214[];
export type String_618 = string;
export type String_619 = string;
export type Array_69 = Object_213[];

export interface GET_CONTRACTS_COMMITSOutput {
  items: Array_69;
}
export interface Object_213 {
  id: String_614;
  amount: Number_84;
  contractId: String_615;
  callerApp?: StringNull_11;
  clauses: Array_70;
  timestamp: String_618;
  type: String_619;
}
export interface Object_214 {
  clauseId: String_617;
  amount: Number_85;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_620 = "day" | "week" | "month";

export interface GET_THREADS_USAGEInput {
  range: String_620;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_THREADS_USAGEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WALLET_ACCOUNTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_621 = string;
export type String_622 = string;

export interface GET_WALLET_ACCOUNTOutput {
  balance: String_621;
  balanceExact: String_622;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GET_WORKSPACE_PLANOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_623 = string;

export interface HOSTING_APP_DELETEInput {
  appSlug: String_623;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * If true, force the deployment even if there are breaking changes
 */
export type Boolean_44 = boolean;
/**
 * If true, promotes the deployment to production routes. The deployment will be available at a unique URL but won't replace the production version.
 */
export type Boolean_45 = boolean;
/**
 * The slug identifier for the app, if not provided, you should use the wrangler.toml file to determine the slug (using the name field).
 */
export type String_624 = string;
export type String_625 = string;
export type String_626 = string;
export type Boolean_46 = boolean;
/**
 * An array of files with their paths and contents. Must include main.ts as entrypoint and package.json for dependencies
 */
export type Array_71 = Object_215[];
export type String_627 = string;
/**
 * If false, skip the bundler step and upload the files as-is. Default: true (bundle files)
 */
export type Boolean_47 = boolean;
/**
 * Whether the app should be unlisted in the registry. Default: true (unlisted)
 */
export type Boolean_48 = boolean;

export interface HOSTING_APP_DEPLOYInput {
  force?: Boolean_44;
  promote?: Boolean_45;
  appSlug?: String_624;
  files: Array_71;
  envVars?: Object_216;
  bundle?: Boolean_47;
  unlisted?: Boolean_48;
}
export interface Object_215 {
  path: String_625;
  content: String_626;
  asset?: Boolean_46;
}
/**
 * An optional object of environment variables to be set on the worker
 */
export interface Object_216 {
  [k: string]: String_627;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The entrypoint of the app
 */
export type String_628 = string;
export type String_629 = string;
/**
 * The hosts of the app
 */
export type Array_72 = String_629[];
/**
 * The id of the app
 */
export type String_630 = string;
/**
 * The workspace of the app
 */
export type String_631 = string;
/**
 * The deployment id of the app
 */
export type String_632 = string;

export interface HOSTING_APP_DEPLOYOutput {
  entrypoint: String_628;
  hosts: Array_72;
  id: String_630;
  workspace: String_631;
  deploymentId?: String_632;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_633 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTInput {
  appSlug: String_633;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID
 */
export type String_634 = string;
/**
 * The Cloudflare worker ID
 */
export type StringNull_12 = String_635 | Null_43;
export type String_635 = string;
export type Null_43 = null;
/**
 * The deployment entrypoint URL
 */
export type String_636 = string;
/**
 * When the deployment was created
 */
export type String_637 = string;
/**
 * When the deployment was last updated
 */
export type String_638 = string;
export type Array_73 = Object_217[];
export type String_639 = string;
export type String_640 = string;
export type String_641 = string;

export interface HOSTING_APP_DEPLOYMENTS_LISTOutput {
  deployments: Array_73;
  app: Object_218;
}
export interface Object_217 {
  id: String_634;
  cloudflare_deployment_id: StringNull_12;
  entrypoint: String_636;
  created_at: String_637;
  updated_at: String_638;
}
export interface Object_218 {
  id: String_639;
  slug: String_640;
  workspace: String_641;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_642 = string;

export interface HOSTING_APP_INFOInput {
  appSlug: String_642;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_INFOOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_643 = string;
/**
 * List of unique workflow names
 */
export type Array_74 = String_643[];

export interface HOSTING_APP_WORKFLOWS_LIST_NAMESOutput {
  workflowNames: Array_74;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_86 = number;
export type Number_87 = number;
/**
 * Optional: The name of the workflow to list runs for. If not provided, shows recent runs from any workflow.
 */
export type String_644 = string;
export type String_645 = string;
export type String_646 = string;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSInput {
  page?: Number_86;
  per_page?: Number_87;
  workflowName?: String_644;
  fromDate?: String_645;
  toDate?: String_646;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_647 = string;
export type String_648 = string;
export type Number_88 = number;
export type NumberNull_7 = Number_89 | Null_44;
export type Number_89 = number;
export type Null_44 = null;
export type String_649 = string;
/**
 * The workflow runs
 */
export type Array_75 = Object_219[];
export type Number_90 = number;
export type Number_91 = number;
export type Number_92 = number;
export type Number_93 = number;
export type Number_94 = number;
export type Number_95 = number;
export type Number_96 = number;
export type String_650 = string;
export type Null_45 = null;
export type Number_97 = number;
export type String_651 = string;
export type Null_46 = null;
export type Number_98 = number;
export type Number_99 = number;

export interface HOSTING_APP_WORKFLOWS_LIST_RUNSOutput {
  runs: Array_75;
  stats: Object_220;
  pagination: Object_223;
}
export interface Object_219 {
  workflowName: String_647;
  runId: String_648;
  createdAt: Number_88;
  updatedAt?: NumberNull_7;
  status: String_649;
}
/**
 * Workflow statistics
 */
export interface Object_220 {
  totalRuns: Number_90;
  successCount: Number_91;
  errorCount: Number_92;
  runningCount: Number_93;
  pendingCount: Number_94;
  successRate: Number_95;
  firstRun: Object_221 | Null_45;
  lastRun: Object_222 | Null_46;
}
export interface Object_221 {
  date: Number_96;
  status: String_650;
}
export interface Object_222 {
  date: Number_97;
  status: String_651;
}
export interface Object_223 {
  page?: Number_98;
  per_page?: Number_99;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The instance ID of the workflow. To get this, use the HOSTING_APP_WORKFLOWS_INSTANCES_LIST or HOSTING_APP_WORKFLOWS_START tool.
 */
export type String_652 = string;
export type String_653 = string;

export interface HOSTING_APP_WORKFLOWS_STATUSInput {
  instanceId: String_652;
  workflowName: String_653;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APP_WORKFLOWS_STATUSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface HOSTING_APPS_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_654 = string;
export type String_655 = string;
export type Array_76 = Object_224[];

export interface HOSTING_APPS_LISTOutput {
  items: Array_76;
}
export interface Object_224 {
  slug?: String_654;
  entrypoint: String_655;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The deployment ID to promote
 */
export type String_656 = string;
/**
 * Route pattern to promote the deployment to (can be custom domain or .deco.page)
 */
export type String_657 = string;

export interface HOSTING_APPS_PROMOTEInput {
  deploymentId: String_656;
  routePattern: String_657;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Whether the promotion was successful
 */
export type Boolean_49 = boolean;
/**
 * The route pattern that was promoted
 */
export type String_658 = string;

export interface HOSTING_APPS_PROMOTEOutput {
  success: Boolean_49;
  promotedRoute: String_658;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_659 = string;
export type String_660 = "HTTP";
export type String_661 = string;
export type String_662 = string;
export type String_663 = "SSE";
export type String_664 = string;
export type String_665 = string;
export type String_666 = string;
export type String_667 = "Websocket";
export type String_668 = string;
export type String_669 = string;
export type String_670 = "Deco";
export type String_671 = string;
export type String_672 = string;
export type String_673 = "INNATE";
export type String_674 = string;
export type String_675 = string;
export type String_676 = string;
export type Integer_30 = number;
export type String_677 = string;

export interface INTEGRATIONS_CALL_TOOLInput_1 {
  id?: String_659;
  connection?: Object_225 | Object_226 | Object_228 | Object_229 | Object_230;
  params: Object_231;
}
export interface Object_225 {
  type: String_660;
  url: String_661;
  token?: String_662;
}
export interface Object_226 {
  type: String_663;
  url: String_664;
  token?: String_665;
  headers?: Object_227;
}
export interface Object_227 {
  [k: string]: String_666;
}
export interface Object_228 {
  type: String_667;
  url: String_668;
  token?: String_669;
}
export interface Object_229 {
  type: String_670;
  tenant: String_671;
  token?: String_672;
}
export interface Object_230 {
  type: String_673;
  name: String_674;
  workspace?: String_675;
}
export interface Object_231 {
  _meta?: Object_232;
  name: String_677;
  arguments?: Object_233;
  [k: string]: unknown;
}
export interface Object_232 {
  progressToken?: String_676 | Integer_30;
  [k: string]: unknown;
}
export interface Object_233 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CALL_TOOLOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_678 = string;
export type String_679 = string;
export type String_680 = string;
export type String_681 = string;
export type String_682 = string;
export type Null_47 = null;
export type String_683 = string;
export type Null_48 = null;
export type String_684 = "HTTP";
export type String_685 = string;
export type String_686 = string;
export type String_687 = "SSE";
export type String_688 = string;
export type String_689 = string;
export type String_690 = string;
export type String_691 = "Websocket";
export type String_692 = string;
export type String_693 = string;
export type String_694 = "Deco";
export type String_695 = string;
export type String_696 = string;
export type String_697 = "INNATE";
export type String_698 = string;
export type String_699 = string;
export type Null_49 = null;
/**
 * The name of the tool
 */
export type String_700 = string;
/**
 * The description of the tool
 */
export type String_701 = string;
export type Array_77 = (Object_241 & Object_243)[];
export type Null_50 = null;
export type String_702 = string;

export interface INTEGRATIONS_CREATEInput {
  id?: String_678;
  name?: String_679;
  description?: String_680;
  icon?: String_681;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_682
      )
    | Null_47;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_683
      )
    | Null_48;
  connection?: Object_234 | Object_235 | Object_237 | Object_238 | Object_239;
  metadata?: Object_240 | Null_49;
  tools?: Array_77 | Null_50;
  clientIdFromApp?: String_702;
}
export interface Object_234 {
  type: String_684;
  url: String_685;
  token?: String_686;
}
export interface Object_235 {
  type: String_687;
  url: String_688;
  token?: String_689;
  headers?: Object_236;
}
export interface Object_236 {
  [k: string]: String_690;
}
export interface Object_237 {
  type: String_691;
  url: String_692;
  token?: String_693;
}
export interface Object_238 {
  type: String_694;
  tenant: String_695;
  token?: String_696;
}
export interface Object_239 {
  type: String_697;
  name: String_698;
  workspace?: String_699;
}
export interface Object_240 {
  [k: string]: unknown;
}
export interface Object_241 {
  name: String_700;
  inputSchema: Object_242;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_242 {
  [k: string]: unknown;
}
export interface Object_243 {
  description?: String_701;
  outputSchema?: Object_244;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_244 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_703 = string;

export interface INTEGRATIONS_DELETEInput {
  id: String_703;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_704 = string;

export interface INTEGRATIONS_GETInput {
  id: String_704;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_705 = "Channel" | "View";

export interface INTEGRATIONS_LISTInput {
  binder?: String_705;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_706 = string;
export type String_707 = string;
export type String_708 = string;
export type String_709 = string;
export type String_710 = string;
export type Null_51 = null;
export type String_711 = string;
export type Null_52 = null;
export type String_712 = string;
export type Null_53 = null;
export type String_713 = "HTTP";
export type String_714 = string;
export type String_715 = string;
export type String_716 = "SSE";
export type String_717 = string;
export type String_718 = string;
export type String_719 = string;
export type String_720 = "Websocket";
export type String_721 = string;
export type String_722 = string;
export type String_723 = "Deco";
export type String_724 = string;
export type String_725 = string;
export type String_726 = "INNATE";
export type String_727 = string;
export type String_728 = string;
export type Null_54 = null;
/**
 * The name of the tool
 */
export type String_729 = string;
/**
 * The description of the tool
 */
export type String_730 = string;
export type Array_79 = (Object_253 & Object_255)[];
export type Null_55 = null;
export type Array_78 = Object_245[];

export interface INTEGRATIONS_LISTOutput {
  items: Array_78;
}
export interface Object_245 {
  id: String_706;
  name: String_707;
  description?: String_708;
  icon?: String_709;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_710
      )
    | Null_51;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_711
      )
    | Null_52;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_712
      )
    | Null_53;
  connection: Object_246 | Object_247 | Object_249 | Object_250 | Object_251;
  metadata?: Object_252 | Null_54;
  tools?: Array_79 | Null_55;
}
export interface Object_246 {
  type: String_713;
  url: String_714;
  token?: String_715;
}
export interface Object_247 {
  type: String_716;
  url: String_717;
  token?: String_718;
  headers?: Object_248;
}
export interface Object_248 {
  [k: string]: String_719;
}
export interface Object_249 {
  type: String_720;
  url: String_721;
  token?: String_722;
}
export interface Object_250 {
  type: String_723;
  tenant: String_724;
  token?: String_725;
}
export interface Object_251 {
  type: String_726;
  name: String_727;
  workspace?: String_728;
}
export interface Object_252 {
  [k: string]: unknown;
}
export interface Object_253 {
  name: String_729;
  inputSchema: Object_254;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_254 {
  [k: string]: unknown;
}
export interface Object_255 {
  description?: String_730;
  outputSchema?: Object_256;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_256 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_731 = string;
export type String_732 = string;
export type String_733 = string;
export type String_734 = string;
export type String_735 = string;
export type String_736 = string;
export type Null_56 = null;
export type String_737 = string;
export type Null_57 = null;
export type String_738 = string;
export type Null_58 = null;
export type String_739 = "HTTP";
export type String_740 = string;
export type String_741 = string;
export type String_742 = "SSE";
export type String_743 = string;
export type String_744 = string;
export type String_745 = string;
export type String_746 = "Websocket";
export type String_747 = string;
export type String_748 = string;
export type String_749 = "Deco";
export type String_750 = string;
export type String_751 = string;
export type String_752 = "INNATE";
export type String_753 = string;
export type String_754 = string;
export type Null_59 = null;
/**
 * The name of the tool
 */
export type String_755 = string;
/**
 * The description of the tool
 */
export type String_756 = string;
export type Array_80 = (Object_265 & Object_267)[];
export type Null_60 = null;

export interface INTEGRATIONS_UPDATEInput {
  id: String_731;
  integration: Object_257;
}
export interface Object_257 {
  id: String_732;
  name: String_733;
  description?: String_734;
  icon?: String_735;
  access?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_736
      )
    | Null_56;
  appName?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_737
      )
    | Null_57;
  appId?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_738
      )
    | Null_58;
  connection: Object_258 | Object_259 | Object_261 | Object_262 | Object_263;
  metadata?: Object_264 | Null_59;
  tools?: Array_80 | Null_60;
}
export interface Object_258 {
  type: String_739;
  url: String_740;
  token?: String_741;
}
export interface Object_259 {
  type: String_742;
  url: String_743;
  token?: String_744;
  headers?: Object_260;
}
export interface Object_260 {
  [k: string]: String_745;
}
export interface Object_261 {
  type: String_746;
  url: String_747;
  token?: String_748;
}
export interface Object_262 {
  type: String_749;
  tenant: String_750;
  token?: String_751;
}
export interface Object_263 {
  type: String_752;
  name: String_753;
  workspace?: String_754;
}
export interface Object_264 {
  [k: string]: unknown;
}
export interface Object_265 {
  name: String_755;
  inputSchema: Object_266;
}
/**
 * The JSON schema of the input of the tool
 */
export interface Object_266 {
  [k: string]: unknown;
}
export interface Object_267 {
  description?: String_756;
  outputSchema?: Object_268;
}
/**
 * The JSON schema of the output of the tool
 */
export interface Object_268 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface INTEGRATIONS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_757 = string;
/**
 * File path from file added using workspace fs_write tool
 */
export type String_758 = string;
/**
 * The name of the file
 */
export type String_759 = string;
export type StringBoolean = String_760 | Boolean_50;
export type String_760 = string;
export type Boolean_50 = boolean;

export interface KNOWLEDGE_BASE_ADD_FILEInput {
  fileUrl: String_757;
  path?: String_758;
  filename?: String_759;
  metadata?: Object_269;
}
export interface Object_269 {
  [k: string]: StringBoolean;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_ADD_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_761 = string;
/**
 * The dimension of the knowledge base
 */
export type Number_100 = number;

export interface KNOWLEDGE_BASE_CREATEInput {
  name: String_761;
  dimension?: Number_100;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The name of the knowledge base
 */
export type String_762 = string;

export interface KNOWLEDGE_BASE_DELETEInput {
  name: String_762;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_763 = string;

export interface KNOWLEDGE_BASE_DELETE_FILEInput {
  fileUrl: String_763;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_DELETE_FILEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_764 = string;
/**
 * The id of the content to forget
 */
export type Array_81 = String_764[];

export interface KNOWLEDGE_BASE_FORGETInput {
  docIds: Array_81;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_FORGETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_LIST_FILESInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_82 = unknown[];

export interface KNOWLEDGE_BASE_LIST_FILESOutput {
  items: Array_82;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the content being remembered
 */
export type String_765 = string;
/**
 * The content to remember
 */
export type String_766 = string;
export type String_767 = string;

export interface KNOWLEDGE_BASE_REMEMBERInput {
  docId?: String_765;
  content: String_766;
  metadata?: Object_270;
}
/**
 * The metadata to remember
 */
export interface Object_270 {
  [k: string]: String_767;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_REMEMBEROutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The query to search the knowledge base
 */
export type String_768 = string;
/**
 * The number of results to return
 */
export type Number_101 = number;
/**
 * Whether to return the content
 */
export type Boolean_51 = boolean;

export interface KNOWLEDGE_BASE_SEARCHInput {
  query: String_768;
  topK?: Number_101;
  content?: Boolean_51;
  filter?: Object_271;
}
/**
 * Filters to match against document metadata and narrow search results. Supports MongoDB-style query operators:
 *         comparison ($eq, $ne, $gt, $gte, $lt, $lte), array ($in, $nin), logical ($and, $or), and existence ($exists).
 *         Only returns documents whose metadata matches the specified filter conditions.
 *         Examples:
 *         { "metadata": {{"category": "documents"}},
 *         { "metadata": {{"priority": {"$gte": 3}}},
 *         { "metadata": {{"status": {"$in": ["active", "pending"]}}},
 *         { "metadata": {{"$and": [{"type": "pdf"}, {"size": {"$lt": 1000}}]}}}
 */
export interface Object_271 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface KNOWLEDGE_BASE_SEARCHOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Optional prefix to filter branch names
 */
export type String_769 = string;

export interface LIST_BRANCHESInput {
  prefix?: String_769;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_770 = string;
export type Number_102 = number;
export type StringNull_13 = String_771 | Null_61;
export type String_771 = string;
export type Null_61 = null;
export type Array_83 = Object_272[];
export type Number_103 = number;

export interface LIST_BRANCHESOutput {
  branches: Array_83;
  count: Number_103;
}
export interface Object_272 {
  name: String_770;
  createdAt: Number_102;
  metadata: Object_273;
  originBranch: StringNull_13;
}
export interface Object_273 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_772 = string;
/**
 * Optional prefix to filter files (use select instead)
 */
export type String_773 = string;
export type String_774 = string;
/**
 * Optional list of files to select
 */
export type Array_84 = String_774[];
/**
 * Include file content as base64 in the response
 */
export type Boolean_52 = boolean;

export interface LIST_FILESInput {
  branch?: String_772;
  prefix?: String_773;
  select?: Array_84;
  includeContent?: Boolean_52;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_775 = string;
export type Number_104 = number;
export type Number_105 = number;
export type Number_106 = number;
export type String_776 = string;
export type Number_107 = number;

export interface LIST_FILESOutput {
  files: Object_274;
  count: Number_107;
}
export interface Object_274 {
  [k: string]: Object_275;
}
export interface Object_275 {
  address: String_775;
  metadata: Object_276;
  sizeInBytes: Number_104;
  mtime: Number_105;
  ctime: Number_106;
  content?: String_776;
}
export interface Object_276 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch to merge into (defaults to 'main')
 */
export type String_777 = string;
/**
 * The branch to merge from
 */
export type String_778 = string;
/**
 * Merge strategy
 */
export type String_779 = "OVERRIDE" | "LAST_WRITE_WINS";

export interface MERGE_BRANCHInput {
  targetBranch?: String_777;
  sourceBranch: String_778;
  strategy: String_779;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_108 = number;
export type String_780 = string;
export type Array_85 = String_780[];
export type String_781 = string;
export type Array_86 = String_781[];
export type String_782 = string;
export type Array_87 = String_782[];
export type String_783 = string;
export type String_784 = "local" | "remote";
export type Number_109 = number;
export type Number_110 = number;
export type Array_88 = Object_277[];

export interface MERGE_BRANCHOutput {
  filesMerged: Number_108;
  added: Array_85;
  modified: Array_86;
  deleted: Array_87;
  conflicts?: Array_88;
}
export interface Object_277 {
  path: String_783;
  resolved: String_784;
  localMtime: Number_109;
  remoteMtime: Number_110;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_785 = string;
export type String_786 = string;
export type String_787 = string;
export type String_788 = string;
export type Boolean_53 = boolean;
export type Boolean_54 = boolean;

export interface MODELS_CREATEInput {
  name: String_785;
  model: String_786;
  apiKey?: String_787;
  description?: String_788;
  byDeco?: Boolean_53;
  isEnabled?: Boolean_54;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_789 = string;

export interface MODELS_DELETEInput {
  id: String_789;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_790 = string;

export interface MODELS_GETInput {
  id: String_790;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_55 = boolean;
export type Boolean_56 = boolean;

export interface MODELS_LISTInput {
  excludeDisabled?: Boolean_55;
  excludeAuto?: Boolean_56;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_89 = unknown[];

export interface MODELS_LISTOutput {
  items: Array_89;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_791 = string;
export type String_792 = string;
export type String_793 = string;
export type StringNull_14 = String_794 | Null_62;
export type String_794 = string;
export type Null_62 = null;
export type Boolean_57 = boolean;
export type Boolean_58 = boolean;
export type String_795 = string;

export interface MODELS_UPDATEInput {
  id: String_791;
  data: Object_278;
}
export interface Object_278 {
  name?: String_792;
  model?: String_793;
  apiKey?: StringNull_14;
  isEnabled?: Boolean_57;
  byDeco?: Boolean_58;
  description?: String_795;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MODELS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the integration to create an OAuth code for
 */
export type String_796 = string;

export interface OAUTH_CODE_CREATEInput {
  integrationId: String_796;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The OAuth code
 */
export type String_797 = string;

export interface OAUTH_CODE_CREATEOutput {
  code: String_797;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The amount (in microdollars) of money to pre-authorize. Specified in USD dollars.
 */
export type StringNumber_2 = String_798 | Number_111;
export type String_798 = string;
export type Number_111 = number;

export interface PRE_AUTHORIZE_AMOUNTInput {
  amount: StringNumber_2;
  metadata?: Object_279;
}
export interface Object_279 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_799 = string;

export interface PRE_AUTHORIZE_AMOUNTOutput {
  id: String_799;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_800 = string;
export type String_801 = string;
export type String_802 = string;

export interface PROMPTS_CREATEInput {
  name: String_800;
  description?: String_801;
  content: String_802;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_803 = string;

export interface PROMPTS_DELETEInput {
  id: String_803;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_DELETEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_804 = string;

export interface PROMPTS_GETInput {
  id: String_804;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The id of the prompt
 */
export type String_805 = string;
/**
 * The name of the prompt
 */
export type String_806 = string;
/**
 * The description of the prompt
 */
export type StringNull_15 = String_807 | Null_63;
export type String_807 = string;
export type Null_63 = null;
/**
 * The content of the prompt
 */
export type String_808 = string;
/**
 * The date and time the prompt was created
 */
export type String_809 = string;
/**
 * The date and time the prompt was last updated
 */
export type StringNull_16 = String_810 | Null_64;
export type String_810 = string;
export type Null_64 = null;
/**
 * The workspace the prompt belongs to
 */
export type String_811 = string;
/**
 * Whether the prompt is readonly
 */
export type Boolean_59 = boolean;

export interface PROMPTS_GETOutput {
  id: String_805;
  name: String_806;
  description: StringNull_15;
  content: String_808;
  created_at: String_809;
  updated_at?: StringNull_16;
  workspace?: String_811;
  readonly?: Boolean_59;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_812 = string;
export type Number_112 = number;
export type Number_113 = number;

export interface PROMPTS_GET_VERSIONSInput {
  id: String_812;
  limit?: Number_112;
  offset?: Number_113;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type StringNull_17 = String_813 | Null_65;
export type String_813 = string;
export type Null_65 = null;
export type String_814 = string;
export type StringNull_18 = String_815 | Null_66;
export type String_815 = string;
export type Null_66 = null;
export type String_816 = string;
export type StringNull_19 = String_817 | Null_67;
export type String_817 = string;
export type Null_67 = null;
export type String_818 = string;
export type StringNull_20 = String_819 | Null_68;
export type String_819 = string;
export type Null_68 = null;
export type Array_90 = Object_280[];

export interface PROMPTS_GET_VERSIONSOutput {
  items: Array_90;
}
export interface Object_280 {
  content: StringNull_17;
  created_at: String_814;
  created_by: StringNull_18;
  id: String_816;
  name: StringNull_19;
  prompt_id: String_818;
  version_name: StringNull_20;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_820 = string;
/**
 * Filter prompts by ids
 */
export type Array_91 = String_820[];
/**
 * Resolve mentions in the prompts
 */
export type Boolean_60 = boolean;
export type String_821 = string;
/**
 * Exclude prompts by ids
 */
export type Array_92 = String_821[];

export interface PROMPTS_LISTInput {
  ids?: Array_91;
  resolveMentions?: Boolean_60;
  excludeIds?: Array_92;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Array_93 = unknown[];

export interface PROMPTS_LISTOutput {
  items: Array_93;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_822 = string;
export type String_823 = string;

export interface PROMPTS_RENAME_VERSIONInput {
  id: String_822;
  versionName: String_823;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_RENAME_VERSIONOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_824 = string;
export type Number_114 = number;
export type Number_115 = number;

export interface PROMPTS_SEARCHInput {
  query: String_824;
  limit?: Number_114;
  offset?: Number_115;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_SEARCHOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_825 = string;
export type String_826 = string;
export type String_827 = string;
export type Null_69 = null;
export type String_828 = string;
export type String_829 = string;

export interface PROMPTS_UPDATEInput {
  id: String_825;
  data: Object_281;
  versionName?: String_829;
}
export interface Object_281 {
  name?: String_826;
  description?:
    | (
        | {
            [k: string]: unknown;
          }
        | String_827
      )
    | Null_69;
  content?: String_828;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PROMPTS_UPDATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_830 = string;
/**
 * The file path within the branch
 */
export type String_831 = string;
/**
 * Plain text string content
 */
export type String_832 = string;
/**
 * Base64 encoded content
 */
export type String_833 = string;
export type Number_116 = number;
/**
 * Array of bytes (0-255)
 */
export type Array_94 = Number_116[];
/**
 * Expected change time for conflict detection
 */
export type Number_117 = number;

export interface PUT_FILEInput {
  branch?: String_830;
  path: String_831;
  /**
   * The file content as plain string, base64 object, or array of bytes
   */
  content: String_832 | Object_282 | Array_94;
  metadata?: Object_283;
  expectedCtime?: Number_117;
}
export interface Object_282 {
  base64: String_833;
}
/**
 * Additional metadata key-value pairs
 */
export interface Object_283 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Boolean_61 = boolean;

export interface PUT_FILEOutput {
  conflict?: Boolean_61;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The branch name
 */
export type String_834 = string;
/**
 * The file path within the branch
 */
export type String_835 = string;
/**
 * Return format: 'base64' (default), 'byteArray', 'plainString', or 'json'
 */
export type String_836 = "base64" | "byteArray" | "plainString" | "json";

export interface READ_FILEInput {
  branch?: String_834;
  path: String_835;
  format?: String_836;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_837 = string;
export type Number_118 = number;
export type Number_119 = number;

export interface READ_FILEOutput {
  content?: unknown;
  address: String_837;
  metadata: Object_284;
  mtime: Number_118;
  ctime: Number_119;
}
export interface Object_284 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_838 = string;

export interface REDEEM_VOUCHERInput {
  voucher: String_838;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_839 = string;

export interface REDEEM_VOUCHEROutput {
  voucherId: String_839;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_840 = string;
/**
 * Filter apps by scope name
 */
export type String_841 = string;

export interface REGISTRY_LIST_APPSInput {
  search?: String_840;
  scopeName?: String_841;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_842 = string;
export type String_843 = string;
export type String_844 = string;
export type String_845 = string;
export type String_846 = string;
export type String_847 = string;
export type String_848 = string;
export type String_849 = string;
export type String_850 = "HTTP";
export type String_851 = string;
export type String_852 = string;
export type String_853 = "SSE";
export type String_854 = string;
export type String_855 = string;
export type String_856 = string;
export type String_857 = "Websocket";
export type String_858 = string;
export type String_859 = string;
export type String_860 = "Deco";
export type String_861 = string;
export type String_862 = string;
export type String_863 = "INNATE";
export type String_864 = string;
export type String_865 = string;
export type String_866 = string;
export type String_867 = string;
export type Boolean_62 = boolean;
export type String_868 = string;
export type Boolean_63 = boolean;
export type String_869 = string;
export type String_870 = string;
export type String_871 = string;
export type Array_96 = Object_292[];
export type Null_70 = null;
export type Array_95 = Object_285[];

export interface REGISTRY_LIST_APPSOutput {
  apps: Array_95;
}
export interface Object_285 {
  id: String_842;
  workspace: String_843;
  scopeId: String_844;
  scopeName: String_845;
  appName: String_846;
  name: String_847;
  description?: String_848;
  icon?: String_849;
  connection: Object_286 | Object_287 | Object_289 | Object_290 | Object_291;
  createdAt: String_866;
  updatedAt: String_867;
  unlisted: Boolean_62;
  friendlyName?: String_868;
  verified?: Boolean_63;
  tools?: Array_96;
  metadata?: Object_296 | Null_70;
}
export interface Object_286 {
  type: String_850;
  url: String_851;
  token?: String_852;
}
export interface Object_287 {
  type: String_853;
  url: String_854;
  token?: String_855;
  headers?: Object_288;
}
export interface Object_288 {
  [k: string]: String_856;
}
export interface Object_289 {
  type: String_857;
  url: String_858;
  token?: String_859;
}
export interface Object_290 {
  type: String_860;
  tenant: String_861;
  token?: String_862;
}
export interface Object_291 {
  type: String_863;
  name: String_864;
  workspace?: String_865;
}
export interface Object_292 {
  id: String_869;
  name: String_870;
  description?: String_871;
  inputSchema: Object_293;
  outputSchema?: Object_294;
  metadata?: Object_295;
}
export interface Object_293 {
  [k: string]: unknown;
}
export interface Object_294 {
  [k: string]: unknown;
}
export interface Object_295 {
  [k: string]: unknown;
}
export interface Object_296 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter apps by name or description
 */
export type String_872 = string;

export interface REGISTRY_LIST_PUBLISHED_APPSInput {
  search?: String_872;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_873 = string;
export type String_874 = string;
export type String_875 = string;
export type String_876 = string;
export type String_877 = string;
export type String_878 = string;
export type String_879 = string;
export type String_880 = string;
export type String_881 = "HTTP";
export type String_882 = string;
export type String_883 = string;
export type String_884 = "SSE";
export type String_885 = string;
export type String_886 = string;
export type String_887 = string;
export type String_888 = "Websocket";
export type String_889 = string;
export type String_890 = string;
export type String_891 = "Deco";
export type String_892 = string;
export type String_893 = string;
export type String_894 = "INNATE";
export type String_895 = string;
export type String_896 = string;
export type String_897 = string;
export type String_898 = string;
export type Boolean_64 = boolean;
export type String_899 = string;
export type Boolean_65 = boolean;
export type String_900 = string;
export type String_901 = string;
export type String_902 = string;
export type Array_98 = Object_304[];
export type Null_71 = null;
export type Array_97 = Object_297[];

export interface REGISTRY_LIST_PUBLISHED_APPSOutput {
  apps: Array_97;
}
export interface Object_297 {
  id: String_873;
  workspace: String_874;
  scopeId: String_875;
  scopeName: String_876;
  appName: String_877;
  name: String_878;
  description?: String_879;
  icon?: String_880;
  connection: Object_298 | Object_299 | Object_301 | Object_302 | Object_303;
  createdAt: String_897;
  updatedAt: String_898;
  unlisted: Boolean_64;
  friendlyName?: String_899;
  verified?: Boolean_65;
  tools?: Array_98;
  metadata?: Object_308 | Null_71;
}
export interface Object_298 {
  type: String_881;
  url: String_882;
  token?: String_883;
}
export interface Object_299 {
  type: String_884;
  url: String_885;
  token?: String_886;
  headers?: Object_300;
}
export interface Object_300 {
  [k: string]: String_887;
}
export interface Object_301 {
  type: String_888;
  url: String_889;
  token?: String_890;
}
export interface Object_302 {
  type: String_891;
  tenant: String_892;
  token?: String_893;
}
export interface Object_303 {
  type: String_894;
  name: String_895;
  workspace?: String_896;
}
export interface Object_304 {
  id: String_900;
  name: String_901;
  description?: String_902;
  inputSchema: Object_305;
  outputSchema?: Object_306;
  metadata?: Object_307;
}
export interface Object_305 {
  [k: string]: unknown;
}
export interface Object_306 {
  [k: string]: unknown;
}
export interface Object_307 {
  [k: string]: unknown;
}
export interface Object_308 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Search term to filter scopes by name
 */
export type String_903 = string;

export interface REGISTRY_LIST_SCOPESInput {
  search?: String_903;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_904 = string;
export type String_905 = string;
export type String_906 = string;
export type String_907 = string;
export type String_908 = string;
export type Array_99 = Object_309[];

export interface REGISTRY_LIST_SCOPESOutput {
  scopes: Array_99;
}
export interface Object_309 {
  id: String_904;
  scopeName: String_905;
  workspace: String_906;
  createdAt: String_907;
  updatedAt: String_908;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The scope to publish to (defaults to team slug, automatically claimed on first use)
 */
export type String_909 = string;
/**
 * The name of the app
 */
export type String_910 = string;
/**
 * A friendly name for the app
 */
export type String_911 = string;
/**
 * A description of the app
 */
export type String_912 = string;
/**
 * URL to an icon for the app
 */
export type String_913 = string;
export type String_914 = "HTTP";
export type String_915 = string;
export type String_916 = string;
export type String_917 = "SSE";
export type String_918 = string;
export type String_919 = string;
export type String_920 = string;
export type String_921 = "Websocket";
export type String_922 = string;
export type String_923 = string;
export type String_924 = "Deco";
export type String_925 = string;
export type String_926 = string;
export type String_927 = "INNATE";
export type String_928 = string;
export type String_929 = string;
/**
 * Whether the app should be unlisted
 */
export type Boolean_66 = boolean;

export interface REGISTRY_PUBLISH_APPInput {
  scopeName: String_909;
  name: String_910;
  friendlyName?: String_911;
  description?: String_912;
  icon?: String_913;
  /**
   * The MCP connection configuration for the app
   */
  connection: Object_310 | Object_311 | Object_313 | Object_314 | Object_315;
  metadata?: Object_316;
  unlisted?: Boolean_66;
}
export interface Object_310 {
  type: String_914;
  url: String_915;
  token?: String_916;
}
export interface Object_311 {
  type: String_917;
  url: String_918;
  token?: String_919;
  headers?: Object_312;
}
export interface Object_312 {
  [k: string]: String_920;
}
export interface Object_313 {
  type: String_921;
  url: String_922;
  token?: String_923;
}
export interface Object_314 {
  type: String_924;
  tenant: String_925;
  token?: String_926;
}
export interface Object_315 {
  type: String_927;
  name: String_928;
  workspace?: String_929;
}
/**
 * Metadata for the app
 */
export interface Object_316 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_930 = string;
export type String_931 = string;
export type String_932 = string;
export type String_933 = string;
export type String_934 = string;
export type String_935 = string;
export type String_936 = string;
export type String_937 = string;
export type String_938 = "HTTP";
export type String_939 = string;
export type String_940 = string;
export type String_941 = "SSE";
export type String_942 = string;
export type String_943 = string;
export type String_944 = string;
export type String_945 = "Websocket";
export type String_946 = string;
export type String_947 = string;
export type String_948 = "Deco";
export type String_949 = string;
export type String_950 = string;
export type String_951 = "INNATE";
export type String_952 = string;
export type String_953 = string;
export type String_954 = string;
export type String_955 = string;
export type Boolean_67 = boolean;
export type String_956 = string;
export type Boolean_68 = boolean;
export type String_957 = string;
export type String_958 = string;
export type String_959 = string;
export type Array_100 = Object_323[];
export type Null_72 = null;

export interface REGISTRY_PUBLISH_APPOutput {
  id: String_930;
  workspace: String_931;
  scopeId: String_932;
  scopeName: String_933;
  appName: String_934;
  name: String_935;
  description?: String_936;
  icon?: String_937;
  connection: Object_317 | Object_318 | Object_320 | Object_321 | Object_322;
  createdAt: String_954;
  updatedAt: String_955;
  unlisted: Boolean_67;
  friendlyName?: String_956;
  verified?: Boolean_68;
  tools?: Array_100;
  metadata?: Object_327 | Null_72;
}
export interface Object_317 {
  type: String_938;
  url: String_939;
  token?: String_940;
}
export interface Object_318 {
  type: String_941;
  url: String_942;
  token?: String_943;
  headers?: Object_319;
}
export interface Object_319 {
  [k: string]: String_944;
}
export interface Object_320 {
  type: String_945;
  url: String_946;
  token?: String_947;
}
export interface Object_321 {
  type: String_948;
  tenant: String_949;
  token?: String_950;
}
export interface Object_322 {
  type: String_951;
  name: String_952;
  workspace?: String_953;
}
export interface Object_323 {
  id: String_957;
  name: String_958;
  description?: String_959;
  inputSchema: Object_324;
  outputSchema?: Object_325;
  metadata?: Object_326;
}
export interface Object_324 {
  [k: string]: unknown;
}
export interface Object_325 {
  [k: string]: unknown;
}
export interface Object_326 {
  [k: string]: unknown;
}
export interface Object_327 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_960 = string;
export type String_961 = string;
export type Number_120 = number;
export type String_962 = string;
export type Array_102 = Object_329[];
export type Array_101 = Object_328[];

export interface TEAM_MEMBERS_INVITEInput_1 {
  teamId: String_960;
  invitees: Array_101;
}
export interface Object_328 {
  email: String_961;
  roles: Array_102;
}
export interface Object_329 {
  id: Number_120;
  name: String_962;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAM_MEMBERS_INVITEOutput_1 {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique identifier for the view
 */
export type String_963 = string;
/**
 * Display title for the view
 */
export type String_964 = string;
/**
 * Icon identifier for the view
 */
export type String_965 = string;
/**
 * Type of view (custom for views, resource for resources)
 */
export type String_966 = "custom" | "resource";
/**
 * Integration-specific view name
 */
export type String_967 = string;
export type String_968 = string;
/**
 * Optional list of tool names to enable for this view
 */
export type Array_103 = String_968[];
export type String_969 = string;
/**
 * Optional list of textual rules to persist in context
 */
export type Array_104 = String_969[];
/**
 * Integration ID
 */
export type String_970 = string;
/**
 * Type of resource (for resources only)
 */
export type String_971 = string;

export interface TEAMS_ADD_VIEWInput {
  view: Object_330;
}
/**
 * View or resource configuration to add
 */
export interface Object_330 {
  id: String_963;
  title: String_964;
  icon: String_965;
  type: String_966;
  name: String_967;
  tools?: Array_103;
  rules?: Array_104;
  integration: Object_331;
  resourceType?: String_971;
}
export interface Object_331 {
  id: String_970;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_ADD_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The ID of the view or resource to remove
 */
export type String_972 = string;

export interface TEAMS_REMOVE_VIEWInput {
  viewId: String_972;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TEAMS_REMOVE_VIEWOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_973 = string;

export interface THREADS_GETInput {
  id: String_973;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_974 = string;

export interface THREADS_GET_MESSAGESInput {
  id: String_974;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GET_MESSAGESOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_975 = string;

export interface THREADS_GET_TOOLSInput {
  id: String_975;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_GET_TOOLSOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Number_121 = number;
export type String_976 = string;
export type String_977 = string;
export type String_978 =
  | "createdAt_desc"
  | "createdAt_asc"
  | "updatedAt_desc"
  | "updatedAt_asc";
export type String_979 = string;

export interface THREADS_LISTInput {
  limit?: Number_121;
  agentId?: String_976;
  resourceId?: String_977;
  orderBy?: String_978;
  cursor?: String_979;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_LISTOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_980 = string;

export interface THREADS_UPDATE_METADATAInput {
  threadId: String_980;
  metadata: Object_332;
}
export interface Object_332 {
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_METADATAOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_981 = string;
export type String_982 = string;

export interface THREADS_UPDATE_TITLEInput {
  threadId: String_981;
  title: String_982;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface THREADS_UPDATE_TITLEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_983 = string;

export interface TRIGGERS_ACTIVATEInput {
  id: String_983;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_ACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The title of the trigger
 */
export type String_984 = string;
/**
 * The description of the trigger
 */
export type String_985 = string;
export type String_986 = string;
export type String_987 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_988 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_989 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_990 = string;
export type String_991 = "user" | "assistant" | "system";
export type String_992 = string;
/**
 * The messages to send to the LLM
 */
export type Array_105 = Object_335[];
/**
 * The URL of the webhook
 */
export type String_993 = string;
/**
 * The integration ID
 */
export type String_994 = string;
/**
 * The tool name
 */
export type String_995 = string;
/**
 * The title of the trigger
 */
export type String_996 = string;
/**
 * The description of the trigger
 */
export type String_997 = string;
export type String_998 = "webhook";
/**
 * The URL of the webhook
 */
export type String_999 = string;
/**
 * The passphrase for the webhook
 */
export type String_1000 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1001 = string;

export interface TRIGGERS_CREATEInput {
  trigger: (Object_333 | Object_336) | (Object_339 | Object_341);
}
export interface Object_333 {
  title: String_984;
  description?: String_985;
  cronExp: String_986;
  type: String_987;
  agentId: String_988;
  prompt: Object_334;
  url?: String_993;
}
export interface Object_334 {
  threadId?: String_989;
  resourceId?: String_990;
  messages: Array_105;
}
export interface Object_335 {
  role: String_991;
  content: String_992;
}
export interface Object_336 {
  title: String_984;
  description?: String_985;
  cronExp: String_986;
  type: String_987;
  callTool: Object_337;
}
export interface Object_337 {
  integrationId: String_994;
  toolName: String_995;
  arguments?: Object_338;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_338 {
  [k: string]: unknown;
}
export interface Object_339 {
  title: String_996;
  description?: String_997;
  type: String_998;
  url?: String_999;
  passphrase?: String_1000;
  agentId: String_1001;
  schema?: Object_340;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_340 {
  [k: string]: unknown;
}
export interface Object_341 {
  title: String_996;
  description?: String_997;
  type: String_998;
  url?: String_999;
  passphrase?: String_1000;
  callTool: Object_337;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_CRONOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_CREATE_WEBHOOKInput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1002 = string;
export type String_1003 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1004 = string;
/**
 * The description of the trigger
 */
export type String_1005 = string;
export type String_1006 = string;
export type String_1007 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1008 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1009 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1010 = string;
export type String_1011 = "user" | "assistant" | "system";
export type String_1012 = string;
/**
 * The messages to send to the LLM
 */
export type Array_106 = Object_344[];
/**
 * The URL of the webhook
 */
export type String_1013 = string;
/**
 * The integration ID
 */
export type String_1014 = string;
/**
 * The tool name
 */
export type String_1015 = string;
/**
 * The title of the trigger
 */
export type String_1016 = string;
/**
 * The description of the trigger
 */
export type String_1017 = string;
export type String_1018 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1019 = string;
/**
 * The passphrase for the webhook
 */
export type String_1020 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1021 = string;
/**
 * The creation date
 */
export type String_1022 = string;
/**
 * The update date
 */
export type String_1023 = string;
/**
 * The user ID
 */
export type String_1024 = string;
/**
 * The user name
 */
export type String_1025 = string;
/**
 * The user email
 */
export type String_1026 = string;
/**
 * The user avatar
 */
export type String_1027 = string;
/**
 * The trigger status
 */
export type Boolean_69 = boolean;
/**
 * The workspace ID
 */
export type String_1028 = string;

export interface TRIGGERS_CREATE_WEBHOOKOutput {
  id: String_1002;
  type: String_1003;
  data: (Object_342 | Object_345) | (Object_348 | Object_350);
  createdAt: String_1022;
  updatedAt: String_1023;
  user: Object_351;
  active?: Boolean_69;
  workspace: String_1028;
}
export interface Object_342 {
  title: String_1004;
  description?: String_1005;
  cronExp: String_1006;
  type: String_1007;
  agentId: String_1008;
  prompt: Object_343;
  url?: String_1013;
}
export interface Object_343 {
  threadId?: String_1009;
  resourceId?: String_1010;
  messages: Array_106;
}
export interface Object_344 {
  role: String_1011;
  content: String_1012;
}
export interface Object_345 {
  title: String_1004;
  description?: String_1005;
  cronExp: String_1006;
  type: String_1007;
  callTool: Object_346;
}
export interface Object_346 {
  integrationId: String_1014;
  toolName: String_1015;
  arguments?: Object_347;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_347 {
  [k: string]: unknown;
}
export interface Object_348 {
  title: String_1016;
  description?: String_1017;
  type: String_1018;
  url?: String_1019;
  passphrase?: String_1020;
  agentId: String_1021;
  schema?: Object_349;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_349 {
  [k: string]: unknown;
}
export interface Object_350 {
  title: String_1016;
  description?: String_1017;
  type: String_1018;
  url?: String_1019;
  passphrase?: String_1020;
  callTool: Object_346;
}
export interface Object_351 {
  id: String_1024;
  metadata: Object_352;
}
export interface Object_352 {
  full_name: String_1025;
  email: String_1026;
  avatar_url: String_1027;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1029 = string;

export interface TRIGGERS_DEACTIVATEInput {
  id: String_1029;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_DEACTIVATEOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1030 = string;

export interface TRIGGERS_DELETEInput {
  id: String_1030;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1031 = string;

export interface TRIGGERS_DELETEOutput {
  id: String_1031;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1032 = string;

export interface TRIGGERS_GETInput {
  id: String_1032;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_GETOutput {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1033 = string;

export interface TRIGGERS_GET_WEBHOOK_URLInput {
  id: String_1033;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The URL of the webhook trigger
 */
export type String_1034 = string;

export interface TRIGGERS_GET_WEBHOOK_URLOutput {
  url?: String_1034;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1035 = string;

export interface TRIGGERS_LISTInput {
  agentId?: String_1035;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * The trigger ID
 */
export type String_1036 = string;
export type String_1037 = "cron" | "webhook";
/**
 * The title of the trigger
 */
export type String_1038 = string;
/**
 * The description of the trigger
 */
export type String_1039 = string;
export type String_1040 = string;
export type String_1041 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1042 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1043 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1044 = string;
export type String_1045 = "user" | "assistant" | "system";
export type String_1046 = string;
/**
 * The messages to send to the LLM
 */
export type Array_108 = Object_356[];
/**
 * The URL of the webhook
 */
export type String_1047 = string;
/**
 * The integration ID
 */
export type String_1048 = string;
/**
 * The tool name
 */
export type String_1049 = string;
/**
 * The title of the trigger
 */
export type String_1050 = string;
/**
 * The description of the trigger
 */
export type String_1051 = string;
export type String_1052 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1053 = string;
/**
 * The passphrase for the webhook
 */
export type String_1054 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1055 = string;
/**
 * The creation date
 */
export type String_1056 = string;
/**
 * The update date
 */
export type String_1057 = string;
/**
 * The user ID
 */
export type String_1058 = string;
/**
 * The user name
 */
export type String_1059 = string;
/**
 * The user email
 */
export type String_1060 = string;
/**
 * The user avatar
 */
export type String_1061 = string;
/**
 * The trigger status
 */
export type Boolean_70 = boolean;
/**
 * The workspace ID
 */
export type String_1062 = string;
export type Array_107 = Object_353[];

export interface TRIGGERS_LISTOutput {
  triggers: Array_107;
}
export interface Object_353 {
  id: String_1036;
  type: String_1037;
  data: (Object_354 | Object_357) | (Object_360 | Object_362);
  createdAt: String_1056;
  updatedAt: String_1057;
  user: Object_363;
  active?: Boolean_70;
  workspace: String_1062;
}
export interface Object_354 {
  title: String_1038;
  description?: String_1039;
  cronExp: String_1040;
  type: String_1041;
  agentId: String_1042;
  prompt: Object_355;
  url?: String_1047;
}
export interface Object_355 {
  threadId?: String_1043;
  resourceId?: String_1044;
  messages: Array_108;
}
export interface Object_356 {
  role: String_1045;
  content: String_1046;
}
export interface Object_357 {
  title: String_1038;
  description?: String_1039;
  cronExp: String_1040;
  type: String_1041;
  callTool: Object_358;
}
export interface Object_358 {
  integrationId: String_1048;
  toolName: String_1049;
  arguments?: Object_359;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_359 {
  [k: string]: unknown;
}
export interface Object_360 {
  title: String_1050;
  description?: String_1051;
  type: String_1052;
  url?: String_1053;
  passphrase?: String_1054;
  agentId: String_1055;
  schema?: Object_361;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_361 {
  [k: string]: unknown;
}
export interface Object_362 {
  title: String_1050;
  description?: String_1051;
  type: String_1052;
  url?: String_1053;
  passphrase?: String_1054;
  callTool: Object_358;
}
export interface Object_363 {
  id: String_1058;
  metadata: Object_364;
}
export interface Object_364 {
  full_name: String_1059;
  email: String_1060;
  avatar_url: String_1061;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type String_1063 = string;
/**
 * The title of the trigger
 */
export type String_1064 = string;
/**
 * The description of the trigger
 */
export type String_1065 = string;
export type String_1066 = string;
export type String_1067 = "cron";
/**
 * The agent ID to use for the trigger
 */
export type String_1068 = string;
/**
 * if not provided, the same conversation thread will be used, you can pass any string you want to use
 */
export type String_1069 = string;
/**
 * if not provided, the same resource will be used, you can pass any string you want to use
 */
export type String_1070 = string;
export type String_1071 = "user" | "assistant" | "system";
export type String_1072 = string;
/**
 * The messages to send to the LLM
 */
export type Array_109 = Object_367[];
/**
 * The URL of the webhook
 */
export type String_1073 = string;
/**
 * The integration ID
 */
export type String_1074 = string;
/**
 * The tool name
 */
export type String_1075 = string;
/**
 * The title of the trigger
 */
export type String_1076 = string;
/**
 * The description of the trigger
 */
export type String_1077 = string;
export type String_1078 = "webhook";
/**
 * The URL of the webhook
 */
export type String_1079 = string;
/**
 * The passphrase for the webhook
 */
export type String_1080 = string;
/**
 * The agent ID to use for the trigger
 */
export type String_1081 = string;

export interface TRIGGERS_UPDATEInput {
  id: String_1063;
  data: (Object_365 | Object_368) | (Object_371 | Object_373);
}
export interface Object_365 {
  title: String_1064;
  description?: String_1065;
  cronExp: String_1066;
  type: String_1067;
  agentId: String_1068;
  prompt: Object_366;
  url?: String_1073;
}
export interface Object_366 {
  threadId?: String_1069;
  resourceId?: String_1070;
  messages: Array_109;
}
export interface Object_367 {
  role: String_1071;
  content: String_1072;
}
export interface Object_368 {
  title: String_1064;
  description?: String_1065;
  cronExp: String_1066;
  type: String_1067;
  callTool: Object_369;
}
export interface Object_369 {
  integrationId: String_1074;
  toolName: String_1075;
  arguments?: Object_370;
}
/**
 * The arguments to pass to the tool
 */
export interface Object_370 {
  [k: string]: unknown;
}
export interface Object_371 {
  title: String_1076;
  description?: String_1077;
  type: String_1078;
  url?: String_1079;
  passphrase?: String_1080;
  agentId: String_1081;
  schema?: Object_372;
}
/**
 * The JSONSchema of the returning of the webhook.
 *
 * By default this webhook returns the LLM generate text response.
 *
 * If a JSONSchema is specified, it returns a JSON with the specified schema.
 *
 *
 */
export interface Object_372 {
  [k: string]: unknown;
}
export interface Object_373 {
  title: String_1076;
  description?: String_1077;
  type: String_1078;
  url?: String_1079;
  passphrase?: String_1080;
  callTool: Object_369;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TRIGGERS_UPDATEOutput {}

import { z } from "zod";

export type Mcp<T extends Record<string, (input: any) => Promise<any>>> = {
  [K in keyof T]: ((
    input: Parameters<T[K]>[0],
  ) => Promise<ReturnType<T[K]>>) & {
    asTool: () => Promise<{
      inputSchema: z.ZodType<Parameters<T[K]>[0]>;
      outputSchema?: z.ZodType<ReturnType<T[K]>>;
      description: string;
      id: string;
      execute: ({
        context,
      }: {
        context: Parameters<T[K]>[0];
      }) => Promise<ReturnType<T[K]>>;
    }>;
  };
};

export const StateSchema = z.object({});

export interface Env {
  DECO_CHAT_WORKSPACE: string;
  DECO_CHAT_API_JWT_PUBLIC_KEY: string;
  TOOLS_MANAGEMENT: Mcp<{
    /**
     * Create a new tool with JSON Schema validation.
     * Create executable tools that can be run in a secure environment with
     * automatic input/output validation using JSON schemas.
     * ## How to Use Tools in Your Code
     * **Discovering Available Tools:**
     * Before creating tools that interact with other services, use INTEGRATIONS_LIST to discover all available integrations and their tools:
     * - Call INTEGRATIONS_LIST to get a list of all integrations in the workspace
     * - Each integration contains its available tools with their schemas
     * - Use this information to understand what tools you can call
     * **Calling Tools from Your Tool:**
     * Tools can call other tools using the ctx.env object:
     * - Format: ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args) (use bracket notation for integration IDs)
     * - The integration ID comes from the integration's connection field
     * - Integration IDs often contain special characters (e.g., 'i:123dsa123sf124fsd'), so always use bracket notation
     * - Tool names are exactly as listed in the integration's tools array
     * - Arguments must match the tool's input schema
     * **Example Tool Usage:**
     * Before writing your tool code, use INTEGRATIONS_LIST to discover available integrations and their tools. Then write clean code that calls the tools directly:
     * ```javascript
     * export default async function (input, ctx) {
     * // Call the tool directly using the discovered integration ID and tool name
     * // Note: Use bracket notation for integration IDs with special characters
     * const result = await ctx.env['i:slack_workspace_123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * ## Tool Creation Example
     * Example tool creation:
     * {
     * "name": "SendSlackNotification",
     * "description": "Send a notification message to a Slack channel",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string", "description": "Slack channel name" },
     * "message": { "type": "string", "description": "Message to send" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "messageId": { "type": "string" }
     * },
     * "required": ["success", "messageId"]
     * },
     * "execute": "export default async function (input, ctx) { const result = await ctx.env['i:slack_workspace_123'].send_message({ channel: input.channel, text: input.message }); return { success: true, messageId: result.ts }; }"
     * }
     * ## Technical Requirements
     * The execute field must be inline ES module code (saved to /src/functions/{name}.ts)
     * The execute function signature must be:
     * async (input: typeof inputSchema, ctx: { env: Record<string, any> }): Promise<typeof outputSchema>
     * **Important:** Always use INTEGRATIONS_LIST to discover available tools before writing your tool code. This ensures you use the correct integration IDs and tool names, and understand the expected input/output schemas. Do not include the INTEGRATIONS_LIST call in your final tool code.
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition and its associated function code.
     * This operation retrieves the complete definition of a tool, including:
     * - Tool metadata (name, description)
     * - Input and output JSON schemas for validation
     * - The execute code (inline ES module)
     * The tool definition includes all necessary information to understand how to use
     * the tool and what data it expects and returns.
     * If the tool calls other tools, use INTEGRATIONS_LIST to discover available
     * integrations and their tools to understand the context.env['{INTEGRATION_ID}'].{TOOL_NAME}
     * calls in the execute code. Note that integration IDs often contain special characters
     * and require bracket notation.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update an existing tool definition.
     * Modify the metadata, schemas, or execution code of an existing tool.
     * This allows you to refine tool behavior, update validation schemas, or fix bugs
     * in the execution logic.
     * When updating the execute code, ensure it maintains the same function signature
     * and that any changes are compatible with the existing input/output schemas.
     * ## Tool Usage Reminders
     * When updating tools that call other tools:
     * - Use INTEGRATIONS_LIST to discover available integrations and their tools before writing code
     * - Call tools using ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args) (use bracket notation for integration IDs)
     * - Integration IDs often contain special characters, so always use bracket notation
     * - Ensure arguments match the target tool's input schema
     * - Handle errors appropriately when calling external tools
     * - Do not include INTEGRATIONS_LIST calls in the final tool code
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
  }>;
  DECO_CHAT_WORKSPACE_API: Mcp<{
    /**
     * Create a new agent
     */
    AGENTS_CREATE: (input: AGENTS_CREATEInput) => Promise<AGENTS_CREATEOutput>;
    /**
     * Delete an agent by id
     */
    AGENTS_DELETE: (input: AGENTS_DELETEInput) => Promise<AGENTS_DELETEOutput>;
    /**
     * Get an agent by id
     */
    AGENTS_GET: (input: AGENTS_GETInput) => Promise<AGENTS_GETOutput>;
    /**
     * List all agents
     */
    AGENTS_LIST: (input: AGENTS_LISTInput) => Promise<AGENTS_LISTOutput>;
    /**
     * Update an existing agent
     */
    AGENTS_UPDATE: (input: AGENTS_UPDATEInput) => Promise<AGENTS_UPDATEOutput>;
    /**
     * Generate text using AI models directly without agent context (stateless)
     */
    AI_GENERATE: (input: AI_GENERATEInput) => Promise<AI_GENERATEOutput>;
    /**
     * Generate structured objects using AI models with JSON schema validation
     */
    AI_GENERATE_OBJECT: (
      input: AI_GENERATE_OBJECTInput,
    ) => Promise<AI_GENERATE_OBJECTOutput>;
    /**
     * Check if an API key has access to a resource
     */
    API_KEYS_CHECK_ACCESS: (
      input: API_KEYS_CHECK_ACCESSInput,
    ) => Promise<API_KEYS_CHECK_ACCESSOutput>;
    /**
     * Create a new API key
     */
    API_KEYS_CREATE: (
      input: API_KEYS_CREATEInput,
    ) => Promise<API_KEYS_CREATEOutput>;
    /**
     * Delete an API key (soft delete)
     */
    API_KEYS_DELETE: (
      input: API_KEYS_DELETEInput,
    ) => Promise<API_KEYS_DELETEOutput>;
    /**
     * Disable an API key
     */
    API_KEYS_DISABLE: (
      input: API_KEYS_DISABLEInput,
    ) => Promise<API_KEYS_DISABLEOutput>;
    /**
     * Enable an API key
     */
    API_KEYS_ENABLE: (
      input: API_KEYS_ENABLEInput,
    ) => Promise<API_KEYS_ENABLEOutput>;
    /**
     * Get an API key by ID
     */
    API_KEYS_GET: (input: API_KEYS_GETInput) => Promise<API_KEYS_GETOutput>;
    /**
     * List all API keys
     */
    API_KEYS_LIST: (input: API_KEYS_LISTInput) => Promise<API_KEYS_LISTOutput>;
    /**
     * Update an API key metadata
     */
    API_KEYS_UPDATE: (
      input: API_KEYS_UPDATEInput,
    ) => Promise<API_KEYS_UPDATEOutput>;
    /**
     * Validate an API key by ID
     */
    API_KEYS_VALIDATE: (
      input: API_KEYS_VALIDATEInput,
    ) => Promise<API_KEYS_VALIDATEOutput>;
    /**
     * Create a channel
     */
    CHANNELS_CREATE: (
      input: CHANNELS_CREATEInput,
    ) => Promise<CHANNELS_CREATEOutput>;
    /**
     * Delete a channel
     */
    CHANNELS_DELETE: (
      input: CHANNELS_DELETEInput,
    ) => Promise<CHANNELS_DELETEOutput>;
    /**
     * Get a channel by ID
     */
    CHANNELS_GET: (input: CHANNELS_GETInput) => Promise<CHANNELS_GETOutput>;
    /**
     * Invite an agent to a channel
     */
    CHANNELS_JOIN: (input: CHANNELS_JOINInput) => Promise<CHANNELS_JOINOutput>;
    /**
     * Remove an agent from a channel
     */
    CHANNELS_LEAVE: (
      input: CHANNELS_LEAVEInput,
    ) => Promise<CHANNELS_LEAVEOutput>;
    /**
     * List all channels
     */
    CHANNELS_LIST: (input: CHANNELS_LISTInput) => Promise<CHANNELS_LISTOutput>;
    /**
     * Commit a pre-authorized amount of money for the current tenant's wallet
     */
    COMMIT_PRE_AUTHORIZED_AMOUNT: (
      input: COMMIT_PRE_AUTHORIZED_AMOUNTInput,
    ) => Promise<COMMIT_PRE_AUTHORIZED_AMOUNTOutput>;
    /**
     * Register a contract with the registry.
     */
    CONTRACT_REGISTER: (
      input: CONTRACT_REGISTERInput,
    ) => Promise<CONTRACT_REGISTEROutput>;
    /**
     * Create a DECONFIG branch. If sourceBranch is provided, creates a branch from that branch (O(1) operation). Otherwise creates an empty branch.
     */
    CREATE_BRANCH: (input: CREATE_BRANCHInput) => Promise<CREATE_BRANCHOutput>;
    /**
     * Create a checkout session for the current tenant's wallet
     */
    CREATE_CHECKOUT_SESSION: (
      input: CREATE_CHECKOUT_SESSIONInput,
    ) => Promise<CREATE_CHECKOUT_SESSIONOutput>;
    /**
     * Create a voucher with money from the current tenant's wallet
     */
    CREATE_VOUCHER: (
      input: CREATE_VOUCHERInput,
    ) => Promise<CREATE_VOUCHEROutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_GET_META: (
      input: DATABASES_GET_METAInput,
    ) => Promise<DATABASES_GET_METAOutput>;
    /**
     * Migrate data from Turso database to new database
     */
    DATABASES_MIGRATE: (
      input: DATABASES_MIGRATEInput,
    ) => Promise<DATABASES_MIGRATEOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RECOVERY: (
      input: DATABASES_RECOVERYInput,
    ) => Promise<DATABASES_RECOVERYOutput>;
    /**
     * Run a SQL query against the workspace database
     */
    DATABASES_RUN_SQL: (
      input: DATABASES_RUN_SQLInput,
    ) => Promise<DATABASES_RUN_SQLOutput>;
    /**
     * List views exposed by this MCP
     */
    DECO_CHAT_VIEWS_LIST: (
      input: DECO_CHAT_VIEWS_LISTInput,
    ) => Promise<DECO_CHAT_VIEWS_LISTOutput>;
    /**
     * Get the schema for a marketplace app
     */
    DECO_GET_APP_SCHEMA: (
      input: DECO_GET_APP_SCHEMAInput,
    ) => Promise<DECO_GET_APP_SCHEMAOutput>;
    /**
     * Install an integration. To know the available ids, use the DECO_INTEGRATIONS_SEARCH tool. Also, after installing, enable the integration using the INTEGRATION_ENABLE tool.
     */
    DECO_INTEGRATION_INSTALL: (
      input: DECO_INTEGRATION_INSTALLInput,
    ) => Promise<DECO_INTEGRATION_INSTALLOutput>;
    /**
     * Start the OAuth flow for an integration
     */
    DECO_INTEGRATION_OAUTH_START: (
      input: DECO_INTEGRATION_OAUTH_STARTInput,
    ) => Promise<DECO_INTEGRATION_OAUTH_STARTOutput>;
    /**
     * Search for integrations in both marketplace and installed.
     * If no query is provided, it will return all installed integrations. For better results, try searching for the service name, i.e. GoogleSheets, GoogleCalendar, Notion, etc.
     * It's always handy to search for installed integrations with no query, since all integrations will be returned. Also, some integrations are handy agents that may help you with common tasks.
     */
    DECO_INTEGRATIONS_SEARCH: (
      input: DECO_INTEGRATIONS_SEARCHInput,
    ) => Promise<DECO_INTEGRATIONS_SEARCHOutput>;
    /**
     * Create a new tool with JSON Schema validation.
     * Create executable tools that can be run in a secure environment with
     * automatic input/output validation using JSON schemas.
     * ## How to Use Tools in Your Code
     * **Discovering Available Tools:**
     * Before creating tools that interact with other services, use INTEGRATIONS_LIST to discover all available integrations and their tools:
     * - Call INTEGRATIONS_LIST to get a list of all integrations in the workspace
     * - Each integration contains its available tools with their schemas
     * - Use this information to understand what tools you can call
     * **Calling Tools from Your Tool:**
     * Tools can call other tools using the ctx.env object:
     * - Format: ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args) (use bracket notation for integration IDs)
     * - The integration ID comes from the integration's connection field
     * - Integration IDs often contain special characters (e.g., 'i:123dsa123sf124fsd'), so always use bracket notation
     * - Tool names are exactly as listed in the integration's tools array
     * - Arguments must match the tool's input schema
     * **Example Tool Usage:**
     * Before writing your tool code, use INTEGRATIONS_LIST to discover available integrations and their tools. Then write clean code that calls the tools directly:
     * ```javascript
     * export default async function (input, ctx) {
     * // Call the tool directly using the discovered integration ID and tool name
     * // Note: Use bracket notation for integration IDs with special characters
     * const result = await ctx.env['i:slack_workspace_123'].send_message({
     * channel: input.channel,
     * text: input.message
     * });
     * return { success: true, messageId: result.ts };
     * }
     * ```
     * ## Tool Creation Example
     * Example tool creation:
     * {
     * "name": "SendSlackNotification",
     * "description": "Send a notification message to a Slack channel",
     * "inputSchema": {
     * "type": "object",
     * "properties": {
     * "channel": { "type": "string", "description": "Slack channel name" },
     * "message": { "type": "string", "description": "Message to send" }
     * },
     * "required": ["channel", "message"]
     * },
     * "outputSchema": {
     * "type": "object",
     * "properties": {
     * "success": { "type": "boolean" },
     * "messageId": { "type": "string" }
     * },
     * "required": ["success", "messageId"]
     * },
     * "execute": "export default async function (input, ctx) { const result = await ctx.env['i:slack_workspace_123'].send_message({ channel: input.channel, text: input.message }); return { success: true, messageId: result.ts }; }"
     * }
     * ## Technical Requirements
     * The execute field must be inline ES module code (saved to /src/functions/{name}.ts)
     * The execute function signature must be:
     * async (input: typeof inputSchema, ctx: { env: Record<string, any> }): Promise<typeof outputSchema>
     * **Important:** Always use INTEGRATIONS_LIST to discover available tools before writing your tool code. This ensures you use the correct integration IDs and tool names, and understand the expected input/output schemas. Do not include the INTEGRATIONS_LIST call in your final tool code.
     */
    DECO_RESOURCE_TOOL_CREATE: (
      input: DECO_RESOURCE_TOOL_CREATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_CREATEOutput>;
    /**
     * Delete a tool from the code environment.
     * This operation removes both the tool definition and its associated function file
     * from the environment. Use this to clean up unused or obsolete tools.
     * Warning: This action cannot be undone. The tool and its function code will be
     * permanently removed from the environment.
     */
    DECO_RESOURCE_TOOL_DELETE: (
      input: DECO_RESOURCE_TOOL_DELETEInput,
    ) => Promise<DECO_RESOURCE_TOOL_DELETEOutput>;
    /**
     * Read a tool definition and its associated function code.
     * This operation retrieves the complete definition of a tool, including:
     * - Tool metadata (name, description)
     * - Input and output JSON schemas for validation
     * - The execute code (inline ES module)
     * The tool definition includes all necessary information to understand how to use
     * the tool and what data it expects and returns.
     * If the tool calls other tools, use INTEGRATIONS_LIST to discover available
     * integrations and their tools to understand the context.env['{INTEGRATION_ID}'].{TOOL_NAME}
     * calls in the execute code. Note that integration IDs often contain special characters
     * and require bracket notation.
     */
    DECO_RESOURCE_TOOL_READ: (
      input: DECO_RESOURCE_TOOL_READInput,
    ) => Promise<DECO_RESOURCE_TOOL_READOutput>;
    /**
     * Search tools in the code environment.
     * This operation allows you to find tools by name, description, or other metadata.
     * Tools are executable functions with JSON Schema validation that can be created,
     * modified, and executed in a secure environment.
     * Use this to discover available tools before creating new ones or to find existing tools
     * for modification or execution.
     */
    DECO_RESOURCE_TOOL_SEARCH: (
      input: DECO_RESOURCE_TOOL_SEARCHInput,
    ) => Promise<DECO_RESOURCE_TOOL_SEARCHOutput>;
    /**
     * Update an existing tool definition.
     * Modify the metadata, schemas, or execution code of an existing tool.
     * This allows you to refine tool behavior, update validation schemas, or fix bugs
     * in the execution logic.
     * When updating the execute code, ensure it maintains the same function signature
     * and that any changes are compatible with the existing input/output schemas.
     * ## Tool Usage Reminders
     * When updating tools that call other tools:
     * - Use INTEGRATIONS_LIST to discover available integrations and their tools before writing code
     * - Call tools using ctx.env['{INTEGRATION_ID}'].{TOOL_NAME}(args) (use bracket notation for integration IDs)
     * - Integration IDs often contain special characters, so always use bracket notation
     * - Ensure arguments match the target tool's input schema
     * - Handle errors appropriately when calling external tools
     * - Do not include INTEGRATIONS_LIST calls in the final tool code
     */
    DECO_RESOURCE_TOOL_UPDATE: (
      input: DECO_RESOURCE_TOOL_UPDATEInput,
    ) => Promise<DECO_RESOURCE_TOOL_UPDATEOutput>;
    /**
     * Create a new workflow in the workspace using Resources 2.0.
     * ## Overview
     * Workflows are powerful automation tools that execute a sequence of steps sequentially to accomplish complex tasks. Each workflow consists of:
     * - **Input Schema**: Defines the data structure and parameters required to start the workflow
     * - **Output Schema**: Defines the final result structure after all steps complete
     * - **Steps**: An ordered array of individual operations that run one after another (alternating between tool calls and code steps)
     * The workflow's final output is determined by the last step in the sequence, which should be a code step that aggregates and returns the desired result.
     * ## Required Data Fields
     * The workflow data must include:
     * - **name**: A descriptive name for the workflow
     * - **definition**: Complete workflow definition with steps and schemas
     * - **status**: Workflow status (draft, active, inactive)
     * Optional fields:
     * - **description**: Additional description of the workflow
     * - **tags**: Array of tags for categorization
     * - **category**: Category for organizing workflows
     * - **version**: Workflow version (defaults to "1.0.0")
     * - **author**: Workflow author information
     * ## Workflow Steps
     * Workflows alternate between two types of steps:
     * ### 1. Tool Call Steps
     * Execute tools from integrations using the workflow input:
     * - **type**: "tool_call"
     * - **def**: Tool call step definition containing:
     * - **name**: Unique identifier within the workflow
     * - **description**: Clear explanation of the step's purpose
     * - **options**: Configuration with retry/timeout settings and custom properties
     * - **tool_name**: The name of the tool to call
     * - **integration**: The integration ID of the integration that provides this tool
     * **Important**: The `integration` property must be set to the integration ID (format: `i:<uuid>`), not the integration name. To find the correct integration ID:
     * 1. Use the `integration_list` tool to get available integrations
     * 2. Look for the integration that provides the tool you need
     * 3. Use the integration's ID (e.g., `i:123e4567-e89b-12d3-a456-426614174000`) in the `integration` property
     * Tool calls receive the workflow input directly. Use code steps before tool calls to transform the input as needed.
     * ### 2. Code Steps
     * Transform data between tool calls:
     * - **type**: "code"
     * - **def**: Code step definition containing:
     * - **name**: Unique identifier within the workflow
     * - **description**: Clear explanation of the step's purpose
     * - **execute**: ES module code with a default async function
     * ### Code Step Execution Function
     * Each code step's execute function follows this pattern:
     * ```javascript
     * export default async function(ctx) {
     * // ctx contains WellKnownOptions helper functions:
     * // - await ctx.readWorkflowInput(): Returns the initial workflow input
     * // - await ctx.readStepResult(stepName): Returns output from a previous step
     * // - await ctx.sleep(name, duration): Sleeps for a specified duration
     * // - await ctx.sleepUntil(name, date): Sleeps until a specified date or timestamp
     * // Transform data between tool calls
     * const input = await ctx.readWorkflowInput();
     * const previousResult = await ctx.readStepResult('previous-step');
     * // Your code logic here
     * return transformedData;
     * }
     * ```
     * ## Final Output
     * The workflow's final output is automatically determined by the last step in the sequence. This should be a code step that:
     * 1. Aggregates data from previous steps using ctx.readStepResult(stepName)
     * 2. Transforms the data to match the workflow's output schema
     * 3. Returns the final result
     * ## Best Practices
     * 1. **Alternating Steps**: Design workflows to alternate between tool calls and code
     * 2. **Final Code Step**: Always end with a code step that aggregates and returns the final result
     * 3. **Input Transformation**: Use code steps before tool calls to transform workflow input as needed
     * 4. **Integration Discovery**: Always use the `integration_list` tool to find the correct integration ID before creating tool_call steps
     * 5. **Minimal Output**: Keep code step outputs minimal to improve performance
     * 6. **Error Handling**: Use retry and timeout configurations appropriately for tool calls
     * 7. **Schema Validation**: Define clear input/output schemas for type safety
     * 8. **Step Independence**: Design steps to be testable in isolation
     * 9. **Business Configuration**: Use options to expose tunable parameters for tool calls
     * 10. **Sequential Execution**: Steps run in order - design accordingly
     * 11. **Data Flow**: Use code to transform data between tool calls
     * The workflow definition will be validated against the existing workflow schema system.
     */
    DECO_RESOURCE_WORKFLOW_CREATE: (
      input: DECO_RESOURCE_WORKFLOW_CREATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_CREATEOutput>;
    /**
     * Delete a workflow from the workspace.
     * This will permanently remove the workflow file from the DECONFIG storage.
     * Use with caution as this action cannot be undone.
     */
    DECO_RESOURCE_WORKFLOW_DELETE: (
      input: DECO_RESOURCE_WORKFLOW_DELETEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_DELETEOutput>;
    /**
     * Read a specific workflow by its Resources 2.0 URI.
     * Returns the complete workflow definition including:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition with input/output schemas
     * - Step definitions (code and tool_call steps)
     * - Execution statistics and timestamps
     */
    DECO_RESOURCE_WORKFLOW_READ: (
      input: DECO_RESOURCE_WORKFLOW_READInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_READOutput>;
    /**
     * Search workflows in the workspace.
     * Supports filtering by:
     * - Workflow title and description
     * - Workflow status (draft, active, inactive)
     * - Workflow tags and categories
     * - Author and version information
     * Use the 'term' parameter for text search across title, description, and tags.
     * Use the 'filters' parameter for structured filtering by status, category, etc.
     */
    DECO_RESOURCE_WORKFLOW_SEARCH: (
      input: DECO_RESOURCE_WORKFLOW_SEARCHInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_SEARCHOutput>;
    /**
     * Update an existing workflow using Resources 2.0.
     * ## Overview
     * You can update any part of the workflow:
     * - Workflow metadata (title, description, status, tags, etc.)
     * - Workflow definition (steps, schemas, etc.)
     * - Execution statistics
     * ## Workflow Structure
     * Workflows are powerful automation tools that execute a sequence of steps sequentially to accomplish complex tasks. Each workflow consists of:
     * - **Input Schema**: Defines the data structure and parameters required to start the workflow
     * - **Output Schema**: Defines the final result structure after all steps complete
     * - **Steps**: An ordered array of individual operations that run one after another (alternating between tool calls and code steps)
     * ## Step Types
     * ### 1. Tool Call Steps
     * Execute tools from integrations using the workflow input:
     * - **type**: "tool_call"
     * - **def**: Tool call step definition containing:
     * - **name**: Unique identifier within the workflow
     * - **description**: Clear explanation of the step's purpose
     * - **options**: Configuration with retry/timeout settings and custom properties
     * - **tool_name**: The name of the tool to call
     * - **integration**: The integration ID of the integration that provides this tool
     * **Important**: The `integration` property must be set to the integration ID (format: `i:<uuid>`), not the integration name. Use the `integration_list` tool to find the correct integration ID.
     * ### 2. Code Steps
     * Transform data between tool calls:
     * - **type**: "code"
     * - **def**: Code step definition containing:
     * - **name**: Unique identifier within the workflow
     * - **description**: Clear explanation of the step's purpose
     * - **execute**: ES module code with a default async function
     * ### Code Step Context
     * Each code step's execute function has access to:
     * ```javascript
     * export default async function(ctx) {
     * // ctx contains WellKnownOptions helper functions:
     * // - await ctx.readWorkflowInput(): Returns the initial workflow input
     * // - await ctx.readStepResult(stepName): Returns output from a previous step
     * // - await ctx.sleep(name, duration): Sleeps for a specified duration
     * // - await ctx.sleepUntil(name, date): Sleeps until a specified date or timestamp
     * // Transform data between tool calls
     * const input = await ctx.readWorkflowInput();
     * const previousResult = await ctx.readStepResult('previous-step');
     * // Your code logic here
     * return transformedData;
     * }
     * ```
     * ## Update Guidelines
     * When updating workflows:
     * 1. **Schema Validation**: The updated workflow definition will be validated against the existing workflow schema system
     * 2. **Step Consistency**: Ensure step names are unique and references are correct
     * 3. **Integration IDs**: Verify integration IDs are still valid using `integration_list`
     * 4. **Output Schema**: Ensure the final code step returns data matching the output schema
     * 5. **Best Practices**: Follow the same best practices as workflow creation
     * The updated workflow definition will be validated against the existing workflow schema system.
     */
    DECO_RESOURCE_WORKFLOW_UPDATE: (
      input: DECO_RESOURCE_WORKFLOW_UPDATEInput,
    ) => Promise<DECO_RESOURCE_WORKFLOW_UPDATEOutput>;
    /**
     * Invoke a tool created with DECO_RESOURCE_TOOL_CREATE
     */
    DECO_TOOL_CALL_TOOL: (
      input: DECO_TOOL_CALL_TOOLInput,
    ) => Promise<DECO_TOOL_CALL_TOOLOutput>;
    /**
     * Invoke the tool passed as input
     */
    DECO_TOOL_RUN_TOOL: (
      input: DECO_TOOL_RUN_TOOLInput,
    ) => Promise<DECO_TOOL_RUN_TOOLOutput>;
    /**
     * Render tool_detail view
     */
    DECO_VIEW_RENDER_TOOL_DETAIL: (
      input: DECO_VIEW_RENDER_TOOL_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_TOOL_DETAILOutput>;
    /**
     * Render workflow_detail view
     */
    DECO_VIEW_RENDER_WORKFLOW_DETAIL: (
      input: DECO_VIEW_RENDER_WORKFLOW_DETAILInput,
    ) => Promise<DECO_VIEW_RENDER_WORKFLOW_DETAILOutput>;
    /**
     * Get the status and output of a workflow run.
     * This tool retrieves the current status and results of a workflow execution, including:
     * - Current execution status (pending, running, completed, failed)
     * - Results from completed steps
     * - Final workflow output (if completed)
     * - Error information (if failed)
     * - Execution logs and timing information
     * Use this tool to monitor workflow progress, retrieve results, or debug failed executions.
     */
    DECO_WORKFLOW_GET_STATUS: (
      input: DECO_WORKFLOW_GET_STATUSInput,
    ) => Promise<DECO_WORKFLOW_GET_STATUSOutput>;
    /**
     * Execute a workflow by URI with optional partial execution and state injection.
     * ## Overview
     * This tool starts a workflow execution using a Resources 2.0 URI. Workflows are sequential automation processes that consist of alternating steps between tool calls (calling integration tools) and code steps (data transformation). Each workflow validates input against its schema and executes steps in order until completion or until stopped at a specified step.
     * ## Parameters
     * ### uri
     * The Resources 2.0 URI of the workflow to execute (e.g., rsc://workflow/my-workflow).
     * ### input
     * The input data passed to the workflow. This data:
     * - Will be validated against the workflow's defined input schema
     * - Is accessible to all steps via `ctx.readWorkflowInput()`
     * - Should match the structure expected by the workflow's first step
     * ### stopAfter (Optional)
     * The name of the step where execution should halt. When specified:
     * - The workflow executes **up to and including** the named step
     * - Execution stops after the specified step completes
     * - Useful for debugging, testing individual steps, or partial workflow execution
     * ### state (Optional)
     * Pre-computed step results to inject into the workflow execution state. Format: `{ "step-name": STEP_RESULT }`
     * This allows you to:
     * - **Skip steps**: Provide expected outputs for steps you want to bypass
     * - **Resume workflows**: Continue from a specific point with known intermediate results
     * - **Test workflows**: Inject mock data to test specific scenarios
     * - **Debug workflows**: Isolate problems by providing known good inputs to later steps
     * ## Return Value
     * Returns an object with:
     * - `runId`: Unique identifier for tracking this workflow execution
     * - `error`: Error message if workflow failed to start (validation errors, missing workflow, etc.)
     */
    DECO_WORKFLOW_START: (
      input: DECO_WORKFLOW_STARTInput,
    ) => Promise<DECO_WORKFLOW_STARTOutput>;
    /**
     * Delete a branch and all its files. This operation cannot be undone.
     */
    DELETE_BRANCH: (input: DELETE_BRANCHInput) => Promise<DELETE_BRANCHOutput>;
    /**
     * Delete a file from a DECONFIG branch
     */
    DELETE_FILE: (input: DELETE_FILEInput) => Promise<DELETE_FILEOutput>;
    /**
     * Compare two branches and get the differences
     */
    DIFF_BRANCH: (input: DIFF_BRANCHInput) => Promise<DIFF_BRANCHOutput>;
    /**
     * Delete a file
     */
    FS_DELETE: (input: FS_DELETEInput) => Promise<FS_DELETEOutput>;
    /**
     * List files from a given bucket given a prefix
     */
    FS_LIST: (input: FS_LISTInput) => Promise<FS_LISTOutput>;
    /**
     * Get a secure temporary link to read a file
     */
    FS_READ: (input: FS_READInput) => Promise<FS_READOutput>;
    /**
     * Get metadata about a file
     */
    FS_READ_METADATA: (
      input: FS_READ_METADATAInput,
    ) => Promise<FS_READ_METADATAOutput>;
    /**
     * Get a secure temporary link to upload a file
     */
    FS_WRITE: (input: FS_WRITEInput) => Promise<FS_WRITEOutput>;
    /**
     * Get the agents usage for the current tenant's wallet
     */
    GET_AGENTS_USAGE: (
      input: GET_AGENTS_USAGEInput,
    ) => Promise<GET_AGENTS_USAGEOutput>;
    /**
     * Get the billing history for the current tenant's wallet
     */
    GET_BILLING_HISTORY: (
      input: GET_BILLING_HISTORYInput,
    ) => Promise<GET_BILLING_HISTORYOutput>;
    /**
     * Get the contracts commits for the current tenant's wallet
     */
    GET_CONTRACTS_COMMITS: (
      input: GET_CONTRACTS_COMMITSInput,
    ) => Promise<GET_CONTRACTS_COMMITSOutput>;
    /**
     * Get the threads usage for the current tenant's wallet
     */
    GET_THREADS_USAGE: (
      input: GET_THREADS_USAGEInput,
    ) => Promise<GET_THREADS_USAGEOutput>;
    /**
     * Get the wallet account for the current tenant
     */
    GET_WALLET_ACCOUNT: (
      input: GET_WALLET_ACCOUNTInput,
    ) => Promise<GET_WALLET_ACCOUNTOutput>;
    /**
     * Get the plan for the current tenant's workspace
     */
    GET_WORKSPACE_PLAN: (
      input: GET_WORKSPACE_PLANInput,
    ) => Promise<GET_WORKSPACE_PLANOutput>;
    /**
     * Delete an app and its worker
     */
    HOSTING_APP_DELETE: (
      input: HOSTING_APP_DELETEInput,
    ) => Promise<HOSTING_APP_DELETEOutput>;
    /**
     * Deploy multiple TypeScript files that use Wrangler for bundling and deployment to Cloudflare Workers. You must provide a package.json file with the necessary dependencies and a wrangler.toml file matching the Workers for Platforms format. Use 'main_module' instead of 'main', and define bindings using the [[bindings]] array, where each binding is a table specifying its type and properties. To add custom Deco bindings, set type = "MCP" in a binding entry (these will be filtered and handled automatically).
     * Set 'preview: true' to create a preview deployment that won't replace the production version. Preview deployments get their own unique URL but are not promoted to production routes.
     * Common patterns:
     * 1. Use a package.json file to manage dependencies:
     * // package.json
     * {
     * "name": "@deco/workers-example",
     * "private": true,
     * "version": "0.0.0",
     * "type": "module",
     * "scripts": {
     * "dev": "deco dev",
     * "gen": "deco gen > env.gen.ts",
     * "setup": "npm i -g deco-cli",
     * "deploy": "wrangler deploy --dry-run --outdir ./dist && deco deploy ./dist"
     * },
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/mcp": "npm:@jsr/deco__mcp@^0.5.6",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.4.0",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }
     * 2. Import dependencies directly in your files:
     * // main.ts
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * 3. Use wrangler.toml to configure your app:
     * // wrangler.toml
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * # You can add any supported binding type as per Workers for Platforms documentation.
     * 4. You should always surround the user fetch with the withRuntime function.
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * You must use the Workers for Platforms TOML format for wrangler.toml. The bindings supports all standard binding types (ai, analytics_engine, assets, browser_rendering, d1, durable_object_namespace, hyperdrive, kv_namespace, mtls_certificate, plain_text, queue, r2_bucket, secret_text, service, tail_consumer, vectorize, version_metadata, etc). For Deco-specific bindings, use type = "MCP".
     * For routes, only custom domains are supported. The user must point their DNS to the script endpoint. $SCRIPT.deco.page using DNS-Only. The user needs to wait for the DNS to propagate before the app will be available.
     * Example of files deployment:
     * [
     * {
     * "path": "package.json",
     * "content": `{
     * "name": "@deco/workers-example",
     * "version": "0.0.0",
     * "type": "module",
     * "dependencies": {
     * "@cloudflare/workers-types": "^4.20250617.0",
     * "@deco/workers-runtime": "npm:@jsr/deco__workers-runtime@^0.2.18",
     * "@mastra/core": "0.12.1",
     * "zod": "^3.25.67"
     * },
     * "devDependencies": {
     * "wrangler": "^4.13.2"
     * },
     * "engines": {
     * "node": ">=20.0.0"
     * }
     * }`
     * },
     * {
     * "path": "main.ts",
     * "content": `
     * import { z } from "zod";
     * import { withRuntime } from "@deco/workers-runtime";
     * const { Workflow, ...workerAPIs } = withRuntime({
     * fetch: async (request: Request, env: any) => {
     * return new Response("Hello from Cloudflare Workers!");
     * }
     * })
     * export { Workflow };
     * export default workerAPIs;
     * `
     * },
     * {
     * "path": "wrangler.toml",
     * "content": `
     * name = "app-slug"
     * compatibility_date = "2025-06-17"
     * main_module = "main.ts"
     * kv_namespaces = [
     * { binding = "TODO", id = "06779da6940b431db6e566b4846d64db" }
     * ]
     * routes = [
     * { pattern = "my.example.com", custom_domain = true }
     * ]
     * browser = { binding = "MYBROWSER" }
     * [triggers]
     * # Schedule cron triggers:
     * crons = [ "*\/3 * * * *", "0 15 1 * *", "59 23 LW * *" ]
     * # This is required when using the Workflow class
     * [[durable_objects.bindings]]
     * name = "DECO_CHAT_WORKFLOW_DO"
     * class_name = "Workflow"
     * [[durable_objects.bindings]]
     * name = "MY_DURABLE_OBJECT"
     * class_name = "MyDurableObject"
     * # This is required when using the Workflow class
     * [[migrations]]
     * tag = "v1"
     * new_classes = ["Workflow", "MyDurableObject"]
     * [ai]
     * binding = "AI"
     * [[queues.consumers]]
     * queue = "queues-web-crawler"
     * max_batch_timeout = 60
     * [[queues.producers]]
     * queue = "queues-web-crawler"
     * binding = "CRAWLER_QUEUE"
     * [[deco.bindings]]
     * type = "MCP"
     * name = "MY_BINDING"
     * value = "INTEGRATION_ID"
     * `
     * }
     * ]
     * Important Notes:
     * - You can access the app workspace by accessing env.DECO_CHAT_WORKSPACE
     * - You can access the app script slug by accessing env.DECO_CHAT_APP_SLUG
     * - Token and workspace can be used to make authenticated requests to the Deco API under https://api.decocms.com
     * - Always use Cloudflare Workers syntax with export default and proper fetch handler signature
     * - When using template literals inside content strings, escape backticks with a backslash (\) or use string concatenation (+)
     * - You must include a package.json file with the @deco/workers-runtime dependency
     * - Dependencies are managed through npm packages in package.json, not npm: or jsr: specifiers
     * - Wrangler will handle the bundling process using the dependencies defined in package.json
     */
    HOSTING_APP_DEPLOY: (
      input: HOSTING_APP_DEPLOYInput,
    ) => Promise<HOSTING_APP_DEPLOYOutput>;
    /**
     * List all deployments for a specific app
     */
    HOSTING_APP_DEPLOYMENTS_LIST: (
      input: HOSTING_APP_DEPLOYMENTS_LISTInput,
    ) => Promise<HOSTING_APP_DEPLOYMENTS_LISTOutput>;
    /**
     * Get info/metadata for an app (including endpoint)
     */
    HOSTING_APP_INFO: (
      input: HOSTING_APP_INFOInput,
    ) => Promise<HOSTING_APP_INFOOutput>;
    /**
     * List all unique workflow names in the workspace
     */
    HOSTING_APP_WORKFLOWS_LIST_NAMES: (
      input: HOSTING_APP_WORKFLOWS_LIST_NAMESInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_NAMESOutput>;
    /**
     * List workflow runs. If workflowName is provided, shows runs for that specific workflow. If not provided, shows recent runs from any workflow.
     */
    HOSTING_APP_WORKFLOWS_LIST_RUNS: (
      input: HOSTING_APP_WORKFLOWS_LIST_RUNSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_LIST_RUNSOutput>;
    /**
     * Get the status of a workflow instance
     */
    HOSTING_APP_WORKFLOWS_STATUS: (
      input: HOSTING_APP_WORKFLOWS_STATUSInput,
    ) => Promise<HOSTING_APP_WORKFLOWS_STATUSOutput>;
    /**
     * List all apps for the current tenant
     */
    HOSTING_APPS_LIST: (
      input: HOSTING_APPS_LISTInput,
    ) => Promise<HOSTING_APPS_LISTOutput>;
    /**
     * Promote a specific deployment to an existing route pattern and update routing cache
     */
    HOSTING_APPS_PROMOTE: (
      input: HOSTING_APPS_PROMOTEInput,
    ) => Promise<HOSTING_APPS_PROMOTEOutput>;
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * Create a new integration
     */
    INTEGRATIONS_CREATE: (
      input: INTEGRATIONS_CREATEInput,
    ) => Promise<INTEGRATIONS_CREATEOutput>;
    /**
     * Delete an integration by id
     */
    INTEGRATIONS_DELETE: (
      input: INTEGRATIONS_DELETEInput,
    ) => Promise<INTEGRATIONS_DELETEOutput>;
    /**
     * Get an integration by id with tools
     */
    INTEGRATIONS_GET: (
      input: INTEGRATIONS_GETInput,
    ) => Promise<INTEGRATIONS_GETOutput>;
    /**
     * List all integrations with their tools
     */
    INTEGRATIONS_LIST: (
      input: INTEGRATIONS_LISTInput,
    ) => Promise<INTEGRATIONS_LISTOutput>;
    /**
     * Update an existing integration
     */
    INTEGRATIONS_UPDATE: (
      input: INTEGRATIONS_UPDATEInput,
    ) => Promise<INTEGRATIONS_UPDATEOutput>;
    /**
     * Add a file content into knowledge base
     */
    KNOWLEDGE_BASE_ADD_FILE: (
      input: KNOWLEDGE_BASE_ADD_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_ADD_FILEOutput>;
    /**
     * Create a knowledge base
     */
    KNOWLEDGE_BASE_CREATE: (
      input: KNOWLEDGE_BASE_CREATEInput,
    ) => Promise<KNOWLEDGE_BASE_CREATEOutput>;
    /**
     * Delete a knowledge base
     */
    KNOWLEDGE_BASE_DELETE: (
      input: KNOWLEDGE_BASE_DELETEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETEOutput>;
    /**
     * Delete a file from the knowledge base
     */
    KNOWLEDGE_BASE_DELETE_FILE: (
      input: KNOWLEDGE_BASE_DELETE_FILEInput,
    ) => Promise<KNOWLEDGE_BASE_DELETE_FILEOutput>;
    /**
     * Forget something
     */
    KNOWLEDGE_BASE_FORGET: (
      input: KNOWLEDGE_BASE_FORGETInput,
    ) => Promise<KNOWLEDGE_BASE_FORGETOutput>;
    /**
     * List all knowledge bases
     */
    KNOWLEDGE_BASE_LIST: (
      input: KNOWLEDGE_BASE_LISTInput,
    ) => Promise<KNOWLEDGE_BASE_LISTOutput>;
    /**
     * List all files in the knowledge base
     */
    KNOWLEDGE_BASE_LIST_FILES: (
      input: KNOWLEDGE_BASE_LIST_FILESInput,
    ) => Promise<KNOWLEDGE_BASE_LIST_FILESOutput>;
    /**
     * Remember something
     */
    KNOWLEDGE_BASE_REMEMBER: (
      input: KNOWLEDGE_BASE_REMEMBERInput,
    ) => Promise<KNOWLEDGE_BASE_REMEMBEROutput>;
    /**
     * Search the knowledge base
     */
    KNOWLEDGE_BASE_SEARCH: (
      input: KNOWLEDGE_BASE_SEARCHInput,
    ) => Promise<KNOWLEDGE_BASE_SEARCHOutput>;
    /**
     * List all branches in the current workspace
     */
    LIST_BRANCHES: (input: LIST_BRANCHESInput) => Promise<LIST_BRANCHESOutput>;
    /**
     * List files in a DECONFIG branch with optional prefix filtering and content inclusion
     */
    LIST_FILES: (input: LIST_FILESInput) => Promise<LIST_FILESOutput>;
    /**
     * Merge another branch into the current one with configurable strategy
     */
    MERGE_BRANCH: (input: MERGE_BRANCHInput) => Promise<MERGE_BRANCHOutput>;
    /**
     * Create a new model
     */
    MODELS_CREATE: (input: MODELS_CREATEInput) => Promise<MODELS_CREATEOutput>;
    /**
     * Delete a model by id
     */
    MODELS_DELETE: (input: MODELS_DELETEInput) => Promise<MODELS_DELETEOutput>;
    /**
     * Get a model by id
     */
    MODELS_GET: (input: MODELS_GETInput) => Promise<MODELS_GETOutput>;
    /**
     * List models for the current user
     */
    MODELS_LIST: (input: MODELS_LISTInput) => Promise<MODELS_LISTOutput>;
    /**
     * Update an existing model
     */
    MODELS_UPDATE: (input: MODELS_UPDATEInput) => Promise<MODELS_UPDATEOutput>;
    /**
     * Create an OAuth code for a given API key
     */
    OAUTH_CODE_CREATE: (
      input: OAUTH_CODE_CREATEInput,
    ) => Promise<OAUTH_CODE_CREATEOutput>;
    /**
     * Pre-authorize an amount of money for the current tenant's wallet
     */
    PRE_AUTHORIZE_AMOUNT: (
      input: PRE_AUTHORIZE_AMOUNTInput,
    ) => Promise<PRE_AUTHORIZE_AMOUNTOutput>;
    /**
     * Create a new prompt
     */
    PROMPTS_CREATE: (
      input: PROMPTS_CREATEInput,
    ) => Promise<PROMPTS_CREATEOutput>;
    /**
     * Delete a prompt by id
     */
    PROMPTS_DELETE: (
      input: PROMPTS_DELETEInput,
    ) => Promise<PROMPTS_DELETEOutput>;
    /**
     * Get a prompt by id
     */
    PROMPTS_GET: (input: PROMPTS_GETInput) => Promise<PROMPTS_GETOutput>;
    /**
     * Get the versions of a prompt
     */
    PROMPTS_GET_VERSIONS: (
      input: PROMPTS_GET_VERSIONSInput,
    ) => Promise<PROMPTS_GET_VERSIONSOutput>;
    /**
     * List prompts for the current workspace
     */
    PROMPTS_LIST: (input: PROMPTS_LISTInput) => Promise<PROMPTS_LISTOutput>;
    /**
     * Rename a prompt version
     */
    PROMPTS_RENAME_VERSION: (
      input: PROMPTS_RENAME_VERSIONInput,
    ) => Promise<PROMPTS_RENAME_VERSIONOutput>;
    /**
     * Search for prompts
     */
    PROMPTS_SEARCH: (
      input: PROMPTS_SEARCHInput,
    ) => Promise<PROMPTS_SEARCHOutput>;
    /**
     * Update an existing prompt
     */
    PROMPTS_UPDATE: (
      input: PROMPTS_UPDATEInput,
    ) => Promise<PROMPTS_UPDATEOutput>;
    /**
     * Put a file in a DECONFIG branch (create or update) with optional conflict detection
     */
    PUT_FILE: (input: PUT_FILEInput) => Promise<PUT_FILEOutput>;
    /**
     * Read a file from a DECONFIG branch
     */
    READ_FILE: (input: READ_FILEInput) => Promise<READ_FILEOutput>;
    /**
     * Redeem a voucher for the current tenant's wallet
     */
    REDEEM_VOUCHER: (
      input: REDEEM_VOUCHERInput,
    ) => Promise<REDEEM_VOUCHEROutput>;
    /**
     * List all apps in the registry for the current workspace
     */
    REGISTRY_LIST_APPS: (
      input: REGISTRY_LIST_APPSInput,
    ) => Promise<REGISTRY_LIST_APPSOutput>;
    /**
     * List published apps by the current workspace
     */
    REGISTRY_LIST_PUBLISHED_APPS: (
      input: REGISTRY_LIST_PUBLISHED_APPSInput,
    ) => Promise<REGISTRY_LIST_PUBLISHED_APPSOutput>;
    /**
     * List all registry scopes
     */
    REGISTRY_LIST_SCOPES: (
      input: REGISTRY_LIST_SCOPESInput,
    ) => Promise<REGISTRY_LIST_SCOPESOutput>;
    /**
     * Publish an app to the registry (automatically claims scope on first use)
     */
    REGISTRY_PUBLISH_APP: (
      input: REGISTRY_PUBLISH_APPInput,
    ) => Promise<REGISTRY_PUBLISH_APPOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Add a custom view or resource to a team
     */
    TEAMS_ADD_VIEW: (
      input: TEAMS_ADD_VIEWInput,
    ) => Promise<TEAMS_ADD_VIEWOutput>;
    /**
     * Remove a custom view or resource from a team
     */
    TEAMS_REMOVE_VIEW: (
      input: TEAMS_REMOVE_VIEWInput,
    ) => Promise<TEAMS_REMOVE_VIEWOutput>;
    /**
     * Get a thread by thread id (without messages)
     */
    THREADS_GET: (input: THREADS_GETInput) => Promise<THREADS_GETOutput>;
    /**
     * Get only the messages for a thread by thread id
     */
    THREADS_GET_MESSAGES: (
      input: THREADS_GET_MESSAGESInput,
    ) => Promise<THREADS_GET_MESSAGESOutput>;
    /**
     * Get the tools_set for a thread by thread id
     */
    THREADS_GET_TOOLS: (
      input: THREADS_GET_TOOLSInput,
    ) => Promise<THREADS_GET_TOOLSOutput>;
    /**
     * List all threads in a workspace with cursor-based pagination and filtering
     */
    THREADS_LIST: (input: THREADS_LISTInput) => Promise<THREADS_LISTOutput>;
    /**
     * Update a thread's metadata
     */
    THREADS_UPDATE_METADATA: (
      input: THREADS_UPDATE_METADATAInput,
    ) => Promise<THREADS_UPDATE_METADATAOutput>;
    /**
     * Update a thread's title
     */
    THREADS_UPDATE_TITLE: (
      input: THREADS_UPDATE_TITLEInput,
    ) => Promise<THREADS_UPDATE_TITLEOutput>;
    /**
     * Activate a trigger
     */
    TRIGGERS_ACTIVATE: (
      input: TRIGGERS_ACTIVATEInput,
    ) => Promise<TRIGGERS_ACTIVATEOutput>;
    /**
     * Create a trigger
     */
    TRIGGERS_CREATE: (
      input: TRIGGERS_CREATEInput,
    ) => Promise<TRIGGERS_CREATEOutput>;
    /**
     * Create a cron trigger
     */
    TRIGGERS_CREATE_CRON: (
      input: TRIGGERS_CREATE_CRONInput,
    ) => Promise<TRIGGERS_CREATE_CRONOutput>;
    /**
     * Create a webhook trigger
     */
    TRIGGERS_CREATE_WEBHOOK: (
      input: TRIGGERS_CREATE_WEBHOOKInput,
    ) => Promise<TRIGGERS_CREATE_WEBHOOKOutput>;
    /**
     * Deactivate a trigger
     */
    TRIGGERS_DEACTIVATE: (
      input: TRIGGERS_DEACTIVATEInput,
    ) => Promise<TRIGGERS_DEACTIVATEOutput>;
    /**
     * Delete a trigger
     */
    TRIGGERS_DELETE: (
      input: TRIGGERS_DELETEInput,
    ) => Promise<TRIGGERS_DELETEOutput>;
    /**
     * Get a trigger by ID
     */
    TRIGGERS_GET: (input: TRIGGERS_GETInput) => Promise<TRIGGERS_GETOutput>;
    /**
     * Get the webhook URL for a trigger
     */
    TRIGGERS_GET_WEBHOOK_URL: (
      input: TRIGGERS_GET_WEBHOOK_URLInput,
    ) => Promise<TRIGGERS_GET_WEBHOOK_URLOutput>;
    /**
     * List all triggers
     */
    TRIGGERS_LIST: (input: TRIGGERS_LISTInput) => Promise<TRIGGERS_LISTOutput>;
    /**
     * Update a trigger
     */
    TRIGGERS_UPDATE: (
      input: TRIGGERS_UPDATEInput,
    ) => Promise<TRIGGERS_UPDATEOutput>;
  }>;
  DECO_CHAT_API: Mcp<{
    /**
     * Call a given tool
     */
    INTEGRATIONS_CALL_TOOL: (
      input: INTEGRATIONS_CALL_TOOLInput,
    ) => Promise<INTEGRATIONS_CALL_TOOLOutput>;
    /**
     * List tools of a given integration
     */
    INTEGRATIONS_LIST_TOOLS: (
      input: INTEGRATIONS_LIST_TOOLSInput,
    ) => Promise<INTEGRATIONS_LIST_TOOLSOutput>;
    /**
     * List all team invites for the current logged in user
     */
    MY_INVITES_LIST: (
      input: MY_INVITES_LISTInput,
    ) => Promise<MY_INVITES_LISTOutput>;
    /**
     * Get the current user's profile
     */
    PROFILES_GET: (input: PROFILES_GETInput) => Promise<PROFILES_GETOutput>;
    /**
     * Update the current user's profile
     */
    PROFILES_UPDATE: (
      input: PROFILES_UPDATEInput,
    ) => Promise<PROFILES_UPDATEOutput>;
    /**
     * Register that the user accessed a project
     */
    PROJECT_ACTIVITY_REGISTER: (
      input: PROJECT_ACTIVITY_REGISTERInput,
    ) => Promise<PROJECT_ACTIVITY_REGISTEROutput>;
    /**
     * List projects for an organization
     */
    PROJECTS_LIST: (input: PROJECTS_LISTInput) => Promise<PROJECTS_LISTOutput>;
    /**
     * List recent projects for the current user based on activity
     */
    PROJECTS_RECENT: (
      input: PROJECTS_RECENTInput,
    ) => Promise<PROJECTS_RECENTOutput>;
    /**
     * Get an app from the registry
     */
    REGISTRY_GET_APP: (
      input: REGISTRY_GET_APPInput,
    ) => Promise<REGISTRY_GET_APPOutput>;
    /**
     * Accept a team invitation
     */
    TEAM_INVITE_ACCEPT: (
      input: TEAM_INVITE_ACCEPTInput,
    ) => Promise<TEAM_INVITE_ACCEPTOutput>;
    /**
     * Delete a team invitation
     */
    TEAM_INVITE_DELETE: (
      input: TEAM_INVITE_DELETEInput,
    ) => Promise<TEAM_INVITE_DELETEOutput>;
    /**
     * Register that the user accessed a team
     */
    TEAM_MEMBER_ACTIVITY_REGISTER: (
      input: TEAM_MEMBER_ACTIVITY_REGISTERInput,
    ) => Promise<TEAM_MEMBER_ACTIVITY_REGISTEROutput>;
    /**
     * Get all members of a team
     */
    TEAM_MEMBERS_GET: (
      input: TEAM_MEMBERS_GETInput,
    ) => Promise<TEAM_MEMBERS_GETOutput>;
    /**
     * Invite users to join a team via email. When no specific roles are provided, use default role: { id: 1, name: 'owner' }
     */
    TEAM_MEMBERS_INVITE: (
      input: TEAM_MEMBERS_INVITEInput,
    ) => Promise<TEAM_MEMBERS_INVITEOutput>;
    /**
     * Remove a member from a team
     */
    TEAM_MEMBERS_REMOVE: (
      input: TEAM_MEMBERS_REMOVEInput,
    ) => Promise<TEAM_MEMBERS_REMOVEOutput>;
    /**
     * Update a team member. Usefull for updating admin status.
     */
    TEAM_MEMBERS_UPDATE: (
      input: TEAM_MEMBERS_UPDATEInput,
    ) => Promise<TEAM_MEMBERS_UPDATEOutput>;
    /**
     * Update a member's role in a team
     */
    TEAM_MEMBERS_UPDATE_ROLE: (
      input: TEAM_MEMBERS_UPDATE_ROLEInput,
    ) => Promise<TEAM_MEMBERS_UPDATE_ROLEOutput>;
    /**
     * Report a bug or idea within a team/project context
     */
    TEAM_REPORT_ISSUE_CREATE: (
      input: TEAM_REPORT_ISSUE_CREATEInput,
    ) => Promise<TEAM_REPORT_ISSUE_CREATEOutput>;
    /**
     * Create a new team role with associated policies and permissions
     */
    TEAM_ROLE_CREATE: (
      input: TEAM_ROLE_CREATEInput,
    ) => Promise<TEAM_ROLE_CREATEOutput>;
    /**
     * Delete a team role and its associated policies (only team-specific roles)
     */
    TEAM_ROLE_DELETE: (
      input: TEAM_ROLE_DELETEInput,
    ) => Promise<TEAM_ROLE_DELETEOutput>;
    /**
     * Get detailed information about a specific team role
     */
    TEAM_ROLE_GET: (input: TEAM_ROLE_GETInput) => Promise<TEAM_ROLE_GETOutput>;
    /**
     * Update a team role and its associated policies
     */
    TEAM_ROLE_UPDATE: (
      input: TEAM_ROLE_UPDATEInput,
    ) => Promise<TEAM_ROLE_UPDATEOutput>;
    /**
     * Get all roles available for a team, including basic deco roles
     */
    TEAM_ROLES_LIST: (
      input: TEAM_ROLES_LISTInput,
    ) => Promise<TEAM_ROLES_LISTOutput>;
    /**
     * Create a new team
     */
    TEAMS_CREATE: (input: TEAMS_CREATEInput) => Promise<TEAMS_CREATEOutput>;
    /**
     * Delete a team by id
     */
    TEAMS_DELETE: (input: TEAMS_DELETEInput) => Promise<TEAMS_DELETEOutput>;
    /**
     * Get a team by slug
     */
    TEAMS_GET: (input: TEAMS_GETInput) => Promise<TEAMS_GETOutput>;
    /**
     * Get the theme for a workspace
     */
    TEAMS_GET_THEME: (
      input: TEAMS_GET_THEMEInput,
    ) => Promise<TEAMS_GET_THEMEOutput>;
    /**
     * List teams for the current user
     */
    TEAMS_LIST: (input: TEAMS_LISTInput) => Promise<TEAMS_LISTOutput>;
    /**
     * Update an existing team including theme customization
     */
    TEAMS_UPDATE: (input: TEAMS_UPDATEInput) => Promise<TEAMS_UPDATEOutput>;
  }>;
}

export const Scopes = {};
